[
    {
        "id": "b17cee1d.29a2a",
        "type": "tab",
        "label": "IIoT Demo Case RPI HW",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e393e3b.e73752",
        "type": "tab",
        "label": "Startup",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6539041e.99e41c",
        "type": "tab",
        "label": "UDP handler",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ef438055.f492a",
        "type": "tab",
        "label": "Get Port Data",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ecfdebb0.d86438",
        "type": "tab",
        "label": "DB Backend",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f2d56325.6c459",
        "type": "tab",
        "label": "BCM",
        "disabled": false,
        "info": ""
    },
    {
        "id": "67804b5a.aa2f64",
        "type": "tab",
        "label": "BOS026R",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ab36cfc2.069bd",
        "type": "tab",
        "label": "BAE00TP",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5bca5d42.a45cb4",
        "type": "tab",
        "label": "BNI0088",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6381dee2.b8bb4",
        "type": "tab",
        "label": "BAW004M",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f2cf66f1.8deb18",
        "type": "tab",
        "label": "BNI00E0",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d85e9c9b.15b92",
        "type": "tab",
        "label": "BOD0020",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6484b8ec.c50888",
        "type": "tab",
        "label": "BES04FK",
        "disabled": false,
        "info": ""
    },
    {
        "id": "236d48bf.526a08",
        "type": "tab",
        "label": "BIP001M",
        "disabled": false,
        "info": ""
    },
    {
        "id": "596e638c.9f6c9c",
        "type": "tab",
        "label": "BML06HE",
        "disabled": false,
        "info": ""
    },
    {
        "id": "dabafc8a.62b67",
        "type": "tab",
        "label": "BTL6PFIOL001",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4f526bfe.7e34d4",
        "type": "tab",
        "label": "BMP000N",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1e08cca7.730233",
        "type": "tab",
        "label": "BCS012N",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ac4471cd.2e0b4",
        "type": "tab",
        "label": "BUS004P",
        "disabled": false,
        "info": ""
    },
    {
        "id": "780da233.7168fc",
        "type": "tab",
        "label": "BTS0002",
        "disabled": false,
        "info": ""
    },
    {
        "id": "77ed1840.b211d8",
        "type": "tab",
        "label": "BNI0008",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3e53e732.db32a8",
        "type": "tab",
        "label": "BOD0026",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2375ac28.7bf134",
        "type": "tab",
        "label": "BOD0023",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f82b1c74.5c04a",
        "type": "tab",
        "label": "DS235",
        "disabled": false,
        "info": ""
    },
    {
        "id": "35ffb60b.29229a",
        "type": "tab",
        "label": "BOS 21 Laser",
        "disabled": true,
        "info": ""
    },
    {
        "id": "b5632274.4d318",
        "type": "tab",
        "label": "BNI007F",
        "disabled": true,
        "info": ""
    },
    {
        "id": "835dee2c.59a9d",
        "type": "tab",
        "label": "IO-Link Device Tool protocol",
        "disabled": true,
        "info": ""
    },
    {
        "id": "7eb9cfc2.9ad25",
        "type": "tab",
        "label": "REST API's",
        "disabled": true,
        "info": "TMG.htm\niolink.htm\ndprop.jsn\nports.jsn\n"
    },
    {
        "id": "83abd8d0.d7cca8",
        "type": "tab",
        "label": "Profinet Startup",
        "disabled": true,
        "info": ""
    },
    {
        "id": "8bf0017.3caeb",
        "type": "tab",
        "label": "queue options",
        "disabled": true,
        "info": ""
    },
    {
        "id": "114f7bfe.eab0d4",
        "type": "tab",
        "label": "Flow 1",
        "disabled": true,
        "info": ""
    },
    {
        "id": "bbff57dc.1117d8",
        "type": "tab",
        "label": "calculate values demo ",
        "disabled": true,
        "info": ""
    },
    {
        "id": "b9703be9.31f4e8",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "Verdana,Verdana,Geneva,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Balluff Dashboard Style",
                "default": "#4B7930",
                "baseColor": "#555555",
                "baseFont": "Verdana,Verdana,Geneva,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#555555",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#074763",
                    "edited": true
                },
                "page-backgroundColor": {
                    "value": "#ececec",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ececec",
                    "edited": true
                },
                "group-textColor": {
                    "value": "#555555",
                    "edited": true
                },
                "group-borderColor": {
                    "value": "#C7D0D8",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#ececec",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#555555",
                    "edited": true
                },
                "widget-backgroundColor": {
                    "value": "#074763",
                    "edited": true
                },
                "widget-borderColor": {
                    "value": "#f7f8fa",
                    "edited": true
                },
                "base-font": {
                    "value": "Verdana,Verdana,Geneva,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "b42bf620.461bd",
        "type": "ui_tab",
        "z": "",
        "name": "BTS",
        "icon": "dashboard",
        "order": 4
    },
    {
        "id": "1c6113cb.b2cde4",
        "type": "ui_group",
        "z": "",
        "name": "Charts",
        "tab": "b42bf620.461bd",
        "order": 1,
        "disp": true,
        "width": "16",
        "collapse": false
    },
    {
        "id": "b8a88d10.9bd6b",
        "type": "ui_group",
        "z": "",
        "name": "Settings",
        "tab": "b42bf620.461bd",
        "order": 2,
        "disp": true,
        "width": "6"
    },
    {
        "id": "bee81607.2c5808",
        "type": "ui_tab",
        "z": "",
        "name": "Gate",
        "icon": "dashboard",
        "order": 13
    },
    {
        "id": "a304ef23.373ec",
        "type": "ui_group",
        "z": "",
        "name": "Gate",
        "tab": "bee81607.2c5808",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "d4cd9dca.8b82",
        "type": "ui_group",
        "z": "",
        "name": "Charts",
        "tab": "5a98e0dd.ae157",
        "order": 1,
        "disp": true,
        "width": "16",
        "collapse": false
    },
    {
        "id": "85a5935b.1b63d",
        "type": "ui_tab",
        "z": "",
        "name": "BAW004M",
        "icon": "dashboard",
        "order": 5
    },
    {
        "id": "37f4315e.30ff7e",
        "type": "ui_tab",
        "z": "",
        "name": "BOS21M LASER",
        "icon": "dashboard",
        "order": 3
    },
    {
        "id": "89c040ae.9e1e4",
        "type": "ui_group",
        "z": "",
        "name": "Counter",
        "tab": "37f4315e.30ff7e",
        "order": 1,
        "disp": true,
        "width": "10"
    },
    {
        "id": "c6b09135.257bc",
        "type": "ui_group",
        "z": "",
        "name": "Process Data",
        "tab": "37f4315e.30ff7e",
        "order": 2,
        "disp": true,
        "width": "6"
    },
    {
        "id": "d54558f8.78fc28",
        "type": "ui_group",
        "z": "",
        "name": "Settings",
        "tab": "37f4315e.30ff7e",
        "order": 3,
        "disp": true,
        "width": "6"
    },
    {
        "id": "384cbe8.1481a42",
        "type": "ui_group",
        "z": "",
        "name": "Levelmode",
        "tab": "9ec13855.37ff98",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "3f6231e8.0a70fe",
        "type": "ui_group",
        "z": "",
        "name": "Switch Ports",
        "tab": "8bb9e040.0f4b6",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "8bb9e040.0f4b6",
        "type": "ui_tab",
        "z": "",
        "name": "BNI0008",
        "icon": "dashboard",
        "order": 6
    },
    {
        "id": "779a9dc2.a33c94",
        "type": "ui_tab",
        "z": "",
        "name": "BNI007F",
        "icon": "dashboard",
        "order": 12
    },
    {
        "id": "b3c38453.b38678",
        "type": "ui_group",
        "z": "",
        "name": "Settings",
        "tab": "779a9dc2.a33c94",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "549a20a6.df062",
        "type": "ui_group",
        "z": "",
        "name": "Level Mode",
        "tab": "779a9dc2.a33c94",
        "order": 2,
        "disp": true,
        "width": "6"
    },
    {
        "id": "1625e8f1.b67c97",
        "type": "ui_group",
        "z": "",
        "name": "Runlight",
        "tab": "779a9dc2.a33c94",
        "order": 3,
        "disp": true,
        "width": "6"
    },
    {
        "id": "7de64984.926b88",
        "type": "ui_tab",
        "z": "",
        "name": "BNI0088",
        "icon": "dashboard",
        "order": 10
    },
    {
        "id": "54484818.fe72d8",
        "type": "ui_group",
        "z": "",
        "name": "Settings",
        "tab": "7de64984.926b88",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "c51df1d6.93ec",
        "type": "ui_group",
        "z": "",
        "name": "Level Mode",
        "tab": "7de64984.926b88",
        "order": 2,
        "disp": true,
        "width": "6"
    },
    {
        "id": "62bead19.bb57f4",
        "type": "ui_group",
        "z": "",
        "name": "Runlight",
        "tab": "7de64984.926b88",
        "order": 3,
        "disp": true,
        "width": "6"
    },
    {
        "id": "ef36be97.44fce",
        "type": "ui_tab",
        "z": "",
        "name": "BOS026R",
        "icon": "dashboard",
        "order": 2
    },
    {
        "id": "32ee9a7b.eeac46",
        "type": "ui_group",
        "z": "",
        "name": "Settings",
        "tab": "ef36be97.44fce",
        "order": 4,
        "disp": false,
        "width": "7",
        "collapse": false
    },
    {
        "id": "57f90ca1.1cfe44",
        "type": "ui_group",
        "z": "",
        "name": "Hardware Charts",
        "tab": "e3d1f276.73d11",
        "order": 2,
        "disp": true,
        "width": "21",
        "collapse": false
    },
    {
        "id": "e3d1f276.73d11",
        "type": "ui_tab",
        "z": "",
        "name": "RPi Control",
        "icon": "dashboard",
        "order": 19
    },
    {
        "id": "58bdd1e1.5b2db",
        "type": "ui_group",
        "z": "",
        "name": "Text Data",
        "tab": "ef36be97.44fce",
        "order": 3,
        "disp": false,
        "width": "7",
        "collapse": false
    },
    {
        "id": "549be9c0.957798",
        "type": "ui_group",
        "z": "",
        "name": "Charts",
        "tab": "ef36be97.44fce",
        "order": 2,
        "disp": false,
        "width": "16",
        "collapse": false
    },
    {
        "id": "f562e9f2.314738",
        "type": "ui_group",
        "z": "",
        "name": "Raspberry Pi Shutdown",
        "tab": "e3d1f276.73d11",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "28da6ba0.bd74d4",
        "type": "ui_tab",
        "z": "",
        "name": "BTL",
        "icon": "dashboard",
        "order": 7
    },
    {
        "id": "7e32a54a.31c4fc",
        "type": "ui_group",
        "z": "",
        "name": "Charts",
        "tab": "28da6ba0.bd74d4",
        "disp": true,
        "width": "20",
        "collapse": false
    },
    {
        "id": "45ada42d.6144fc",
        "type": "ui_tab",
        "z": "",
        "name": "BAE00TP",
        "icon": "dashboard",
        "order": 8
    },
    {
        "id": "bdb4d3fd.7c188",
        "type": "ui_group",
        "z": "",
        "name": "Gauges",
        "tab": "45ada42d.6144fc",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "62b36233.dc087c",
        "type": "ui_group",
        "z": "",
        "name": "Text Data",
        "tab": "45ada42d.6144fc",
        "order": 3,
        "disp": true,
        "width": "8",
        "collapse": false
    },
    {
        "id": "b539ba.2711f648",
        "type": "ui_group",
        "z": "",
        "name": "Charts",
        "tab": "45ada42d.6144fc",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "9ec13855.37ff98",
        "type": "ui_tab",
        "z": "",
        "name": "BNI00E0",
        "icon": "dashboard",
        "order": 11
    },
    {
        "id": "8db4af61.7cf22",
        "type": "ui_tab",
        "z": "",
        "name": "IO-Link Master",
        "icon": "dashboard",
        "order": 17
    },
    {
        "id": "6cad7ab4.1adf04",
        "type": "ui_group",
        "z": "",
        "name": "Settings",
        "tab": "8db4af61.7cf22",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "5a98e0dd.ae157",
        "type": "ui_tab",
        "z": "",
        "name": "BUS004P",
        "icon": "dashboard",
        "order": 9
    },
    {
        "id": "18a8eec0.db28e1",
        "type": "ui_group",
        "z": "",
        "name": "Charts",
        "tab": "85a5935b.1b63d",
        "order": 1,
        "disp": true,
        "width": "16",
        "collapse": false
    },
    {
        "id": "c613f189.13fdb",
        "type": "ui_group",
        "z": "",
        "name": "Settings",
        "tab": "9ec13855.37ff98",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "80b83639.697f88",
        "type": "ui_group",
        "z": "",
        "name": "Charts",
        "tab": "6b3803d1.90c4fc",
        "disp": true,
        "width": "16",
        "collapse": false
    },
    {
        "id": "4ca7dd65.2c30a4",
        "type": "ui_tab",
        "z": "",
        "name": "BOD0026",
        "icon": "dashboard",
        "order": 14
    },
    {
        "id": "6b3803d1.90c4fc",
        "type": "ui_tab",
        "z": "",
        "name": "BOD0020",
        "icon": "dashboard",
        "order": 15
    },
    {
        "id": "b54330e.904bcd",
        "type": "ui_group",
        "z": "",
        "name": "Charts",
        "tab": "f27d6108.8e7c5",
        "disp": true,
        "width": "16",
        "collapse": false
    },
    {
        "id": "3a672be2.b96144",
        "type": "ui_tab",
        "z": "",
        "name": "BSP008A",
        "icon": "dashboard",
        "order": 16
    },
    {
        "id": "44efe4f5.c287fc",
        "type": "ui_group",
        "z": "",
        "name": "Charts",
        "tab": "3fdf5b17.672934",
        "order": 1,
        "disp": true,
        "width": "16",
        "collapse": false
    },
    {
        "id": "b05782d0.a3348",
        "type": "ui_group",
        "z": "",
        "name": "Charts",
        "tab": "9ec13855.37ff98",
        "order": 3,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "91206e30.71aad8",
        "type": "influxdb",
        "z": "",
        "hostname": "localhost",
        "port": "8086",
        "protocol": "http",
        "database": "test",
        "name": "test Database",
        "usetls": false,
        "tls": ""
    },
    {
        "id": "c6421bfe.84a3a8",
        "type": "influxdb",
        "z": "",
        "hostname": "localhost",
        "port": "8086",
        "protocol": "http",
        "database": "democase",
        "name": "",
        "usetls": false,
        "tls": ""
    },
    {
        "id": "3fdf5b17.672934",
        "type": "ui_tab",
        "z": "",
        "name": "BCS012N",
        "icon": "dashboard",
        "order": 18
    },
    {
        "id": "94cf6fe8.94f07",
        "type": "ui_group",
        "z": "",
        "name": "Charts",
        "tab": "3a672be2.b96144",
        "order": 2,
        "disp": true,
        "width": "16",
        "collapse": false
    },
    {
        "id": "1d61c8d2.bcba67",
        "type": "ui_tab",
        "z": "",
        "name": "BES04FK",
        "icon": "dashboard",
        "order": 20
    },
    {
        "id": "5241fa79.e92134",
        "type": "ui_group",
        "z": "",
        "name": "Charts",
        "tab": "1d61c8d2.bcba67",
        "disp": true,
        "width": "16",
        "collapse": false
    },
    {
        "id": "ddead2be.c5fed",
        "type": "ui_group",
        "z": "",
        "name": "Text Values",
        "tab": "1d61c8d2.bcba67",
        "disp": true,
        "width": "10",
        "collapse": false
    },
    {
        "id": "f27d6108.8e7c5",
        "type": "ui_tab",
        "z": "",
        "name": "BOD0023",
        "icon": "dashboard",
        "order": 21
    },
    {
        "id": "9036748d.d520c8",
        "type": "ui_group",
        "z": "",
        "name": "Charts",
        "tab": "4ca7dd65.2c30a4",
        "disp": true,
        "width": "16",
        "collapse": false
    },
    {
        "id": "bbbfa188.bb1d9",
        "type": "ui_group",
        "z": "",
        "name": "Charts",
        "tab": "b72e38e4.126ea8",
        "disp": true,
        "width": "16",
        "collapse": false
    },
    {
        "id": "7d753463.86cf2c",
        "type": "ui_group",
        "z": "",
        "name": "Text",
        "tab": "b72e38e4.126ea8",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "b72e38e4.126ea8",
        "type": "ui_tab",
        "z": "",
        "name": "BOD0020",
        "icon": "dashboard",
        "order": 5
    },
    {
        "id": "2a62901c.c0225",
        "type": "ui_group",
        "z": "",
        "name": "Charts",
        "tab": "704d6cbe.3a7884",
        "order": 1,
        "disp": true,
        "width": "20",
        "collapse": false
    },
    {
        "id": "704d6cbe.3a7884",
        "type": "ui_tab",
        "z": "",
        "name": "BIP001M",
        "icon": "dashboard",
        "order": 7
    },
    {
        "id": "b663cdc1.4e506",
        "type": "ui_group",
        "z": "",
        "name": "Charts",
        "tab": "6761980.2e38668",
        "order": 1,
        "disp": true,
        "width": "20",
        "collapse": false
    },
    {
        "id": "6761980.2e38668",
        "type": "ui_tab",
        "z": "",
        "name": "BML06HE",
        "icon": "dashboard",
        "order": 8
    },
    {
        "id": "defd420a.b4117",
        "type": "ui_tab",
        "z": "",
        "name": "BMP000N",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3af13bb4.dc9ea4",
        "type": "ui_group",
        "z": "",
        "name": "Charts",
        "tab": "defd420a.b4117",
        "disp": true,
        "width": "15",
        "collapse": false
    },
    {
        "id": "b6782b24.1bb138",
        "type": "ui_group",
        "z": "",
        "name": "Text Values",
        "tab": "defd420a.b4117",
        "disp": true,
        "width": "15",
        "collapse": false
    },
    {
        "id": "a279373e.095938",
        "type": "function",
        "z": 0,
        "name": "",
        "func": "var hexString = msg.payload;\n\n//Seperate the String into 2 parts and convert them into binary. \nvar intone = parseInt(hexString.substr(0,8),16).toString(2).padStart(32,'0');\nvar inttwo = parseInt(hexString.substr(8,16),16).toString(2).padStart(32,'0');\nmsg.intone = intone;\nmsg.inttwo = inttwo;\n\n//calculate the sign\nif (intone.substr(0,1) == \"0\"){\n    var sign = 1;\n}else if (intone.substr(0,1) == \"1\"){\n    var sign = -1;\n}\nmsg.sign = sign;\n//calculate the exponent Bias 1023 for 64 bit...:\nvar expo = (parseInt(intone.substr(1,11),2) - 1023);\nmsg.expo = expo;\n\n//calculate the mantissa: \n//move the dot according to the exponent, cut the front and the back, convert to decimal\n\nvar bytes = (1+\"\"+intone.substr(12,32)+\"\"+inttwo);\nmsg.bytes = bytes;\nvar bef = parseInt(bytes.substr(0,(1+expo)),2);\nvar after = parseInt(bytes.substr((1+expo), bytes.length),2);\nvar value = bef+\".\"+after;\n\n\nmsg.decimal = (sign)*(value)\n\n//msg.mant = mant;\n\n//calculate the Decimal Value... \n//msg.dec = sign*expo*mant;\n\n\n\n\n/*\nvar i = parseInt(msg.payload,16);\nmsg.i = i;\n\n\nvar sign = ( i >> 31 ) ? -1 : 1;\nvar exp = Math.pow( 2, ( ( i >> 51 ) & 0xFF ) - 1023 );\nvar mantissa = 1 + ( ( i & ( ( 1 << 51 ) - 1 ) ) / Math.pow( 2, 51 ) );\n\nmsg.dist = (sign * exp * mantissa);\n\nmsg.i = i;\n\nmsg.sign = sign;\nmsg.exp = exp;\nmsg.mantissa = mantissa;\nmsg.bits = i.toString(2);\n*/\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 420,
        "wires": [
            [
                "749f6933.cdcd78"
            ]
        ]
    },
    {
        "id": "a1ee0287.4160e",
        "type": "inject",
        "z": 0,
        "name": "4028E4154C985F07  C028E4154C985F07",
        "topic": "",
        "payload": "4028E4154C985F07",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 205,
        "y": 195,
        "wires": [
            [
                "b2172f96.d3db5",
                "a279373e.095938"
            ]
        ]
    },
    {
        "id": "b2172f96.d3db5",
        "type": "debug",
        "z": 0,
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 500,
        "y": 195,
        "wires": []
    },
    {
        "id": "749f6933.cdcd78",
        "type": "debug",
        "z": 0,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 740,
        "y": 345,
        "wires": []
    },
    {
        "id": "2ef06ade.dfefc6",
        "type": "comment",
        "z": 0,
        "name": "expectaitions",
        "info": "\nsign \nexponent \nmantissa\n",
        "x": 280,
        "y": 525,
        "wires": []
    },
    {
        "id": "91b67913.8cb5c8",
        "type": "inject",
        "z": 0,
        "name": "4028E4154C985F07  C028E4154C985F07",
        "topic": "",
        "payload": "C028E4154C985F07",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 205,
        "y": 240,
        "wires": [
            [
                "a279373e.095938"
            ]
        ]
    },
    {
        "id": "9c73c6c4.2c6608",
        "type": "function",
        "z": "835dee2c.59a9d",
        "name": "AL_WriteReq",
        "func": "//msg.Start = '09 00';//9 + Length of Data, 00\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '03';\nmsg.IOLPort = '00';\nmsg.LowIndex = '51';\nmsg.HighIndex = '00';\nmsg.SubIndex = '00';\nmsg.LengthOfData = '09';\nmsg.Data = '03';\n\nif ((9 + parseInt(msg.LengthOfData)) <16) {\n    msg.Start = \"0\"+ (9 + parseInt(msg.LengthOfData)).toString(16) + \" 00\";\n} else { \n    msg.Start = (9 + parseInt(msg.LengthOfData)).toString(16)+ \" 00\";\n}\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex +\" \"+ msg.LengthOfData +\" \"+ msg.Data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "d511f585.f6d048",
        "type": "function",
        "z": "835dee2c.59a9d",
        "name": "AL_ReadReq",
        "func": "msg.Start = '08 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '02'; // Kommando\nmsg.IOLPort = '00'; //Port Nummer\nmsg.LowIndex = '52'; //IO-Link Index \nmsg.HighIndex = '00'; //IO-Link Index (meiﬂtens 00)\nmsg.SubIndex = '01'; //IO-Link SubIndex \n\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "be389cfd.14bf1",
        "type": "function",
        "z": "835dee2c.59a9d",
        "name": "WriteProcessDataReq",
        "func": "//msg.Start = '05 00';//5 + Length of Data, 00\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '0B'; // In Hex\nmsg.IOLPort = '00'; // In Hex\nmsg.LengthOfData = '01'; //in count of Hex Bytes\nmsg.Data = '03'; //port data in HEX\nmsg.PL = msg.payload; //Payload of inject\n\n\nif ((5+parseInt(msg.LengthOfData)) <15) {\n    msg.Start = \"0\"+ (5+parseInt(msg.LengthOfData)).toString(16) + \" 00\";\n} else { \n    msg.Start = (5+parseInt(msg.LengthOfData)).toString(16)+ \" 00\";\n}\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.Data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "7fbd98ed.19aa48",
        "type": "function",
        "z": "835dee2c.59a9d",
        "name": "ReadProcessDataReq",
        "func": "msg.Start = '05 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02 \nmsg.Command = '0A'; // Command number in HEX\nmsg.IOLPort = '00'; //Port Nummer 255 for all Ports\n\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "9b6da84f.dd18a8",
        "type": "function",
        "z": "835dee2c.59a9d",
        "name": "SM_SetPortConfig tdb... Port Konfigurieren",
        "func": "msg.Start = '36 00';//36 rev2, 44 rev3, 00\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '0F'; // In Hex\nmsg.IOLPort = '00'; // In Hex\nmsg.PortModeDetail = '01'; //in count of Hex Bytes\nmsg.Data = '03'; //port data in HEX\nmsg.PL = msg.payload; //Payload of inject\n\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.Data +\" \"+ msg.PortModeDetail;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "11f2521c.390fae",
        "type": "function",
        "z": "835dee2c.59a9d",
        "name": "GetPortConfig tdb... Wie ist der Port Konfiguriert?",
        "func": "msg.Start = '36 00';//36 rev2, 44 rev3, 00\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '0F'; // In Hex\nmsg.IOLPort = '00'; // In Hex\nmsg.PortModeDetail = '01'; //in count of Hex Bytes\nmsg.Data = '03'; //port data in HEX\nmsg.PL = msg.payload; //Payload of inject\n\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.Data +\" \"+ msg.PortModeDetail;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "c2009798.a8c268",
        "type": "function",
        "z": "835dee2c.59a9d",
        "name": "SM_GetMasterConfig tdb... wie ist Master konfiguriert",
        "func": "msg.Start = '36 00';//36 rev2, 44 rev3, 00\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '0F'; // In Hex\nmsg.IOLPort = '00'; // In Hex\nmsg.PortModeDetail = '01'; //in count of Hex Bytes\nmsg.Data = '03'; //port data in HEX\nmsg.PL = msg.payload; //Payload of inject\n\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.Data +\" \"+ msg.PortModeDetail;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "acbae3ff.b5f9d",
        "type": "function",
        "z": "835dee2c.59a9d",
        "name": "SM_GetModeRequest tdb... was ist angeschlossen",
        "func": "msg.Start = '36 00';//36 rev2, 44 rev3, 00\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '0F'; // In Hex\nmsg.IOLPort = '00'; // In Hex\nmsg.PortModeDetail = '01'; //in count of Hex Bytes\nmsg.Data = '03'; //port data in HEX\nmsg.PL = msg.payload; //Payload of inject\n\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.Data +\" \"+ msg.PortModeDetail;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "2436e2c.9cf8b1e",
        "type": "change",
        "z": "835dee2c.59a9d",
        "name": "Set Hex String  Connect ",
        "rules": [
            {
                "t": "set",
                "p": "hex",
                "pt": "msg",
                "to": "1A 00 02 99 00 05 49 4f 2d 4c 69 6e 6b 2d 44 65 76 69 63 65 2d 54 6f 6f 6c 00",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "5b9d1bfc.b9eb14",
        "type": "udp in",
        "z": "835dee2c.59a9d",
        "name": "",
        "iface": "",
        "port": "2000",
        "ipv": "udp4",
        "multicast": "false",
        "group": "",
        "datatype": "buffer",
        "x": 720,
        "y": 680,
        "wires": [
            [
                "5f7dfd0d.822444"
            ]
        ]
    },
    {
        "id": "d489db05.6417d8",
        "type": "udp out",
        "z": "835dee2c.59a9d",
        "name": "",
        "addr": "",
        "iface": "",
        "port": "",
        "ipv": "udp4",
        "outport": "2000",
        "base64": false,
        "multicast": "false",
        "x": 550,
        "y": 680,
        "wires": []
    },
    {
        "id": "d5a1e4ae.6f92f8",
        "type": "function",
        "z": "835dee2c.59a9d",
        "name": "Set Payload to Buffer",
        "func": "var string = msg.hex.replace(/\\s/g,'');\nmsg.ip = msg.host;\nmsg.port = '1999';\nmsg.payload = Buffer.from(string,\"hex\");\n\nreturn msg;\n\n//msg.payload = Buffer.from(msg.payload, \"hex\");\n",
        "outputs": 1,
        "noerr": 0,
        "x": 320,
        "y": 680,
        "wires": [
            [
                "d489db05.6417d8"
            ]
        ]
    },
    {
        "id": "acc92f0b.8905d",
        "type": "change",
        "z": "835dee2c.59a9d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "host",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 110,
        "y": 680,
        "wires": [
            [
                "d5a1e4ae.6f92f8"
            ]
        ]
    },
    {
        "id": "5f7dfd0d.822444",
        "type": "function",
        "z": "835dee2c.59a9d",
        "name": "transform Return",
        "func": "//Original Object from BNI;\nmsg.returnObject = msg.payload;\n\n//Object to tidy Hex string\nmsg.response = msg.payload.toString('hex').match(/.{2}/g).join(' ');\nmsg.BNIPort = msg.returnObject[4]; //Byte 4 gives back the Port\n\n\n//which Command was returned;\nmsg.command = msg.returnObject[3]; //Byte 3 gives Back the Command\nmsg.dataLength = undefined;\n\n\nswitch ( msg.command )\n{\ncase 10: //ReadProcessData\n    if ( msg.BNIPort == 255 )\n    {\n        msg.portData = [];\n        var dataLength = (msg.returnObject[0] | ( msg.returnObject[1] << 8 ))-5;\n        var offset = 5;\n        var itemLength;\n\n        while ( dataLength > 0 )\n        {\n            itemLength = msg.returnObject[ offset ];\n            \n            if ( itemLength + 1 > dataLength )\n            {\n                // Error - data says it's longer than the buffer.\n                break;\n            }\n            \n            if ( itemLength < 1 )\n            {\n                // Error - invalid data length\n                break;\n            }\n\n          msg.portData.push({\n                \"data\":    msg.returnObject.slice( offset + 1, offset + itemLength ),\n      \"PDvalid\": msg.returnObject[ offset + itemLength ]\n            });\n\n            offset += itemLength + 1;\n     dataLength -= itemLength + 1;\n        }\n    }\n    else\n    {\n        msg.dataLength = (msg.returnObject[0] | ( msg.returnObject[1] << 8 ))-6;\n        msg.PDValid = msg.returnObject[msg.returnObject.length-1];\n   }\n    break;\ncase 11: //WriteProcessData\n    break;\ncase 9: //ALReadReq\n    break;\ncase 8: //ALWriteReq\n    break;\ncase 6: //ALReadError\n    break;\ncase 7: //ALWriteError\n    break;\ndefault:\n    break;\n}\n\nreturn msg;\n\n//toDos: read all Process Data muss noch ausgewerte werden. 09 bei BOS21 in PD valid bedeutet LED aus... ",
        "outputs": 1,
        "noerr": 0,
        "x": 910,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "fdff284d.5ff0f8",
        "type": "change",
        "z": "7eb9cfc2.9ad25",
        "name": "Set Port 0 to IO-Link",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "UDP_Packet=08.00.02.02.00.52.00.01",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 627,
        "y": 248,
        "wires": [
            [
                "ba297ba5.c2de48"
            ]
        ]
    },
    {
        "id": "ba297ba5.c2de48",
        "type": "http request",
        "z": "7eb9cfc2.9ad25",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 816,
        "y": 248,
        "wires": [
            [
                "12ce502b.9b453",
                "77d3dbe8.c924c4"
            ]
        ]
    },
    {
        "id": "b54e7b.dee61188",
        "type": "change",
        "z": "7eb9cfc2.9ad25",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "http://192.168.0.50/TMG.htm",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 437,
        "y": 248,
        "wires": [
            [
                "fdff284d.5ff0f8"
            ]
        ]
    },
    {
        "id": "9471636e.2f97c",
        "type": "debug",
        "z": "7eb9cfc2.9ad25",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1452,
        "y": 331,
        "wires": []
    },
    {
        "id": "b8aa2375.50efc",
        "type": "debug",
        "z": "7eb9cfc2.9ad25",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1239,
        "y": 331,
        "wires": []
    },
    {
        "id": "12ce502b.9b453",
        "type": "function",
        "z": "7eb9cfc2.9ad25",
        "name": "parse answertarget",
        "func": "var IOtemp = msg.payload.match(/innerHTML\\s*=\\s*\"([^\"]+)\"/);\nvar returnMsg = { payload: null };\n\nif (IOtemp !== null){\n    returnMsg.payload = IOtemp[1];\n}\nelse {returnMsg.payload = null }\n\nreturn returnMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1010,
        "y": 248,
        "wires": [
            [
                "b8aa2375.50efc",
                "5ad5aa05.d59c64"
            ]
        ]
    },
    {
        "id": "5ad5aa05.d59c64",
        "type": "function",
        "z": "7eb9cfc2.9ad25",
        "name": "Calc Temp",
        "func": "var sub1 = msg.payload.substr(18, 2);\n\nmsg.temp = parseInt(sub1 ,16);\nreturn {payload : msg.temp};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1241,
        "y": 249,
        "wires": [
            [
                "9471636e.2f97c"
            ]
        ]
    },
    {
        "id": "4e8e5979.2117b8",
        "type": "debug",
        "z": "7eb9cfc2.9ad25",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1054,
        "y": 522,
        "wires": []
    },
    {
        "id": "f721182f.287f08",
        "type": "change",
        "z": "7eb9cfc2.9ad25",
        "name": "Set String",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Port=0&Index=82&SubIndex=1&Control=3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 665,
        "y": 404,
        "wires": [
            [
                "ef460183.31556"
            ]
        ]
    },
    {
        "id": "ef460183.31556",
        "type": "http request",
        "z": "7eb9cfc2.9ad25",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 863,
        "y": 405,
        "wires": [
            [
                "4e8e5979.2117b8",
                "2c2e79ac.d112a6"
            ]
        ]
    },
    {
        "id": "acf06f62.3eb03",
        "type": "change",
        "z": "7eb9cfc2.9ad25",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "http://192.168.0.50/iolink.htm",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.Content-Type",
                "pt": "msg",
                "to": "application/x-www-form-urlencoded",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 459,
        "y": 403,
        "wires": [
            [
                "f721182f.287f08"
            ]
        ]
    },
    {
        "id": "2c2e79ac.d112a6",
        "type": "function",
        "z": "7eb9cfc2.9ad25",
        "name": "parse answertarget",
        "func": "var IOtemp = msg.payload.match(/elemResult.value\\s*=\\s*\"([^\"]+)\"/);\nvar returnMsg = { payload: null };\n\nif (IOtemp !== null){\n    returnMsg.payload = IOtemp[1];\n}\nelse {returnMsg.payload = null }\n\nreturn returnMsg;\n\n//elemResult.value = \"2D\"",
        "outputs": 1,
        "noerr": 0,
        "x": 1074,
        "y": 413,
        "wires": [
            [
                "5bf58e74.7987b",
                "b445956.4941968"
            ]
        ]
    },
    {
        "id": "5bf58e74.7987b",
        "type": "debug",
        "z": "7eb9cfc2.9ad25",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1265,
        "y": 523,
        "wires": []
    },
    {
        "id": "b445956.4941968",
        "type": "function",
        "z": "7eb9cfc2.9ad25",
        "name": "Calc Temp",
        "func": "var sub1 = msg.payload;\n\nmsg.temp = parseInt(sub1 ,16);\nreturn {payload : msg.temp};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1303,
        "y": 413,
        "wires": [
            [
                "80b00974.0cf448"
            ]
        ]
    },
    {
        "id": "80b00974.0cf448",
        "type": "debug",
        "z": "7eb9cfc2.9ad25",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1487,
        "y": 526,
        "wires": []
    },
    {
        "id": "77d3dbe8.c924c4",
        "type": "debug",
        "z": "7eb9cfc2.9ad25",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1038,
        "y": 336,
        "wires": []
    },
    {
        "id": "be6dbc90.43a1c",
        "type": "inject",
        "z": "7eb9cfc2.9ad25",
        "name": "BNI General",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "5",
        "crontab": "",
        "once": false,
        "x": 124,
        "y": 415,
        "wires": [
            [
                "1fc69358.33575d"
            ]
        ]
    },
    {
        "id": "1fc69358.33575d",
        "type": "function",
        "z": "7eb9cfc2.9ad25",
        "name": "control",
        "func": "if (msg.topic === \"gate\") {\n    context.pass = (msg.payload === true) ? true : false;\n    return null;  // exit out early as it's just the control\n}\nif (context.pass) {\n    return msg; // if enabled pass msg\n}\nreturn null; // or drop it",
        "outputs": 1,
        "noerr": 0,
        "x": 308,
        "y": 400,
        "wires": [
            [
                "acf06f62.3eb03"
            ]
        ]
    },
    {
        "id": "d36498fc.534b08",
        "type": "ui_slider",
        "z": "b5632274.4d318",
        "name": "Brightness Slider",
        "label": "Brightness",
        "group": "b3c38453.b38678",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "",
        "min": "16",
        "max": "127",
        "step": 1,
        "x": 410,
        "y": 300,
        "wires": [
            [
                "396a9005.ee2c9"
            ]
        ]
    },
    {
        "id": "37c8775b.2c8a98",
        "type": "ui_button",
        "z": "b5632274.4d318",
        "name": "",
        "group": "1625e8f1.b67c97",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Runlight",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "02",
        "payloadType": "str",
        "topic": "",
        "x": 360,
        "y": 620,
        "wires": [
            [
                "daecce3e.d8fa1"
            ]
        ]
    },
    {
        "id": "88cbcd8c.bfc16",
        "type": "change",
        "z": "b5632274.4d318",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "host",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 380,
        "wires": [
            [
                "c1f10ced.40aa2"
            ]
        ]
    },
    {
        "id": "c1f10ced.40aa2",
        "type": "function",
        "z": "b5632274.4d318",
        "name": "Set Payload to Buffer",
        "func": "var string = msg.hex.replace(/\\s/g,'');\nmsg.ip = msg.host;\nmsg.port = '1999';\nmsg.payload = Buffer.from(string,\"hex\");\n\nreturn msg;\n\n//msg.payload = Buffer.from(msg.payload, \"hex\");\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1220,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "7ba96a7b.93f284",
        "type": "ui_dropdown",
        "z": "b5632274.4d318",
        "name": "Color",
        "label": "Runlight Color",
        "place": "Select option",
        "group": "1625e8f1.b67c97",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "options": [
            {
                "label": "OFF",
                "value": "00",
                "type": "str"
            },
            {
                "label": "Green",
                "value": "01",
                "type": "str"
            },
            {
                "label": "Red",
                "value": "02",
                "type": "str"
            },
            {
                "label": "Yellow",
                "value": "03",
                "type": "str"
            },
            {
                "label": "Blue",
                "value": "04",
                "type": "str"
            },
            {
                "label": "White",
                "value": "07",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "RunlightColor",
        "x": 350,
        "y": 540,
        "wires": [
            [
                "d8c628f9.aaa198"
            ]
        ]
    },
    {
        "id": "a361162b.ad0d98",
        "type": "ui_dropdown",
        "z": "b5632274.4d318",
        "name": "Color Background",
        "label": "Background Color",
        "place": "Select option",
        "group": "1625e8f1.b67c97",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "options": [
            {
                "label": "OFF",
                "value": "00",
                "type": "str"
            },
            {
                "label": "Green",
                "value": "01",
                "type": "str"
            },
            {
                "label": "Red",
                "value": "02",
                "type": "str"
            },
            {
                "label": "Yellow",
                "value": "03",
                "type": "str"
            },
            {
                "label": "Blue",
                "value": "04",
                "type": "str"
            },
            {
                "label": "White",
                "value": "07",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 390,
        "y": 580,
        "wires": [
            [
                "d044ba7e.435b48"
            ]
        ]
    },
    {
        "id": "9404169e.5ef458",
        "type": "inject",
        "z": "b5632274.4d318",
        "name": "Init Color",
        "topic": "",
        "payload": "03",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 180,
        "y": 580,
        "wires": [
            [
                "d044ba7e.435b48"
            ]
        ]
    },
    {
        "id": "88f57a8d.9e31c8",
        "type": "inject",
        "z": "b5632274.4d318",
        "name": "Init Color",
        "topic": "",
        "payload": "02",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 180,
        "y": 540,
        "wires": [
            [
                "d8c628f9.aaa198"
            ]
        ]
    },
    {
        "id": "7a449efc.53282",
        "type": "ui_button",
        "z": "b5632274.4d318",
        "name": "",
        "group": "b3c38453.b38678",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "OFF",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "00",
        "payloadType": "str",
        "topic": "",
        "x": 370,
        "y": 360,
        "wires": [
            [
                "493fd131.72221"
            ]
        ]
    },
    {
        "id": "1dee33db.aeeaac",
        "type": "comment",
        "z": "b5632274.4d318",
        "name": "Smartlight Interaktionen",
        "info": "BNI IOL-801-000-Z036\n\n2 byte",
        "x": 200,
        "y": 240,
        "wires": []
    },
    {
        "id": "352aad5d.adc332",
        "type": "ui_button",
        "z": "b5632274.4d318",
        "name": "",
        "group": "549a20a6.df062",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "level Mode",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "01",
        "payloadType": "str",
        "topic": "",
        "x": 370,
        "y": 700,
        "wires": [
            [
                "daecce3e.d8fa1"
            ]
        ]
    },
    {
        "id": "a7e143ea.9be47",
        "type": "ui_slider",
        "z": "b5632274.4d318",
        "name": "Level Slider",
        "label": "Level",
        "group": "549a20a6.df062",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "topic": "",
        "min": 0,
        "max": "65535",
        "step": "100",
        "x": 370,
        "y": 740,
        "wires": [
            [
                "85ae9797.59ab58"
            ]
        ]
    },
    {
        "id": "852216ba.a22c38",
        "type": "ui_dropdown",
        "z": "b5632274.4d318",
        "name": "Color Segment 1",
        "label": "Color Segment 1",
        "place": "Select option",
        "group": "549a20a6.df062",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "options": [
            {
                "label": "OFF",
                "value": "00",
                "type": "str"
            },
            {
                "label": "Green",
                "value": "01",
                "type": "str"
            },
            {
                "label": "Red",
                "value": "02",
                "type": "str"
            },
            {
                "label": "Yellow",
                "value": "03",
                "type": "str"
            },
            {
                "label": "Blue",
                "value": "04",
                "type": "str"
            },
            {
                "label": "White",
                "value": "07",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 390,
        "y": 780,
        "wires": [
            [
                "14cf634c.21803d"
            ]
        ]
    },
    {
        "id": "eb92d82a.a71e08",
        "type": "ui_dropdown",
        "z": "b5632274.4d318",
        "name": "Color Segment 2",
        "label": "Color Segment 2",
        "place": "Select option",
        "group": "549a20a6.df062",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "options": [
            {
                "label": "OFF",
                "value": "00",
                "type": "str"
            },
            {
                "label": "Green",
                "value": "01",
                "type": "str"
            },
            {
                "label": "Red",
                "value": "02",
                "type": "str"
            },
            {
                "label": "Yellow",
                "value": "03",
                "type": "str"
            },
            {
                "label": "Blue",
                "value": "04",
                "type": "str"
            },
            {
                "label": "White",
                "value": "07",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 390,
        "y": 820,
        "wires": [
            [
                "12191fa7.293bc"
            ]
        ]
    },
    {
        "id": "49422247.4ec22c",
        "type": "ui_dropdown",
        "z": "b5632274.4d318",
        "name": "Color Segment 3",
        "label": "Color Segment 3",
        "place": "Select option",
        "group": "549a20a6.df062",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "options": [
            {
                "label": "OFF",
                "value": "00",
                "type": "str"
            },
            {
                "label": "Green",
                "value": "01",
                "type": "str"
            },
            {
                "label": "Red",
                "value": "02",
                "type": "str"
            },
            {
                "label": "Yellow",
                "value": "03",
                "type": "str"
            },
            {
                "label": "Blue",
                "value": "04",
                "type": "str"
            },
            {
                "label": "White",
                "value": "07",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 390,
        "y": 860,
        "wires": [
            [
                "50799aa2.464784"
            ]
        ]
    },
    {
        "id": "d8c628f9.aaa198",
        "type": "function",
        "z": "b5632274.4d318",
        "name": "AL_WriteReq Index:4D",
        "func": "//msg.Start = '09 00';//9 + Length of Data, 00\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '03';\nmsg.IOLPort = '00';\nmsg.LowIndex = '4D';\nmsg.HighIndex = '00';\nmsg.SubIndex = '00';\nmsg.LengthOfData = '01';\nmsg.Data = msg.payload;\n\nif ((9 + parseInt(msg.LengthOfData)) <16) {\n    msg.Start = \"0\"+ (9 + parseInt(msg.LengthOfData)).toString(16) + \" 00\";\n} else { \n    msg.Start = (9 + parseInt(msg.LengthOfData)).toString(16)+ \" 00\";\n}\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex +\" \"+ msg.LengthOfData +\" \"+ msg.Data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 540,
        "wires": [
            [
                "88cbcd8c.bfc16"
            ]
        ]
    },
    {
        "id": "d044ba7e.435b48",
        "type": "function",
        "z": "b5632274.4d318",
        "name": "AL_WriteReq Index:4E",
        "func": "//msg.Start = '09 00';//9 + Length of Data, 00\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '03';\nmsg.IOLPort = '00';\nmsg.LowIndex = '4E';\nmsg.HighIndex = '00';\nmsg.SubIndex = '00';\nmsg.LengthOfData = '01';\nmsg.Data = msg.payload;\n\nif ((9 + parseInt(msg.LengthOfData)) <16) {\n    msg.Start = \"0\"+ (9 + parseInt(msg.LengthOfData)).toString(16) + \" 00\";\n} else { \n    msg.Start = (9 + parseInt(msg.LengthOfData)).toString(16)+ \" 00\";\n}\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex +\" \"+ msg.LengthOfData +\" \"+ msg.Data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 580,
        "wires": [
            [
                "88cbcd8c.bfc16"
            ]
        ]
    },
    {
        "id": "daecce3e.d8fa1",
        "type": "function",
        "z": "b5632274.4d318",
        "name": "AL_WriteReq Index:40",
        "func": "//msg.Start = '09 00';//9 + Length of Data, 00\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '03';\nmsg.IOLPort = '00';\nmsg.LowIndex = '40';\nmsg.HighIndex = '00';\nmsg.SubIndex = '00';\nmsg.LengthOfData = '01';\nmsg.Data = msg.payload;\n\nif ((9 + parseInt(msg.LengthOfData)) <16) {\n    msg.Start = \"0\"+ (9 + parseInt(msg.LengthOfData)).toString(16) + \" 00\";\n} else { \n    msg.Start = (9 + parseInt(msg.LengthOfData)).toString(16)+ \" 00\";\n}\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex +\" \"+ msg.LengthOfData +\" \"+ msg.Data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 620,
        "wires": [
            [
                "88cbcd8c.bfc16"
            ]
        ]
    },
    {
        "id": "d1a42e84.7c21a",
        "type": "inject",
        "z": "b5632274.4d318",
        "name": "Init Color",
        "topic": "",
        "payload": "02",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 180,
        "y": 620,
        "wires": [
            [
                "daecce3e.d8fa1"
            ]
        ]
    },
    {
        "id": "14cf634c.21803d",
        "type": "function",
        "z": "b5632274.4d318",
        "name": "AL_WriteReq Index:44",
        "func": "//msg.Start = '09 00';//9 + Length of Data, 00\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '03';\nmsg.IOLPort = '00';\nmsg.LowIndex = '44';\nmsg.HighIndex = '00';\nmsg.SubIndex = '00';\nmsg.LengthOfData = '01';\nmsg.Data = msg.payload;\n\nif ((9 + parseInt(msg.LengthOfData)) <16) {\n    msg.Start = \"0\"+ (9 + parseInt(msg.LengthOfData)).toString(16) + \" 00\";\n} else { \n    msg.Start = (9 + parseInt(msg.LengthOfData)).toString(16)+ \" 00\";\n}\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex +\" \"+ msg.LengthOfData +\" \"+ msg.Data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 780,
        "wires": [
            [
                "88cbcd8c.bfc16"
            ]
        ]
    },
    {
        "id": "12191fa7.293bc",
        "type": "function",
        "z": "b5632274.4d318",
        "name": "AL_WriteReq Index:45",
        "func": "//msg.Start = '09 00';//9 + Length of Data, 00\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '03';\nmsg.IOLPort = '00';\nmsg.LowIndex = '45';\nmsg.HighIndex = '00';\nmsg.SubIndex = '00';\nmsg.LengthOfData = '01';\nmsg.Data = msg.payload;\n\nif ((9 + parseInt(msg.LengthOfData)) <16) {\n    msg.Start = \"0\"+ (9 + parseInt(msg.LengthOfData)).toString(16) + \" 00\";\n} else { \n    msg.Start = (9 + parseInt(msg.LengthOfData)).toString(16)+ \" 00\";\n}\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex +\" \"+ msg.LengthOfData +\" \"+ msg.Data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 820,
        "wires": [
            [
                "88cbcd8c.bfc16"
            ]
        ]
    },
    {
        "id": "50799aa2.464784",
        "type": "function",
        "z": "b5632274.4d318",
        "name": "AL_WriteReq Index:46",
        "func": "//msg.Start = '09 00';//9 + Length of Data, 00\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '03';\nmsg.IOLPort = '00';\nmsg.LowIndex = '46';\nmsg.HighIndex = '00';\nmsg.SubIndex = '00';\nmsg.LengthOfData = '01';\nmsg.Data = msg.payload;\n\nif ((9 + parseInt(msg.LengthOfData)) <16) {\n    msg.Start = \"0\"+ (9 + parseInt(msg.LengthOfData)).toString(16) + \" 00\";\n} else { \n    msg.Start = (9 + parseInt(msg.LengthOfData)).toString(16)+ \" 00\";\n}\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex +\" \"+ msg.LengthOfData +\" \"+ msg.Data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 860,
        "wires": [
            [
                "88cbcd8c.bfc16"
            ]
        ]
    },
    {
        "id": "396a9005.ee2c9",
        "type": "function",
        "z": "b5632274.4d318",
        "name": "AL_WriteReq Index:51 Brightness BNI007F",
        "func": "//msg.Start = '09 00';//9 + Length of Data, 00\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '03';\nmsg.IOLPort = '00';\nmsg.LowIndex = '51';\nmsg.HighIndex = '00';\nmsg.SubIndex = '00';\nmsg.LengthOfData = '03';\nmsg.Data = msg.payload.toString(16);\n\nif ((9 + parseInt(msg.LengthOfData)) <16) {\n    msg.Start = \"0\"+ (9 + parseInt(msg.LengthOfData)).toString(16) + \" 00\";\n} else { \n    msg.Start = (9 + parseInt(msg.LengthOfData)).toString(16)+ \" 00\";\n}\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex +\" \"+ msg.LengthOfData +\" \"+ msg.Data+\" \"+ msg.Data+\" \"+ msg.Data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 300,
        "wires": [
            [
                "88cbcd8c.bfc16"
            ]
        ]
    },
    {
        "id": "493fd131.72221",
        "type": "function",
        "z": "b5632274.4d318",
        "name": "AL_WriteReq Index:51 OFF BNI007F",
        "func": "//msg.Start = '09 00';//9 + Length of Data, 00\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '03';\nmsg.IOLPort = '00';\nmsg.LowIndex = '51';\nmsg.HighIndex = '00';\nmsg.SubIndex = '00';\nmsg.LengthOfData = '03';\nmsg.Data = msg.payload;\n\nif ((9 + parseInt(msg.LengthOfData)) <16) {\n    msg.Start = \"0\"+ (9 + parseInt(msg.LengthOfData)).toString(16) + \" 00\";\n} else { \n    msg.Start = (9 + parseInt(msg.LengthOfData)).toString(16)+ \" 00\";\n}\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex +\" \"+ msg.LengthOfData +\" \"+ msg.Data+\" \"+ msg.Data+\" \"+ msg.Data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 360,
        "wires": [
            [
                "88cbcd8c.bfc16"
            ]
        ]
    },
    {
        "id": "7fb212d9.f5fbbc",
        "type": "ui_button",
        "z": "b5632274.4d318",
        "name": "",
        "group": "b3c38453.b38678",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "ON",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "7F",
        "payloadType": "str",
        "topic": "",
        "x": 370,
        "y": 400,
        "wires": [
            [
                "3763e400.12d5ac"
            ]
        ]
    },
    {
        "id": "3763e400.12d5ac",
        "type": "function",
        "z": "b5632274.4d318",
        "name": "AL_WriteReq Index:51 OFF BNI007F",
        "func": "//msg.Start = '09 00';//9 + Length of Data, 00\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '03';\nmsg.IOLPort = '00';\nmsg.LowIndex = '51';\nmsg.HighIndex = '00';\nmsg.SubIndex = '00';\nmsg.LengthOfData = '03';\nmsg.Data = msg.payload;\n\nif ((9 + parseInt(msg.LengthOfData)) <16) {\n    msg.Start = \"0\"+ (9 + parseInt(msg.LengthOfData)).toString(16) + \" 00\";\n} else { \n    msg.Start = (9 + parseInt(msg.LengthOfData)).toString(16)+ \" 00\";\n}\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex +\" \"+ msg.LengthOfData +\" \"+ msg.Data+\" \"+ msg.Data+\" \"+ msg.Data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 400,
        "wires": [
            [
                "88cbcd8c.bfc16"
            ]
        ]
    },
    {
        "id": "85ae9797.59ab58",
        "type": "function",
        "z": "b5632274.4d318",
        "name": "WriteProcessDataReq",
        "func": "//msg.Start = '05 00';//5 + Length of Data, 00\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '0B'; // In Hex\nmsg.IOLPort = '00'; // In Hex\nmsg.LengthOfData = '02'; //in count of Hex Bytes\n//msg.Data = msg.payload.toString(16); //port data in HEX\nmsg.PL = msg.payload; //Payload of inject\n\n\nif ((5+parseInt(msg.LengthOfData)) <15) {\n    msg.Start = \"0\"+ (5+parseInt(msg.LengthOfData)).toString(16) + \" 00\";\n} else { \n    msg.Start = (5+parseInt(msg.LengthOfData)).toString(16)+ \" 00\";\n}\n\nif ((msg.payload) <16) {\n    msg.Data = \"00 0\"+ (msg.payload.toString(16));\n} else if (msg.payload >=16 && msg.payload < 256){\n    msg.Data = \"00 \" + (msg.payload.toString(16));\n} else if (msg.payload >=256 && msg.payload < 4096){\n    msg.Data = \"0\" + (msg.payload.toString(16));\n} else { \n    msg.Data = (msg.payload.toString(16));\n}\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.Data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 740,
        "wires": [
            [
                "88cbcd8c.bfc16"
            ]
        ]
    },
    {
        "id": "e1dd7ae1.d0f048",
        "type": "ui_dropdown",
        "z": "b5632274.4d318",
        "name": "Direction",
        "label": "Level direction",
        "place": "Select option",
        "group": "549a20a6.df062",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "options": [
            {
                "label": "bottom to top",
                "value": "00",
                "type": "str"
            },
            {
                "label": "top to bottom",
                "value": "01",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 360,
        "y": 900,
        "wires": [
            [
                "ac6d2cde.0f861"
            ]
        ]
    },
    {
        "id": "ac6d2cde.0f861",
        "type": "function",
        "z": "b5632274.4d318",
        "name": "AL_WriteReq Index:46",
        "func": "//msg.Start = '09 00';//9 + Length of Data, 00\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '03';\nmsg.IOLPort = '00';\nmsg.LowIndex = '42';\nmsg.HighIndex = '00';\nmsg.SubIndex = '00';\nmsg.LengthOfData = '01';\nmsg.Data = msg.payload;\n\nif ((9 + parseInt(msg.LengthOfData)) <16) {\n    msg.Start = \"0\"+ (9 + parseInt(msg.LengthOfData)).toString(16) + \" 00\";\n} else { \n    msg.Start = (9 + parseInt(msg.LengthOfData)).toString(16)+ \" 00\";\n}\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex +\" \"+ msg.LengthOfData +\" \"+ msg.Data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 900,
        "wires": [
            [
                "88cbcd8c.bfc16"
            ]
        ]
    },
    {
        "id": "bf90e355.740d5",
        "type": "function",
        "z": "35ffb60b.29229a",
        "name": "Index 7",
        "func": "var sub1 = msg.payload.substr(0, 1);\nmsg.string = sub1;\n//return {payload:msg.dist};\nreturn {payload:msg.string};",
        "outputs": 1,
        "noerr": 0,
        "x": 1180,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "e0999563.a966b8",
        "type": "function",
        "z": "35ffb60b.29229a",
        "name": "Index 6",
        "func": "var sub1 = msg.payload.substr(1, 1);\nmsg.string = sub1;\n//return {payload:msg.dist};\nreturn {payload:msg.string};",
        "outputs": 1,
        "noerr": 0,
        "x": 1180,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "3458fc4.023bf04",
        "type": "function",
        "z": "35ffb60b.29229a",
        "name": "Index 5",
        "func": "var sub1 = msg.payload.substr(2, 1);\nmsg.string = sub1;\n//return {payload:msg.dist};\nreturn {payload:msg.string};",
        "outputs": 1,
        "noerr": 0,
        "x": 1180,
        "y": 480,
        "wires": [
            [
                "dfe0492e.aea0e8"
            ]
        ]
    },
    {
        "id": "f499c85c.d98568",
        "type": "function",
        "z": "35ffb60b.29229a",
        "name": "Index 4",
        "func": "var sub1 = msg.payload.substr(3, 1);\nmsg.string = sub1;\n//return {payload:msg.dist};\nreturn {payload:msg.string};",
        "outputs": 1,
        "noerr": 0,
        "x": 1180,
        "y": 520,
        "wires": [
            [
                "eb130c.fbb4bcf8"
            ]
        ]
    },
    {
        "id": "addbf276.6c9d1",
        "type": "function",
        "z": "35ffb60b.29229a",
        "name": "Index 3",
        "func": "var sub1 = msg.payload.substr(4, 1);\nmsg.string = sub1;\n//return {payload:msg.dist};\nreturn {payload:msg.string};",
        "outputs": 1,
        "noerr": 0,
        "x": 1180,
        "y": 560,
        "wires": [
            [
                "7bccdf27.d97d3"
            ]
        ]
    },
    {
        "id": "23d080ab.04ba6",
        "type": "function",
        "z": "35ffb60b.29229a",
        "name": "Index 2",
        "func": "var sub1 = msg.payload.substr(5, 1);\nmsg.string = sub1;\n//return {payload:msg.dist};\nreturn {payload:msg.string};",
        "outputs": 1,
        "noerr": 0,
        "x": 1180,
        "y": 600,
        "wires": [
            [
                "f1d0b888.97f778"
            ]
        ]
    },
    {
        "id": "f576c4fa.75d798",
        "type": "function",
        "z": "35ffb60b.29229a",
        "name": "Index 1",
        "func": "var sub1 = msg.payload.substr(6, 1);\nmsg.string = sub1;\n//return {payload:msg.dist};\nreturn {payload:msg.string};",
        "outputs": 1,
        "noerr": 0,
        "x": 1180,
        "y": 640,
        "wires": [
            [
                "dd4a6312.891fa"
            ]
        ]
    },
    {
        "id": "2ea72342.2a906c",
        "type": "function",
        "z": "35ffb60b.29229a",
        "name": "Index 0",
        "func": "var sub1 = msg.payload.substr(7, 1);\nmsg.string = sub1;\n//return {payload:msg.dist};\nreturn {payload:msg.string};",
        "outputs": 1,
        "noerr": 0,
        "x": 1180,
        "y": 680,
        "wires": [
            [
                "3353c3dc.54368c"
            ]
        ]
    },
    {
        "id": "3353c3dc.54368c",
        "type": "ui_chart",
        "z": "35ffb60b.29229a",
        "name": "",
        "group": "c6b09135.257bc",
        "order": 0,
        "width": "3",
        "height": "3",
        "label": "BCD1",
        "chartType": "pie",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 2,
        "x": 1310,
        "y": 680,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "dd4a6312.891fa",
        "type": "ui_chart",
        "z": "35ffb60b.29229a",
        "name": "",
        "group": "c6b09135.257bc",
        "order": 0,
        "width": "3",
        "height": "3",
        "label": "Stability",
        "chartType": "pie",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 2,
        "x": 1320,
        "y": 640,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "f1d0b888.97f778",
        "type": "ui_chart",
        "z": "35ffb60b.29229a",
        "name": "",
        "group": "c6b09135.257bc",
        "order": 0,
        "width": "3",
        "height": "3",
        "label": "Teach In",
        "chartType": "pie",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 2,
        "x": 1320,
        "y": 600,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "7bccdf27.d97d3",
        "type": "ui_chart",
        "z": "35ffb60b.29229a",
        "name": "",
        "group": "c6b09135.257bc",
        "order": 0,
        "width": "3",
        "height": "3",
        "label": "OK",
        "chartType": "pie",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 2,
        "x": 1310,
        "y": 560,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "eb130c.fbb4bcf8",
        "type": "ui_chart",
        "z": "35ffb60b.29229a",
        "name": "",
        "group": "c6b09135.257bc",
        "order": 0,
        "width": "3",
        "height": "3",
        "label": "Too Low",
        "chartType": "pie",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 2,
        "x": 1320,
        "y": 520,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "dfe0492e.aea0e8",
        "type": "ui_chart",
        "z": "35ffb60b.29229a",
        "name": "",
        "group": "c6b09135.257bc",
        "order": 0,
        "width": "3",
        "height": "3",
        "label": "Too High",
        "chartType": "pie",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 2,
        "x": 1320,
        "y": 480,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "a00dfc70.07a1d",
        "type": "ui_gauge",
        "z": "35ffb60b.29229a",
        "name": "Cunter to 25",
        "group": "89c040ae.9e1e4",
        "order": 0,
        "width": "10",
        "height": "6",
        "gtype": "gage",
        "title": "Counter to 25",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "25",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1330,
        "y": 340,
        "wires": []
    },
    {
        "id": "d4060449.da5d78",
        "type": "function",
        "z": "35ffb60b.29229a",
        "name": "BOS Counter",
        "func": "var sub1 = msg.payload.substr(0, 2);\nvar sub2 = msg.payload.substr(3, 2);\n\nvar count = sub1 + sub2;\nvar dec = parseInt(count ,16);\n\nmsg.dist = dec;\n\nreturn {payload:msg.dist};\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 910,
        "y": 340,
        "wires": [
            [
                "a00dfc70.07a1d"
            ]
        ]
    },
    {
        "id": "2a6bddd3.1ed7a2",
        "type": "function",
        "z": "35ffb60b.29229a",
        "name": "BOS Convert to binary",
        "func": "var hex3 = msg.payload.substr(6, 2);\n\nvar dec = parseInt(hex3 ,16);\nvar string = dec.toString(2);\nwhile (string.length%8){string=\"0\"+string;}\nmsg.dist = string;\n\nreturn {payload:msg.dist};\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 400,
        "wires": [
            [
                "bf90e355.740d5",
                "e0999563.a966b8",
                "3458fc4.023bf04",
                "f499c85c.d98568",
                "addbf276.6c9d1",
                "23d080ab.04ba6",
                "f576c4fa.75d798",
                "2ea72342.2a906c"
            ]
        ]
    },
    {
        "id": "7f3e14a0.32c6cc",
        "type": "function",
        "z": "35ffb60b.29229a",
        "name": "ProcessInputs: BOS21Laser",
        "func": "if (msg.BNIPort === 2 && msg.command === 10) {\n    msg.payload = msg.response.substr(15,8);\n} else {return;\n    \n}\n\nreturn msg;\n//{ payload:msg.payload.substr(15,8) };",
        "outputs": 1,
        "noerr": 0,
        "x": 660,
        "y": 340,
        "wires": [
            [
                "2a6bddd3.1ed7a2",
                "d4060449.da5d78"
            ]
        ]
    },
    {
        "id": "c4e0ac.8fd7bf58",
        "type": "comment",
        "z": "35ffb60b.29229a",
        "name": "BOS21M Laser LED Diode",
        "info": "",
        "x": 210,
        "y": 100,
        "wires": []
    },
    {
        "id": "ffc34aec.7884a8",
        "type": "ui_button",
        "z": "35ffb60b.29229a",
        "name": "Laser ON",
        "group": "d54558f8.78fc28",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "LED On",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "00",
        "payloadType": "str",
        "topic": "",
        "x": 220,
        "y": 180,
        "wires": [
            [
                "ccfd185c.4a0958"
            ]
        ]
    },
    {
        "id": "e76a0227.a255e",
        "type": "ui_button",
        "z": "35ffb60b.29229a",
        "name": "Laser OFF",
        "group": "d54558f8.78fc28",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "LED OFF",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "02",
        "payloadType": "str",
        "topic": "",
        "x": 210,
        "y": 220,
        "wires": [
            [
                "ccfd185c.4a0958"
            ]
        ]
    },
    {
        "id": "2a6d21ef.805b1e",
        "type": "change",
        "z": "35ffb60b.29229a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "host",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 180,
        "wires": [
            [
                "db019180.c7578"
            ]
        ]
    },
    {
        "id": "db019180.c7578",
        "type": "function",
        "z": "35ffb60b.29229a",
        "name": "Set Payload to Buffer",
        "func": "var string = msg.hex.replace(/\\s/g,'');\nmsg.ip = msg.host;\nmsg.port = '1999';\nmsg.payload = Buffer.from(string,\"hex\");\n\nreturn msg;\n\n//msg.payload = Buffer.from(msg.payload, \"hex\");\n",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "ccfd185c.4a0958",
        "type": "function",
        "z": "35ffb60b.29229a",
        "name": "Principle String",
        "func": "onOff = msg.payload;\n\nmsg.hex = \"06 00 02 0B 02 \"+onOff;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 180,
        "wires": [
            [
                "2a6d21ef.805b1e"
            ]
        ]
    },
    {
        "id": "7ee604f1.56a75c",
        "type": "debug",
        "z": "7eb9cfc2.9ad25",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 990,
        "y": 780,
        "wires": []
    },
    {
        "id": "f808a575.014548",
        "type": "inject",
        "z": "7eb9cfc2.9ad25",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 164,
        "y": 779,
        "wires": [
            [
                "9c1865b9.f26078"
            ]
        ]
    },
    {
        "id": "f8316f02.e218f",
        "type": "change",
        "z": "7eb9cfc2.9ad25",
        "name": "Set String",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "UDP_Packet=0d.00.02.0b.03.11.01.00.01.03.00.01.00",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 572,
        "y": 780,
        "wires": [
            [
                "7290c8e1.00d5c8"
            ]
        ]
    },
    {
        "id": "7290c8e1.00d5c8",
        "type": "http request",
        "z": "7eb9cfc2.9ad25",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 770,
        "y": 781,
        "wires": [
            [
                "7ee604f1.56a75c"
            ]
        ]
    },
    {
        "id": "9c1865b9.f26078",
        "type": "change",
        "z": "7eb9cfc2.9ad25",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "http://192.168.0.50/TMG.htm",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 366,
        "y": 779,
        "wires": [
            [
                "f8316f02.e218f"
            ]
        ]
    },
    {
        "id": "e31caeaf.a41cf",
        "type": "debug",
        "z": "7eb9cfc2.9ad25",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 990,
        "y": 910,
        "wires": []
    },
    {
        "id": "f0b5a3b9.608e4",
        "type": "inject",
        "z": "7eb9cfc2.9ad25",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 164,
        "y": 909,
        "wires": [
            [
                "8dafd2ac.720dd"
            ]
        ]
    },
    {
        "id": "e7392250.d10ec",
        "type": "change",
        "z": "7eb9cfc2.9ad25",
        "name": "Set String",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "UDP_Packet=0d.00.02.0b.03.22.02.00.01.03.00.01.00",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 572,
        "y": 910,
        "wires": [
            [
                "e56c93dd.f4f45"
            ]
        ]
    },
    {
        "id": "e56c93dd.f4f45",
        "type": "http request",
        "z": "7eb9cfc2.9ad25",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 770,
        "y": 911,
        "wires": [
            [
                "e31caeaf.a41cf"
            ]
        ]
    },
    {
        "id": "8dafd2ac.720dd",
        "type": "change",
        "z": "7eb9cfc2.9ad25",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "http://192.168.0.50/TMG.htm",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 366,
        "y": 909,
        "wires": [
            [
                "e7392250.d10ec"
            ]
        ]
    },
    {
        "id": "5b576598.b859fc",
        "type": "debug",
        "z": "7eb9cfc2.9ad25",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 965,
        "y": 1059,
        "wires": []
    },
    {
        "id": "6c6dca40.fd5ea4",
        "type": "inject",
        "z": "7eb9cfc2.9ad25",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 158,
        "y": 1064,
        "wires": [
            [
                "5183a5f6.4197bc"
            ]
        ]
    },
    {
        "id": "7dd78ee0.420d9",
        "type": "change",
        "z": "7eb9cfc2.9ad25",
        "name": "Set String",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "UDP_Packet=0d.00.02.0b.03.44.04.00.01.03.00.01.00",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 547,
        "y": 1059,
        "wires": [
            [
                "ce867e7b.92796"
            ]
        ]
    },
    {
        "id": "ce867e7b.92796",
        "type": "http request",
        "z": "7eb9cfc2.9ad25",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 745,
        "y": 1060,
        "wires": [
            [
                "5b576598.b859fc"
            ]
        ]
    },
    {
        "id": "5183a5f6.4197bc",
        "type": "change",
        "z": "7eb9cfc2.9ad25",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "http://192.168.0.50/TMG.htm",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 341,
        "y": 1058,
        "wires": [
            [
                "7dd78ee0.420d9"
            ]
        ]
    },
    {
        "id": "13907d16.e93103",
        "type": "comment",
        "z": "7eb9cfc2.9ad25",
        "name": "Beschreibung Headers",
        "info": "Die URL dees BNI um die TMG schnittstelle via API anzusprechen\n\nhttp://192.168.0.50/TMG.htm\n",
        "x": 401,
        "y": 685,
        "wires": []
    },
    {
        "id": "f34c6b58.21da38",
        "type": "comment",
        "z": "7eb9cfc2.9ad25",
        "name": "Beschreibung UDP Paket String",
        "info": "Im String muss wie im Webserver das UDP Paket angegeben werden. ",
        "x": 590,
        "y": 730,
        "wires": []
    },
    {
        "id": "9adede8d.02213",
        "type": "comment",
        "z": "7eb9cfc2.9ad25",
        "name": "",
        "info": "",
        "x": 869,
        "y": 718,
        "wires": []
    },
    {
        "id": "249aeb38.df2be4",
        "type": "http request",
        "z": "7eb9cfc2.9ad25",
        "name": "fetch data from BNI",
        "method": "GET",
        "ret": "obj",
        "url": "http://{{host}}/dprop.jsn",
        "tls": "",
        "x": 230,
        "y": 1340,
        "wires": [
            [
                "df2de6de.8e32a8"
            ]
        ]
    },
    {
        "id": "df2de6de.8e32a8",
        "type": "function",
        "z": "7eb9cfc2.9ad25",
        "name": "Split",
        "func": "var output = [];\n\nfor(var i = 0; i < msg.payload.length; i++)\n{\n    var element = msg.payload[i];\n    \n    if( element !== null &&\n        element !== undefined )\n        {\n            output[i] = {};\n            output[i].payload = element;\n        }\n}\n\nreturn output;",
        "outputs": "16",
        "noerr": 0,
        "x": 467,
        "y": 1338,
        "wires": [
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "a0f705e6.07ae28",
        "type": "inject",
        "z": "b17cee1d.29a2a",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 230,
        "y": 540,
        "wires": [
            [
                "624cad8d.c2a004",
                "1fd3a005.e82d",
                "72d72187.502d6",
                "5ed9aa8f.f6d324"
            ]
        ]
    },
    {
        "id": "5ed9aa8f.f6d324",
        "type": "exec",
        "z": "b17cee1d.29a2a",
        "command": "free | grep Mem | awk '{print 100*($4+$6+$7)/$2}'",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "Free Memory",
        "x": 450,
        "y": 840,
        "wires": [
            [
                "6f8e3479.a2e80c"
            ],
            [],
            []
        ]
    },
    {
        "id": "72d72187.502d6",
        "type": "exec",
        "z": "b17cee1d.29a2a",
        "command": "top -d 0.5 -b -n2 | grep \"Cpu(s)\"|tail -n 1 | awk '{print $2 + $4}'",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "CPU Load",
        "x": 450,
        "y": 780,
        "wires": [
            [
                "96e1f4d5.5c46e8"
            ],
            [],
            []
        ]
    },
    {
        "id": "1fd3a005.e82d",
        "type": "exec",
        "z": "b17cee1d.29a2a",
        "command": "vcgencmd measure_temp",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "RPi Temp.",
        "x": 450,
        "y": 720,
        "wires": [
            [
                "7c90abcb.17c7e4"
            ],
            [],
            []
        ]
    },
    {
        "id": "624cad8d.c2a004",
        "type": "exec",
        "z": "b17cee1d.29a2a",
        "command": "df -h",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "oldrc": false,
        "name": "Disk Usage",
        "x": 510,
        "y": 520,
        "wires": [
            [
                "36bbe8b6.854de8"
            ],
            [],
            []
        ]
    },
    {
        "id": "96e1f4d5.5c46e8",
        "type": "ui_chart",
        "z": "b17cee1d.29a2a",
        "name": "",
        "group": "57f90ca1.1cfe44",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "CPU Load",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 2,
        "x": 830,
        "y": 780,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "6f8e3479.a2e80c",
        "type": "ui_chart",
        "z": "b17cee1d.29a2a",
        "name": "",
        "group": "57f90ca1.1cfe44",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "Free RAM",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 2,
        "x": 830,
        "y": 840,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "573a8302.a66a0c",
        "type": "exec",
        "z": "b17cee1d.29a2a",
        "command": "sudo date -s ",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 770,
        "y": 280,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "54383d17.81aff4",
        "type": "function",
        "z": "b17cee1d.29a2a",
        "name": "Transform Timestamp",
        "func": "msg.date = msg.payload.substr(0,33);\nmsg.payload = \"'\"+msg.date+\"'\";\n\nreturn msg;\n\n//sudo date -s \"Thu Aug  9 21:31:26 UTC 2017\"\n\n//sudo date -s \"Mon Jul 09 2018 13:46:49 GMT+0200\"",
        "outputs": 1,
        "noerr": 0,
        "x": 560,
        "y": 280,
        "wires": [
            [
                "573a8302.a66a0c"
            ]
        ]
    },
    {
        "id": "63e8190b.37a4d8",
        "type": "ui_template",
        "z": "b17cee1d.29a2a",
        "group": "f562e9f2.314738",
        "name": "Set Time from Browser",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<script>\nvar value = Date();\n// or overwrite value in your callback function ...\nthis.scope.action = function() { return value; }\n</script>\n<md-button ng-click=\"send({payload:action()})\">\n    set New Date to Pi\n</md-button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 300,
        "y": 280,
        "wires": [
            [
                "54383d17.81aff4"
            ]
        ]
    },
    {
        "id": "6cb71d3d.1b4474",
        "type": "ui_button",
        "z": "b17cee1d.29a2a",
        "name": "",
        "group": "f562e9f2.314738",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Reboot Raspberry Pi",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "",
        "x": 300,
        "y": 220,
        "wires": [
            [
                "e1ffcedd.217c5"
            ]
        ]
    },
    {
        "id": "17329fa3.5b78f",
        "type": "ui_button",
        "z": "b17cee1d.29a2a",
        "name": "",
        "group": "f562e9f2.314738",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Shutdown Raspberry Pi",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "",
        "x": 310,
        "y": 180,
        "wires": [
            [
                "8ee13dd5.24913"
            ]
        ]
    },
    {
        "id": "8ee13dd5.24913",
        "type": "exec",
        "z": "b17cee1d.29a2a",
        "command": "sudo poweroff #",
        "append": "",
        "useSpawn": "",
        "name": "turn off Pi",
        "x": 560,
        "y": 160,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "e1ffcedd.217c5",
        "type": "exec",
        "z": "b17cee1d.29a2a",
        "command": "sudo reboot #",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "oldrc": false,
        "name": "turn off Pi",
        "x": 560,
        "y": 220,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "7c90abcb.17c7e4",
        "type": "function",
        "z": "b17cee1d.29a2a",
        "name": "Temp calculation",
        "func": "msg.temp = msg.payload.substr(5,4);\nmsg.payload = msg.temp;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 700,
        "wires": [
            [
                "d26d145f.fea928"
            ]
        ]
    },
    {
        "id": "81ed362d.253ff8",
        "type": "ui_chart",
        "z": "b17cee1d.29a2a",
        "name": "",
        "group": "57f90ca1.1cfe44",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Disk Usage",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 2,
        "x": 870,
        "y": 500,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "d26d145f.fea928",
        "type": "ui_chart",
        "z": "b17cee1d.29a2a",
        "name": "",
        "group": "57f90ca1.1cfe44",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Temp",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 2,
        "x": 890,
        "y": 700,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "36bbe8b6.854de8",
        "type": "function",
        "z": "b17cee1d.29a2a",
        "name": "Disk Usage",
        "func": "var re = /([0-9]{2})%/\nvar idx = msg.payload.search(re);\nvar str = msg.payload;\nif (idx >=0) {\n    str = msg.payload.substring(idx, idx + 2);\n}\nmsg.payload = str;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 500,
        "wires": [
            [
                "81ed362d.253ff8"
            ]
        ]
    },
    {
        "id": "fc967db2.5787a",
        "type": "ui_switch",
        "z": "7eb9cfc2.9ad25",
        "name": "Start Interval 5min",
        "label": "Start Interval 5min",
        "group": "a304ef23.373ec",
        "order": 0,
        "width": "4",
        "height": "2",
        "passthru": true,
        "decouple": "false",
        "topic": "gate",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 135,
        "y": 375,
        "wires": [
            [
                "1fc69358.33575d"
            ]
        ]
    },
    {
        "id": "aba4169.5e084e8",
        "type": "comment",
        "z": "83abd8d0.d7cca8",
        "name": "set ports to IO-Link mode",
        "info": "",
        "x": 270,
        "y": 340,
        "wires": []
    },
    {
        "id": "8a578901.649778",
        "type": "inject",
        "z": "83abd8d0.d7cca8",
        "name": "Ts-35s",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "35.5",
        "crontab": "",
        "once": false,
        "onceDelay": "40",
        "x": 260,
        "y": 380,
        "wires": [
            [
                "760e8e19.31f3f"
            ]
        ]
    },
    {
        "id": "760e8e19.31f3f",
        "type": "change",
        "z": "83abd8d0.d7cca8",
        "name": "read host and ports from config",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "host",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "ports",
                "pt": "msg",
                "to": "ports",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 380,
        "wires": [
            [
                "5e3936f8.92da28"
            ]
        ]
    },
    {
        "id": "e4054c32.292e4",
        "type": "inject",
        "z": "83abd8d0.d7cca8",
        "name": "TS-30s",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "30.7",
        "crontab": "",
        "once": true,
        "onceDelay": "30",
        "x": 240,
        "y": 200,
        "wires": [
            [
                "615bec6c.9e3984"
            ]
        ]
    },
    {
        "id": "8ab39439.cf81f8",
        "type": "function",
        "z": "83abd8d0.d7cca8",
        "name": "Set Payload to Buffer - connect String",
        "func": "msg.ip = msg.host;\nmsg.port = '1999';\nmsg.payload = Buffer.from('1A00029900FF494F2D4C696E6B2D4465766963652D546F6F6C00',\"hex\");\n\nreturn msg;\n\n//msg.payload = Buffer.from(msg.payload, \"hex\");\n\n\n//1A00029900FF494F2D4C696E6B2D4465766963652D546F6F6C00",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "615bec6c.9e3984",
        "type": "change",
        "z": "83abd8d0.d7cca8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "host",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 200,
        "wires": [
            [
                "8ab39439.cf81f8"
            ]
        ]
    },
    {
        "id": "5e3936f8.92da28",
        "type": "function",
        "z": "83abd8d0.d7cca8",
        "name": "foreach port",
        "func": "// list of ports to initialize\nlet ports = msg.ports || [0]; \n\n// get port_index from node context, or initialize\nlet port_index = context.get('port_index') || 0;\n\n// finished?\nif (port_index >= ports.length) {\n    context.set('port_index', null); // undefine port_index\n    return null;\n}\n    \n// prepare message:\nmsg.port = (\"00\" + ports[port_index]).slice(-2);\n\n// next port...\ncontext.set('port_index', port_index+1);\n\nmsg.hex = '24 00 02 0F '+ msg.port +' 00 0C 11 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 32 32';\n\nreturn msg;\n\n//24 00.02.0F.00.00.0C.11.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.32.32",
        "outputs": "1",
        "noerr": 0,
        "x": 830,
        "y": 380,
        "wires": [
            [
                "cecb9fe2.6c94f",
                "f0e5f504.227038"
            ]
        ]
    },
    {
        "id": "cecb9fe2.6c94f",
        "type": "delay",
        "z": "83abd8d0.d7cca8",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 830,
        "y": 420,
        "wires": [
            [
                "5e3936f8.92da28"
            ]
        ]
    },
    {
        "id": "f0e5f504.227038",
        "type": "function",
        "z": "83abd8d0.d7cca8",
        "name": "Set Payload to Buffer",
        "func": "var string = msg.hex.replace(/\\s/g,'');\nmsg.ip = msg.host;\nmsg.port = '1999';\nmsg.payload = Buffer.from(string,\"hex\");\n\nreturn msg;\n\n//msg.payload = Buffer.from(msg.payload, \"hex\");\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1040,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "b5f83e4.0bbecc",
        "type": "function",
        "z": "83abd8d0.d7cca8",
        "name": "Set Payload to Buffer - Idle String",
        "func": "msg.ip = msg.host;\nmsg.port = '1999';\nmsg.payload = Buffer.from('0500029B00',\"hex\");\n\nreturn msg;\n\n//msg.payload = Buffer.from(msg.payload, \"hex\");\n\n\n//1A00029900FF494F2D4C696E6B2D4465766963652D546F6F6C00",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "700e64a3.3651ec",
        "type": "change",
        "z": "83abd8d0.d7cca8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "host",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 240,
        "wires": [
            [
                "b5f83e4.0bbecc"
            ]
        ]
    },
    {
        "id": "50b3abe1.2b50e4",
        "type": "inject",
        "z": "83abd8d0.d7cca8",
        "name": "TS-5s",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "4.8",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "x": 240,
        "y": 240,
        "wires": [
            [
                "700e64a3.3651ec"
            ]
        ]
    },
    {
        "id": "5df5cc64.957ef4",
        "type": "comment",
        "z": "e393e3b.e73752",
        "name": "set ports to IO-Link mode",
        "info": "",
        "x": 290,
        "y": 280,
        "wires": []
    },
    {
        "id": "2abb4915.877086",
        "type": "change",
        "z": "e393e3b.e73752",
        "name": "read host and ports from config",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "host",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "ports",
                "pt": "msg",
                "to": "ports",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 360,
        "wires": [
            [
                "d03c9bf6.241fb8"
            ]
        ]
    },
    {
        "id": "85bef761.fa0a78",
        "type": "function",
        "z": "e393e3b.e73752",
        "name": "foreach port",
        "func": "// list of ports to initialize\nlet ports = msg.ports || [0]; \n\n// get port_index from node context, or initialize\nlet port_index = context.get('port_index') || 0;\n\n// finished?\nif (port_index >= ports.length) {\n    context.set('port_index', null); // undefine port_index\n    return null;\n}\n    \n// prepare message:\nif ((ports[port_index]) <16) {\n    msg.Data = \"0\"+ (ports[port_index].toString(16));\n} else { \n    msg.Data = (ports[port_index].toString(16));\n}\n//msg.port = (\"00\" + ports[port_index]).slice(-2);\n// next port...\ncontext.set('port_index', port_index+1);\n\n\nmsg.hex = '24 00 02 0F '+ msg.Data +' 00 0C 11 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 32 32';\n\nreturn msg;\n\n//24 00.02.0F.00.00.0C.11.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.00.32.32",
        "outputs": "1",
        "noerr": 0,
        "x": 1290,
        "y": 300,
        "wires": [
            [
                "d86670ec.f0cb1",
                "cd6ee77.da7fd18"
            ]
        ]
    },
    {
        "id": "d86670ec.f0cb1",
        "type": "delay",
        "z": "e393e3b.e73752",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1290,
        "y": 340,
        "wires": [
            [
                "85bef761.fa0a78"
            ]
        ]
    },
    {
        "id": "cd6ee77.da7fd18",
        "type": "function",
        "z": "e393e3b.e73752",
        "name": "Set Payload to Buffer",
        "func": "var string = msg.hex.replace(/\\s/g,'');\nmsg.ip = msg.host;\nmsg.port = '1999';\nmsg.payload = Buffer.from(string,\"hex\");\n\nreturn msg;\n\n//msg.payload = Buffer.from(msg.payload, \"hex\");\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1520,
        "y": 300,
        "wires": [
            [
                "9098f801.ef56d8",
                "ef4641d2.0a437"
            ]
        ]
    },
    {
        "id": "f0c5f27b.43253",
        "type": "http request",
        "z": "e393e3b.e73752",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "url": "http://{{host}}/ports.jsn",
        "tls": "",
        "x": 850,
        "y": 480,
        "wires": [
            [
                "27dc27fd.4a8af8"
            ]
        ]
    },
    {
        "id": "f5f7bc19.2ae7b",
        "type": "inject",
        "z": "e393e3b.e73752",
        "name": "TS-32sec",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "32",
        "crontab": "",
        "once": false,
        "onceDelay": "3",
        "x": 250,
        "y": 500,
        "wires": [
            [
                "6986dc96.655434"
            ]
        ]
    },
    {
        "id": "7523607.22bd4a",
        "type": "change",
        "z": "e393e3b.e73752",
        "name": "read config",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "host",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 480,
        "wires": [
            [
                "f0c5f27b.43253"
            ]
        ]
    },
    {
        "id": "27dc27fd.4a8af8",
        "type": "function",
        "z": "e393e3b.e73752",
        "name": "construct Devices object and set Global values",
        "func": "//construct Devices object: \nmsg.devices = { \n    \"Port 0\":msg.payload.ports[0].productId,\n    \"Port 1\":msg.payload.ports[1].productId,\n    \"Port 2\":msg.payload.ports[2].productId,\n    \"Port 3\":msg.payload.ports[3].productId,\n    \"Port 4\":msg.payload.ports[4].productId,\n    \"Port 5\":msg.payload.ports[5].productId,\n    \"Port 6\":msg.payload.ports[6].productId,\n    \"Port 7\":msg.payload.ports[7].productId\n};\n//mach Product Code to Port Number: \nmsg.test = msg.devices[\"Port 0\"];\n\nif       (msg.devices[\"Port 0\"] === \"BOS026R\"){\n    msg.portnumberBOS026R = \"00\";\n}else if (msg.devices[\"Port 1\"] === \"BOS026R\"){\n    msg.portnumberBOS026R = \"08\";\n}else if (msg.devices[\"Port 2\"] === \"BOS026R\"){\n    msg.portnumberBOS026R = \"02\";\n}else if (msg.devices[\"Port 3\"] === \"BOS026R\"){\n    msg.portnumberBOS026R = \"0A\";\n}else if (msg.devices[\"Port 4\"] === \"BOS026R\"){\n    msg.portnumberBOS026R = \"04\";\n}else if (msg.devices[\"Port 5\"] === \"BOS026R\"){\n    msg.portnumberBOS026R = \"0C\";\n}else if (msg.devices[\"Port 6\"] === \"BOS026R\"){\n    msg.portnumberBOS026R = \"06\";\n}else if (msg.devices[\"Port 7\"] === \"BOS026R\"){\n    msg.portnumberBOS026R = \"0E\";\n}else {\n    msg.portnumberBOS026R = undefined;\n}\nif       (msg.devices[\"Port 0\"] === \"BAE00TP\"){\n    msg.portnumberBAE00TP = \"00\";\n}else if (msg.devices[\"Port 1\"] === \"BAE00TP\"){\n    msg.portnumberBAE00TP = \"08\";\n}else if (msg.devices[\"Port 2\"] === \"BAE00TP\"){\n    msg.portnumberBAE00TP = \"02\";\n}else if (msg.devices[\"Port 3\"] === \"BAE00TP\"){\n    msg.portnumberBAE00TP = \"0A\";\n}else if (msg.devices[\"Port 4\"] === \"BAE00TP\"){\n    msg.portnumberBAE00TP = \"04\";\n}else if (msg.devices[\"Port 5\"] === \"BAE00TP\"){\n    msg.portnumberBAE00TP = \"0C\";\n}else if (msg.devices[\"Port 6\"] === \"BAE00TP\"){\n    msg.portnumberBAE00TP = \"06\";\n}else if (msg.devices[\"Port 7\"] === \"BAE00TP\"){\n    msg.portnumberBAE00TP = \"0E\";\n}else {\n    msg.portnumberBAE00TP = undefined;\n}\n\n\nif       (msg.devices[\"Port 0\"] === \"BNI00E0\"){\n    msg.portnumberBNI00E0 = \"00\";\n}else if (msg.devices[\"Port 1\"] === \"BNI00E0\"){\n    msg.portnumberBNI00E0 = \"08\";\n}else if (msg.devices[\"Port 2\"] === \"BNI00E0\"){\n    msg.portnumberBNI00E0 = \"02\";\n}else if (msg.devices[\"Port 3\"] === \"BNI00E0\"){\n    msg.portnumberBNI00E0 = \"0A\";\n}else if (msg.devices[\"Port 4\"] === \"BNI00E0\"){\n    msg.portnumberBNI00E0 = \"04\";\n}else if (msg.devices[\"Port 5\"] === \"BNI00E0\"){\n    msg.portnumberBNI00E0 = \"0C\";\n}else if (msg.devices[\"Port 6\"] === \"BNI00E0\"){\n    msg.portnumberBNI00E0 = \"06\";\n}else if (msg.devices[\"Port 7\"] === \"BNI00E0\"){\n    msg.portnumberBNI00E0 = \"0E\";\n}else {\n    msg.portnumberBNI00E0 = undefined;\n}\nif       (msg.devices[\"Port 0\"] === \"BUS004P\"){\n    msg.portnumberBUS004P = \"00\";\n}else if (msg.devices[\"Port 1\"] === \"BUS004P\"){\n    msg.portnumberBUS004P = \"08\";\n}else if (msg.devices[\"Port 2\"] === \"BUS004P\"){\n    msg.portnumberBUS004P = \"02\";\n}else if (msg.devices[\"Port 3\"] === \"BUS004P\"){\n    msg.portnumberBUS004P = \"0A\";\n}else if (msg.devices[\"Port 4\"] === \"BUS004P\"){\n    msg.portnumberBUS004P = \"04\";\n}else if (msg.devices[\"Port 5\"] === \"BUS004P\"){\n    msg.portnumberBUS004P = \"0c\";\n}else if (msg.devices[\"Port 6\"] === \"BUS004P\"){\n    msg.portnumberBUS004P = \"06\";\n}else if (msg.devices[\"Port 7\"] === \"BUS004P\"){\n    msg.portnumberBUS004P = \"0E\";\n}else {\n    msg.portnumberBUS004P = undefined;\n}\nif       (msg.devices[\"Port 0\"] === \"BNI0088\"){\n    msg.portnumberBNI0088 = \"00\";\n}else if (msg.devices[\"Port 1\"] === \"BNI0088\"){\n    msg.portnumberBNI0088 = \"08\";\n}else if (msg.devices[\"Port 2\"] === \"BNI0088\"){\n    msg.portnumberBNI0088 = \"02\";\n}else if (msg.devices[\"Port 3\"] === \"BNI0088\"){\n    msg.portnumberBNI0088 = \"0A\";\n}else if (msg.devices[\"Port 4\"] === \"BNI0088\"){\n    msg.portnumberBNI0088 = \"04\";\n}else if (msg.devices[\"Port 5\"] === \"BNI0088\"){\n    msg.portnumberBNI0088 = \"0C\";\n}else if (msg.devices[\"Port 6\"] === \"BNI0088\"){\n    msg.portnumberBNI0088 = \"06\";\n}else if (msg.devices[\"Port 7\"] === \"BNI0088\"){\n    msg.portnumberBNI0088 = \"0E\";\n}else {\n    msg.portnumberBNI0088 = undefined;\n}\nif       (msg.devices[\"Port 0\"] === \"BNI0008\"){\n    msg.portnumberBNI0008 = \"00\";\n}else if (msg.devices[\"Port 1\"] === \"BNI0008\"){\n    msg.portnumberBNI0008 = \"08\";\n}else if (msg.devices[\"Port 2\"] === \"BNI0008\"){\n    msg.portnumberBNI0008 = \"02\";\n}else if (msg.devices[\"Port 3\"] === \"BNI0008\"){\n    msg.portnumberBNI0008 = \"0A\";\n}else if (msg.devices[\"Port 4\"] === \"BNI0008\"){\n    msg.portnumberBNI0008 = \"04\";\n}else if (msg.devices[\"Port 5\"] === \"BNI0008\"){\n    msg.portnumberBNI0008 = \"0C\";\n}else if (msg.devices[\"Port 6\"] === \"BNI0008\"){\n    msg.portnumberBNI0008 = \"06\";\n}else if (msg.devices[\"Port 7\"] === \"BNI0008\"){\n    msg.portnumberBNI0008 = \"0E\";\n}else {\n    msg.portnumberBNI0008 = undefined;\n}\nif       (msg.devices[\"Port 0\"] === \"BAW004M\"){\n    msg.portnumberBAW004M = \"00\";\n}else if (msg.devices[\"Port 1\"] === \"BAW004M\"){\n    msg.portnumberBAW004M = \"08\";\n}else if (msg.devices[\"Port 2\"] === \"BAW004M\"){\n    msg.portnumberBAW004M = \"02\";\n}else if (msg.devices[\"Port 3\"] === \"BAW004M\"){\n    msg.portnumberBAW004M = \"0A\";\n}else if (msg.devices[\"Port 4\"] === \"BAW004M\"){\n    msg.portnumberBAW004M = \"04\";\n}else if (msg.devices[\"Port 5\"] === \"BAW004M\"){\n    msg.portnumberBAW004M = \"0C\";\n}else if (msg.devices[\"Port 6\"] === \"BAW004M\"){\n    msg.portnumberBAW004M = \"06\";\n}else if (msg.devices[\"Port 7\"] === \"BAW004M\"){\n    msg.portnumberBAW004M = \"0E\";\n}else {\n    msg.portnumberBAW004M = undefined;\n}\nif       (msg.devices[\"Port 0\"] === \"BTL6PFIOL001\"){\n    msg.portnumberBTL6PFIOL001 = \"00\";\n}else if (msg.devices[\"Port 1\"] === \"BTL6PFIOL001\"){\n    msg.portnumberBTL6PFIOL001 = \"08\";\n}else if (msg.devices[\"Port 2\"] === \"BTL6PFIOL001\"){\n    msg.portnumberBTL6PFIOL001 = \"02\";\n}else if (msg.devices[\"Port 3\"] === \"BTL6PFIOL001\"){\n    msg.portnumberBTL6PFIOL001 = \"0A\";\n}else if (msg.devices[\"Port 4\"] === \"BTL6PFIOL001\"){\n    msg.portnumberBTL6PFIOL001 = \"04\";\n}else if (msg.devices[\"Port 5\"] === \"BTL6PFIOL001\"){\n    msg.portnumberBTL6PFIOL001 = \"0C\";\n}else if (msg.devices[\"Port 6\"] === \"BTL6PFIOL001\"){\n    msg.portnumberBTL6PFIOL001 = \"06\";\n}else if (msg.devices[\"Port 7\"] === \"BTL6PFIOL001\"){\n    msg.portnumberBTL6PFIOL001 = \"0E\";\n}else {\n    msg.portnumberBTL6PFIOL001 = undefined;\n}\nif       (msg.devices[\"Port 0\"] === \"BTS0002\"){\n    msg.portnumberBTS0002 = \"00\";\n}else if (msg.devices[\"Port 1\"] === \"BTS0002\"){\n    msg.portnumberBTS0002 = \"08\";\n}else if (msg.devices[\"Port 2\"] === \"BTS0002\"){\n    msg.portnumberBTS0002 = \"02\";\n}else if (msg.devices[\"Port 3\"] === \"BTS0002\"){\n    msg.portnumberBTS0002 = \"0A\";\n}else if (msg.devices[\"Port 4\"] === \"BTS0002\"){\n    msg.portnumberBTS0002 = \"04\";\n}else if (msg.devices[\"Port 5\"] === \"BTS0002\"){\n    msg.portnumberBTS0002 = \"0C\";\n}else if (msg.devices[\"Port 6\"] === \"BTS0002\"){\n    msg.portnumberBTS0002 = \"06\";\n}else if (msg.devices[\"Port 7\"] === \"BTS0002\"){\n    msg.portnumberBTS0002 = \"0E\";\n}else {\n    msg.portnumberBOS21M = undefined;\n}\nif       (msg.devices[\"Port 0\"] === \"50132941\"){\n    msg.portnumberBOD0026 = \"00\";\n}else if (msg.devices[\"Port 1\"] === \"50132941\"){\n    msg.portnumberBOD0026 = \"08\";\n}else if (msg.devices[\"Port 2\"] === \"50132941\"){\n    msg.portnumberBOD0026 = \"02\";\n}else if (msg.devices[\"Port 3\"] === \"50132941\"){\n    msg.portnumberBOD0026 = \"0A\";\n}else if (msg.devices[\"Port 4\"] === \"50132941\"){\n    msg.portnumberBOD0026 = \"04\";\n}else if (msg.devices[\"Port 5\"] === \"50132941\"){\n    msg.portnumberBOD0026 = \"0C\";\n}else if (msg.devices[\"Port 6\"] === \"50132941\"){\n    msg.portnumberBOD0026 = \"06\";\n}else if (msg.devices[\"Port 7\"] === \"50132941\"){\n    msg.portnumberBOD0026 = \"0E\";\n}else {\n    msg.portnumberBOD0026 = undefined;\n}\nif       (msg.devices[\"Port 0\"] === \"BOD0020\"){\n    msg.portnumberBOD0020 = \"00\";\n}else if (msg.devices[\"Port 1\"] === \"BOD0020\"){\n    msg.portnumberBOD0020 = \"08\";\n}else if (msg.devices[\"Port 2\"] === \"BOD0020\"){\n    msg.portnumberBOD0020 = \"02\";\n}else if (msg.devices[\"Port 3\"] === \"BOD0020\"){\n    msg.portnumberBOD0020 = \"0A\";\n}else if (msg.devices[\"Port 4\"] === \"BOD0020\"){\n    msg.portnumberBOD0020 = \"04\";\n}else if (msg.devices[\"Port 5\"] === \"BOD0020\"){\n    msg.portnumberBOD0020 = \"0C\";\n}else if (msg.devices[\"Port 6\"] === \"BOD0020\"){\n    msg.portnumberBOD0020 = \"06\";\n}else if (msg.devices[\"Port 7\"] === \"BOD0020\"){\n    msg.portnumberBOD0020 = \"0E\";\n}else {\n    msg.portnumberBOD0020 = undefined;\n}\nif       (msg.devices[\"Port 0\"] === \"DS235\"){\n    msg.portnumberDS235 = \"00\";\n}else if (msg.devices[\"Port 1\"] === \"DS235\"){\n    msg.portnumberDS235 = \"08\";\n}else if (msg.devices[\"Port 2\"] === \"DS235\"){\n    msg.portnumberDS235 = \"02\";\n}else if (msg.devices[\"Port 3\"] === \"DS235\"){\n    msg.portnumberDS235 = \"0A\";\n}else if (msg.devices[\"Port 4\"] === \"DS235\"){\n    msg.portnumberDS235 = \"04\";\n}else if (msg.devices[\"Port 5\"] === \"DS235\"){\n    msg.portnumberDS235 = \"0C\";\n}else if (msg.devices[\"Port 6\"] === \"DS235\"){\n    msg.portnumberDS235 = \"06\";\n}else if (msg.devices[\"Port 7\"] === \"DS235\"){\n    msg.portnumberDS235 = \"0E\";\n}else {\n    msg.portnumberDS235 = undefined;\n}\nif       (msg.devices[\"Port 0\"] === \"BCS012N\"){\n    msg.portnumberBCS012N = \"00\";\n}else if (msg.devices[\"Port 1\"] === \"BCS012N\"){\n    msg.portnumberBCS012N = \"08\";\n}else if (msg.devices[\"Port 2\"] === \"BCS012N\"){\n    msg.portnumberBCS012N = \"02\";\n}else if (msg.devices[\"Port 3\"] === \"BCS012N\"){\n    msg.portnumberBCS012N = \"0A\";\n}else if (msg.devices[\"Port 4\"] === \"BCS012N\"){\n    msg.portnumberBCS012N = \"04\";\n}else if (msg.devices[\"Port 5\"] === \"BCS012N\"){\n    msg.portnumberBCS012N = \"0C\";\n}else if (msg.devices[\"Port 6\"] === \"BCS012N\"){\n    msg.portnumberBCS012N = \"06\";\n}else if (msg.devices[\"Port 7\"] === \"BCS012N\"){\n    msg.portnumberBCS012N = \"0E\";\n}else {\n    msg.portnumberBCS012N = undefined;\n}\nif       (msg.devices[\"Port 0\"] === \"BES04FK\"){\n    msg.portnumberBES04FK = \"00\";\n}else if (msg.devices[\"Port 1\"] === \"BES04FK\"){\n    msg.portnumberBES04FK = \"08\";\n}else if (msg.devices[\"Port 2\"] === \"BES04FK\"){\n    msg.portnumberBES04FK = \"02\";\n}else if (msg.devices[\"Port 3\"] === \"BES04FK\"){\n    msg.portnumberBES04FK = \"0A\";\n}else if (msg.devices[\"Port 4\"] === \"BES04FK\"){\n    msg.portnumberBES04FK = \"04\";\n}else if (msg.devices[\"Port 5\"] === \"BES04FK\"){\n    msg.portnumberBES04FK = \"0C\";\n}else if (msg.devices[\"Port 6\"] === \"BES04FK\"){\n    msg.portnumberBES04FK = \"06\";\n}else if (msg.devices[\"Port 7\"] === \"BES04FK\"){\n    msg.portnumberBES04FK = \"0E\";\n}else {\n    msg.portnumberBES04FK = undefined;\n}\nif       (msg.devices[\"Port 0\"] === \"50129266\"){\n    msg.portnumberBOD0023 = \"00\";\n}else if (msg.devices[\"Port 1\"] === \"50129266\"){\n    msg.portnumberBOD0023 = \"08\";\n}else if (msg.devices[\"Port 2\"] === \"50129266\"){\n    msg.portnumberBOD0023 = \"02\";\n}else if (msg.devices[\"Port 3\"] === \"50129266\"){\n    msg.portnumberBOD0023 = \"0A\";\n}else if (msg.devices[\"Port 4\"] === \"50129266\"){\n    msg.portnumberBOD0023 = \"04\";\n}else if (msg.devices[\"Port 5\"] === \"50129266\"){\n    msg.portnumberBOD0023 = \"0C\";\n}else if (msg.devices[\"Port 6\"] === \"50129266\"){\n    msg.portnumberBOD0023 = \"06\";\n}else if (msg.devices[\"Port 7\"] === \"50129266\"){\n    msg.portnumberBOD0023 = \"0E\";\n}else {\n    msg.portnumberBOD0023 = undefined;\n}\nif       (msg.devices[\"Port 0\"] === \"BMP000N\"){\n    msg.portnumberBMP000N = \"00\";\n}else if (msg.devices[\"Port 1\"] === \"BMP000N\"){\n    msg.portnumberBMP000N = \"08\";\n}else if (msg.devices[\"Port 2\"] === \"BMP000N\"){\n    msg.portnumberBMP000N = \"02\";\n}else if (msg.devices[\"Port 3\"] === \"BMP000N\"){\n    msg.portnumberBMP000N = \"0A\";\n}else if (msg.devices[\"Port 4\"] === \"BMP000N\"){\n    msg.portnumberBMP000N = \"04\";\n}else if (msg.devices[\"Port 5\"] === \"BMP000N\"){\n    msg.portnumberBMP000N = \"0C\";\n}else if (msg.devices[\"Port 6\"] === \"BMP000N\"){\n    msg.portnumberBMP000N = \"06\";\n}else if (msg.devices[\"Port 7\"] === \"BMP000N\"){\n    msg.portnumberBMP000N = \"0E\";\n}else {\n    msg.portnumberBOD0023 = undefined;\n}\nif       (msg.devices[\"Port 0\"] === \"BIP001M\"){\n    msg.portnumberBIP001M = \"00\";\n}else if (msg.devices[\"Port 1\"] === \"BIP001M\"){\n    msg.portnumberBIP001M = \"08\";\n}else if (msg.devices[\"Port 2\"] === \"BIP001M\"){\n    msg.portnumberBIP001M = \"02\";\n}else if (msg.devices[\"Port 3\"] === \"BIP001M\"){\n    msg.portnumberBIP001M = \"0A\";\n}else if (msg.devices[\"Port 4\"] === \"BIP001M\"){\n    msg.portnumberBIP001M = \"04\";\n}else if (msg.devices[\"Port 5\"] === \"BIP001M\"){\n    msg.portnumberBIP001M = \"0C\";\n}else if (msg.devices[\"Port 6\"] === \"BIP001M\"){\n    msg.portnumberBIP001M = \"06\";\n}else if (msg.devices[\"Port 7\"] === \"BIP001M\"){\n    msg.portnumberBIP001M = \"0E\";\n}else {\n    msg.portnumberBIP001M = undefined;\n}\nif       (msg.devices[\"Port 0\"] === \"BMLL1IOL1011\"){\n    msg.portnumberBMLL1IOL1011 = \"00\";\n}else if (msg.devices[\"Port 1\"] === \"BMLL1IOL1011\"){\n    msg.portnumberBMLL1IOL1011 = \"08\";\n}else if (msg.devices[\"Port 2\"] === \"BMLL1IOL1011\"){\n    msg.portnumberBMLL1IOL1011 = \"02\";\n}else if (msg.devices[\"Port 3\"] === \"BMLL1IOL1011\"){\n    msg.portnumberBMLL1IOL1011 = \"0A\";\n}else if (msg.devices[\"Port 4\"] === \"BMLL1IOL1011\"){\n    msg.portnumberBMLL1IOL1011 = \"04\";\n}else if (msg.devices[\"Port 5\"] === \"BMLL1IOL1011\"){\n    msg.portnumberBMLL1IOL1011 = \"0C\";\n}else if (msg.devices[\"Port 6\"] === \"BMLL1IOL1011\"){\n    msg.portnumberBMLL1IOL1011 = \"06\";\n}else if (msg.devices[\"Port 7\"] === \"BMLL1IOL1011\"){\n    msg.portnumberBMLL1IOL1011 = \"0E\";\n}else {\n    msg.portnumberBMLL1IOL1011 = undefined;\n}\nif       (msg.devices[\"Port 0\"] === \"BCM0002_AIO_TBD\"){\n    msg.portnumberBCM0002_AIO_TBD = \"00\";\n}else if (msg.devices[\"Port 1\"] === \"BCM0002_AIO_TBD\"){\n    msg.portnumberBCM0002_AIO_TBD = \"08\";\n}else if (msg.devices[\"Port 2\"] === \"BCM0002_AIO_TBD\"){\n    msg.portnumberBCM0002_AIO_TBD = \"02\";\n}else if (msg.devices[\"Port 3\"] === \"BCM0002_AIO_TBD\"){\n    msg.portnumberBCM0002_AIO_TBD = \"0A\";\n}else if (msg.devices[\"Port 4\"] === \"BCM0002_AIO_TBD\"){\n    msg.portnumberBCM0002_AIO_TBD = \"04\";\n}else if (msg.devices[\"Port 5\"] === \"BCM0002_AIO_TBD\"){\n    msg.portnumberBCM0002_AIO_TBD = \"0C\";\n}else if (msg.devices[\"Port 6\"] === \"BCM0002_AIO_TBD\"){\n    msg.portnumberBCM0002_AIO_TBD = \"06\";\n}else if (msg.devices[\"Port 7\"] === \"BCM0002_AIO_TBD\"){\n    msg.portnumberBCM0002_AIO_TBD = \"0E\";\n}else {\n    msg.portnumberBCM0002_AIO_TBD = undefined;\n}\n/*\nif       (msg.devices[\"Port 0\"] === \"BCM0002_AIO_TBD\"){\n    msg.portnumberBCM0002_AIO_TBD = \"00\";\n}else if (msg.devices[\"Port 1\"] === \"BCM0002_AIO_TBD\"){\n    msg.portnumberBCM0002_AIO_TBD = \"08\";\n}else if (msg.devices[\"Port 2\"] === \"BCM0002_AIO_TBD\"){\n    msg.portnumberBCM0002_AIO_TBD = \"02\";\n}else if (msg.devices[\"Port 3\"] === \"BCM0002_AIO_TBD\"){\n    msg.portnumberBCM0002_AIO_TBD = \"0A\";\n}else if (msg.devices[\"Port 4\"] === \"BCM0002_AIO_TBD\"){\n    msg.portnumberBCM0002_AIO_TBD = \"04\";\n}else if (msg.devices[\"Port 5\"] === \"BCM0002_AIO_TBD\"){\n    msg.portnumberBCM0002_AIO_TBD = \"0C\";\n}else if (msg.devices[\"Port 6\"] === \"BCM0002_AIO_TBD\"){\n    msg.portnumberBCM0002_AIO_TBD = \"06\";\n}else if (msg.devices[\"Port 7\"] === \"BCM0002_AIO_TBD\"){\n    msg.portnumberBCM0002_AIO_TBD = \"0E\";\n}else {\n    msg.portnumberBCM0002_AIO_TBD = undefined;\n}\nglobal.set('BCM0002_AIO_TBD',msg.portnumberBCM0002_AIO_TBD);\n*/    \n//set global variables to control data flows. \n\nglobal.set('BOS026R',msg.portnumberBOS026R);\nglobal.set('BAE00TP',msg.portnumberBAE00TP);\nglobal.set('BNI00E0',msg.portnumberBNI00E0);\nglobal.set('BUS004P',msg.portnumberBUS004P);\nglobal.set('BNI0088',msg.portnumberBNI0088);\nglobal.set('BNI0008',msg.portnumberBNI0008);\nglobal.set('BAW004M',msg.portnumberBAW004M);\nglobal.set('BTL6PFIOL001',msg.portnumberBTL6PFIOL001);\nglobal.set('BTS0002',msg.portnumberBTS0002);\nglobal.set('BOD0026',msg.portnumberBOD0026);\nglobal.set('BOD0020',msg.portnumberBOD0020);\nglobal.set('DS235',msg.portnumberDS235);\nglobal.set('BCS012N',msg.portnumberBCS012N);\nglobal.set('BES04FK',msg.portnumberBES04FK);\nglobal.set('BOD0023',msg.portnumberBOD0023);\nglobal.set('BMP000N',msg.portnumberBMP000N);\nglobal.set('BIP001M',msg.portnumberBIP001M);\nglobal.set('BMLL1IOL1011',msg.portnumberBMLL1IOL1011);\nglobal.set('BCM0002_AIO_TBD',msg.portnumberBCM0002_AIO_TBD);\n/*\nflow.set('sensor1',);\nflow.set('sensor1',);\nflow.set('sensor1',);\nflow.set('sensor1',);\nflow.set('sensor1',);\nflow.set('sensor1',);\n*/\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1140,
        "y": 480,
        "wires": [
            [
                "743e7e63.dc629",
                "d3ed9fd8.33908"
            ]
        ]
    },
    {
        "id": "bc8bccfa.c48b1",
        "type": "comment",
        "z": "e393e3b.e73752",
        "name": "Get IO-Link Port Infos via dprop",
        "info": "",
        "x": 270,
        "y": 460,
        "wires": []
    },
    {
        "id": "81a347e8.51b5a8",
        "type": "ui_button",
        "z": "e393e3b.e73752",
        "name": "",
        "group": "6cad7ab4.1adf04",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Set Ports to IO-Link",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 230,
        "y": 320,
        "wires": [
            [
                "2abb4915.877086"
            ]
        ]
    },
    {
        "id": "d03c9bf6.241fb8",
        "type": "switch",
        "z": "e393e3b.e73752",
        "name": "check if config is set",
        "property": "configIsSet",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 720,
        "y": 360,
        "wires": [
            [
                "b05bfb3f.c34e18"
            ],
            [
                "41f1fc90.4ba6e4"
            ]
        ]
    },
    {
        "id": "662fec11.819874",
        "type": "change",
        "z": "e393e3b.e73752",
        "name": "Set Ports are Set...",
        "rules": [
            {
                "t": "set",
                "p": "portsAreSet",
                "pt": "flow",
                "to": "OK",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "portsAreSet",
                "pt": "global",
                "to": "OK",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1490,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "36f1127.39c83ee",
        "type": "delay",
        "z": "e393e3b.e73752",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1280,
        "y": 240,
        "wires": [
            [
                "662fec11.819874"
            ]
        ]
    },
    {
        "id": "6986dc96.655434",
        "type": "switch",
        "z": "e393e3b.e73752",
        "name": "check if ports are set?",
        "property": "portsAreSet",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 460,
        "y": 500,
        "wires": [
            [
                "7523607.22bd4a"
            ],
            [
                "1562ed26.43c1e3"
            ]
        ]
    },
    {
        "id": "1562ed26.43c1e3",
        "type": "change",
        "z": "e393e3b.e73752",
        "name": "Ports Not Set",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Ports Not Set",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 520,
        "wires": [
            [
                "7d82e557.76722c"
            ]
        ]
    },
    {
        "id": "41f1fc90.4ba6e4",
        "type": "change",
        "z": "e393e3b.e73752",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "configIsSet",
                "pt": "msg",
                "to": "Config Not Set",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 400,
        "wires": [
            [
                "e6f97083.67e"
            ]
        ]
    },
    {
        "id": "743e7e63.dc629",
        "type": "delay",
        "z": "e393e3b.e73752",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1280,
        "y": 540,
        "wires": [
            [
                "359d09f6.e95a96"
            ]
        ]
    },
    {
        "id": "359d09f6.e95a96",
        "type": "change",
        "z": "e393e3b.e73752",
        "name": "Sensors are Set...",
        "rules": [
            {
                "t": "set",
                "p": "SensorsAreSet",
                "pt": "flow",
                "to": "OK",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "SensorsAreSet",
                "pt": "global",
                "to": "OK",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1470,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "bd523402.352048",
        "type": "inject",
        "z": "e393e3b.e73752",
        "name": "inject once at start...",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "x": 360,
        "y": 100,
        "wires": [
            [
                "b0df61ba.2850e"
            ]
        ]
    },
    {
        "id": "b0df61ba.2850e",
        "type": "change",
        "z": "e393e3b.e73752",
        "name": "set configuration...",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "flow",
                "to": "192.168.2.11",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "ports",
                "pt": "flow",
                "to": "[0,2,4,6,8,10,12,14]",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "configIsSet",
                "pt": "flow",
                "to": "OK",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "host",
                "pt": "global",
                "to": "192.168.2.11",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "ports",
                "pt": "global",
                "to": "[0,2,4,6,8,10,12,14]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "33a76d8a.0ed182",
        "type": "comment",
        "z": "e393e3b.e73752",
        "name": "change configuration here!",
        "info": "",
        "x": 590,
        "y": 40,
        "wires": []
    },
    {
        "id": "d3ed9fd8.33908",
        "type": "debug",
        "z": "e393e3b.e73752",
        "name": "Dprop Ports sensors Object ",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1600,
        "y": 480,
        "wires": []
    },
    {
        "id": "e6f97083.67e",
        "type": "debug",
        "z": "e393e3b.e73752",
        "name": "Config Not Set",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1120,
        "y": 420,
        "wires": []
    },
    {
        "id": "7d82e557.76722c",
        "type": "debug",
        "z": "e393e3b.e73752",
        "name": "Ports Not Set",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 850,
        "y": 520,
        "wires": []
    },
    {
        "id": "9098f801.ef56d8",
        "type": "link out",
        "z": "e393e3b.e73752",
        "name": "Send UDP from Set Prots",
        "links": [
            "d3db8e06.f0851"
        ],
        "x": 1675,
        "y": 300,
        "wires": []
    },
    {
        "id": "60f12d31.2d4414",
        "type": "udp out",
        "z": "6539041e.99e41c",
        "name": "UDP Output node",
        "addr": "",
        "iface": "",
        "port": "",
        "ipv": "udp4",
        "outport": "2000",
        "base64": false,
        "multicast": "false",
        "x": 750,
        "y": 440,
        "wires": []
    },
    {
        "id": "d3db8e06.f0851",
        "type": "link in",
        "z": "6539041e.99e41c",
        "name": "Send to UDP node (recives)",
        "links": [
            "75bbf10d.40d65",
            "9098f801.ef56d8",
            "8eb81841.c5be38",
            "1c286a4b.4f46f6",
            "58b0b004.c1c1d",
            "4e96664d.c6be58",
            "c1077a75.7b46d8",
            "ca39cdea.0c12d",
            "ed0d5edd.8e576",
            "2406c328.78fdac",
            "5109c2ef.79d96c",
            "d49c18ec.c98748",
            "419d027c.22887c",
            "62f4f6a1.77e888",
            "965423c9.542d2",
            "53c16067.d7644",
            "e1edd5ff.3b6af8",
            "569dd534.cf27cc",
            "3d833e80.b30832"
        ],
        "x": 175,
        "y": 440,
        "wires": [
            [
                "42771f2f.f050b",
                "71b6555a.7711cc"
            ]
        ]
    },
    {
        "id": "1f0cb866.cf2868",
        "type": "function",
        "z": "ef438055.f492a",
        "name": "GET IOL Port Data",
        "func": "//msg.hex = \"05 00 02 0A 00\"\n\n// list of ports to initialize\nlet iolports = msg.ports || [0]; \n\n// get port_index from node context, or initialize\nlet iolport_index = context.get('iolport_index') || 0;\n\n// finished?\nif (iolport_index >= iolports.length) {\n    context.set('iolport_index', null); // undefine port_index\n    return null;\n}\n    \n// prepare message:\nif ((iolports[iolport_index]) <16) {\n    msg.Data = \"0\"+ (iolports[iolport_index].toString(16));\n} else { \n    msg.Data = (iolports[iolport_index].toString(16));\n}\n//msg.port = (\"00\" + ports[port_index]).slice(-2);\n// next port...\ncontext.set('iolport_index', iolport_index+1);\n\n\nmsg.hex = \"05 00 02 0A \"+ msg.Data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1010,
        "y": 300,
        "wires": [
            [
                "dd6d2943.3589a8",
                "f87c163e.75c958"
            ]
        ]
    },
    {
        "id": "deb94763.357ef8",
        "type": "inject",
        "z": "ef438055.f492a",
        "name": "TS-0.8sec",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "0.8",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 230,
        "y": 300,
        "wires": [
            [
                "8c25f161.52373"
            ]
        ]
    },
    {
        "id": "dd6d2943.3589a8",
        "type": "delay",
        "z": "ef438055.f492a",
        "name": "",
        "pauseType": "delay",
        "timeout": "15",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1010,
        "y": 340,
        "wires": [
            [
                "1f0cb866.cf2868"
            ]
        ]
    },
    {
        "id": "f8b69211.12273",
        "type": "change",
        "z": "ef438055.f492a",
        "name": "read host and ports from config",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "host",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "ports",
                "pt": "msg",
                "to": "ports",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 300,
        "wires": [
            [
                "1f0cb866.cf2868"
            ]
        ]
    },
    {
        "id": "f87c163e.75c958",
        "type": "function",
        "z": "ef438055.f492a",
        "name": "Set Payload to Buffer",
        "func": "var string = msg.hex.replace(/\\s/g,'');\nmsg.ip = msg.host;\nmsg.port = '1999';\nmsg.payload = Buffer.from(string,\"hex\");\n\nreturn msg;\n\n//msg.payload = Buffer.from(msg.payload, \"hex\");\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1280,
        "y": 300,
        "wires": [
            [
                "75bbf10d.40d65",
                "bad0afbf.1adc8"
            ]
        ]
    },
    {
        "id": "b137aa74.0dd3f8",
        "type": "comment",
        "z": "ef438055.f492a",
        "name": "Get Port Data of all 8 ports",
        "info": "",
        "x": 270,
        "y": 260,
        "wires": []
    },
    {
        "id": "8c25f161.52373",
        "type": "switch",
        "z": "ef438055.f492a",
        "name": "check if Ports are set?",
        "property": "portsAreSet",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 440,
        "y": 300,
        "wires": [
            [
                "f8b69211.12273"
            ],
            [
                "8c389692.c3f9c8"
            ]
        ]
    },
    {
        "id": "8c389692.c3f9c8",
        "type": "change",
        "z": "ef438055.f492a",
        "name": "Ports Not Set",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Ports Not Set",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 360,
        "wires": [
            [
                "14135fc6.b7f2b"
            ]
        ]
    },
    {
        "id": "75bbf10d.40d65",
        "type": "link out",
        "z": "ef438055.f492a",
        "name": "send UDP from Port Data",
        "links": [
            "d3db8e06.f0851"
        ],
        "x": 1475,
        "y": 300,
        "wires": []
    },
    {
        "id": "14135fc6.b7f2b",
        "type": "debug",
        "z": "ef438055.f492a",
        "name": "Ports Not Set",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 830,
        "y": 360,
        "wires": []
    },
    {
        "id": "bad0afbf.1adc8",
        "type": "debug",
        "z": "ef438055.f492a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1400,
        "y": 380,
        "wires": []
    },
    {
        "id": "8841e7c9.830248",
        "type": "udp in",
        "z": "6539041e.99e41c",
        "name": "UDP Input node",
        "iface": "",
        "port": "2000",
        "ipv": "udp4",
        "multicast": "false",
        "group": "",
        "datatype": "buffer",
        "x": 940,
        "y": 440,
        "wires": [
            [
                "221794e2.c3fdbc",
                "bee7c340.25f39",
                "23d587e3.88c508"
            ]
        ]
    },
    {
        "id": "fb884fd9.b6637",
        "type": "debug",
        "z": "6539041e.99e41c",
        "name": "transform Return massage",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1700,
        "y": 400,
        "wires": []
    },
    {
        "id": "221794e2.c3fdbc",
        "type": "change",
        "z": "6539041e.99e41c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "LowIndex",
                "pt": "msg",
                "to": "LowIndex",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "SubIndex",
                "pt": "msg",
                "to": "SubIndex",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 440,
        "wires": [
            [
                "657afb83.2df7d4"
            ]
        ]
    },
    {
        "id": "657afb83.2df7d4",
        "type": "function",
        "z": "6539041e.99e41c",
        "name": "transform Return massage",
        "func": "//Original Object from BNI;\nmsg.returnObject = msg.payload;\n\n//Object to tidy Hex string\nmsg.response = msg.payload.toString('hex').match(/.{2}/g).join(' ');\nmsg.BNIPort = msg.returnObject[4]; //Byte 4 gives back the Port\n\n\n//which Command was returned;\nmsg.command = msg.returnObject[3]; //Byte 3 gives Back the Command\nmsg.dataLength = undefined;\n\n\nswitch ( msg.command )\n{\ncase 10: //ReadProcessData\n    if ( msg.BNIPort == 255 )\n    {\n        msg.portData = [];\n        var dataLength = (msg.returnObject[0] | ( msg.returnObject[1] << 8 ))-5;\n        var offset = 5;\n        var itemLength;\n\n        while ( dataLength > 0 )\n        {\n            itemLength = msg.returnObject[ offset ];\n            \n            if ( itemLength + 1 > dataLength )\n            {\n                // Error - data says it's longer than the buffer.\n                break;\n            }\n            \n            if ( itemLength < 1 )\n            {\n                // Error - invalid data length\n                break;\n            }\n\n          msg.portData.push({\n                \"data\":    msg.returnObject.slice( offset + 1, offset + itemLength ),\n      \"PDvalid\": msg.returnObject[ offset + itemLength ]\n            });\n\n            offset += itemLength + 1;\n     dataLength -= itemLength + 1;\n        }\n    }\n    else\n    {\n        msg.dataLength = (msg.returnObject[0] | ( msg.returnObject[1] << 8 ))-6;\n        msg.PDValid = msg.returnObject[msg.returnObject.length-1];\n   }\n    break;\n//case 11: //WriteProcessData\n   // break;\n//case 9: //ALReadReq\n   // break;\n//case 8: //ALWriteReq\n   // break;\n//case 6: //ALReadError\n  //  break;\n//case 4: Master Event \n  //break;\n//case 7: //ALWriteError\n  //  break;\ndefault:\n    break;\n}\n\nreturn msg;\n\n//toDos: read all Process Data muss noch ausgewerte werden. 09 bei BOS21 in PD valid bedeutet LED aus... ",
        "outputs": 1,
        "noerr": 0,
        "x": 1400,
        "y": 440,
        "wires": [
            [
                "fb884fd9.b6637",
                "f96c435f.a589d",
                "ab84c7b1.a289b8",
                "29fdf072.54f6"
            ]
        ]
    },
    {
        "id": "f96c435f.a589d",
        "type": "function",
        "z": "6539041e.99e41c",
        "name": "command 6 AL_Read Error",
        "func": "if (msg.command === 6){\n    msg.payload = msg.response.substr(15,5);\n}else {return \n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1320,
        "y": 780,
        "wires": [
            [
                "869b4b35.d5b828"
            ]
        ]
    },
    {
        "id": "ab84c7b1.a289b8",
        "type": "function",
        "z": "6539041e.99e41c",
        "name": "command 4 Master send Error Code",
        "func": "if (msg.command === 4){\n    msg.type = msg.response.substr(15,21);\n}else {return \n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1350,
        "y": 820,
        "wires": [
            [
                "14b2bc5b.553774"
            ]
        ]
    },
    {
        "id": "14b2bc5b.553774",
        "type": "debug",
        "z": "6539041e.99e41c",
        "name": "command 4 Master send Error Code",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1670,
        "y": 820,
        "wires": []
    },
    {
        "id": "869b4b35.d5b828",
        "type": "debug",
        "z": "6539041e.99e41c",
        "name": "command 6 AL_Read Error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1640,
        "y": 780,
        "wires": []
    },
    {
        "id": "29fdf072.54f6",
        "type": "link out",
        "z": "6539041e.99e41c",
        "name": "Massage Return (Sends Json)",
        "links": [
            "7bb74f53.0b0ea",
            "39158556.bc56aa",
            "73571169.61bf1",
            "876ac422.259438",
            "b5f2566a.4e7dd8",
            "a18aa791.be4e58",
            "e97c90ac.9d551",
            "b34ddada.120828",
            "651dd15a.273b4",
            "b408e71c.d6fbb8",
            "3f0af00b.d2975",
            "98448688.914a68",
            "38bcd236.c341fe",
            "bf8bd065.a7bfb",
            "d6c132f.01fd0d",
            "5ee1f121.6404d",
            "cb54ff6.8433b",
            "c9262b18.2dff18",
            "bc26935b.20661",
            "9cc671d0.1c56e",
            "da4e99e1.447978",
            "df6c407f.08795",
            "87fe7570.28ad68",
            "eebe9534.99e908",
            "d0849b72.0812d8",
            "11f15b93.16d0c4",
            "76642832.c6c758",
            "dfd32cf4.50dd58",
            "fdcdc8f0.be1e78"
        ],
        "x": 1655,
        "y": 440,
        "wires": []
    },
    {
        "id": "bdd32240.a1e7d",
        "type": "comment",
        "z": "67804b5a.aa2f64",
        "name": "Process Data",
        "info": "",
        "x": 450,
        "y": 100,
        "wires": []
    },
    {
        "id": "1223ab0a.8834b5",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "ProcessInputs: BOS21ACAP",
        "func": "if (msg.BNIPort === parseInt(global.get('BOS026R'),16) && msg.command === 10) {\n    msg.payload = msg.response.substr(15,8);\n} else {return;\n    \n}\n\nreturn msg;\n//{ payload:msg.payload.substr(15,8) };",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 320,
        "wires": [
            [
                "5e69302f.d5f5c",
                "61f1dc6f.1bafb4"
            ]
        ]
    },
    {
        "id": "5e69302f.d5f5c",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "BOS Convert to binary",
        "func": "var string = (parseInt((msg.payload.substr(6, 2)) ,16)).toString(2);\n\nwhile (string.length%8){string=\"0\"+string;}\n\nmsg.payload = string;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 320,
        "wires": [
            [
                "b36c7fb0.9bb11",
                "d8f33d3b.c8e47",
                "bfc78177.0931c",
                "22e16092.d4c4d",
                "314b6262.ab90be",
                "1b83e3eb.53d86c",
                "790f4115.927b5",
                "bfd6efbf.595af"
            ]
        ]
    },
    {
        "id": "61f1dc6f.1bafb4",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "BOS Counter",
        "func": "msg.payload = parseInt((msg.payload.substr(0, 2))+(msg.payload.substr(3, 2)) ,16);\nmsg.setting = flow.get('settingBOS21');\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 850,
        "y": 420,
        "wires": [
            [
                "60df83d7.d0bfac",
                "3545b1b9.12980e",
                "72aca78b.8806b8",
                "1ba64fe3.a4d04"
            ]
        ]
    },
    {
        "id": "b36c7fb0.9bb11",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "Index 7",
        "func": "msg.payload = msg.payload.substr(0, 1);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1160,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "d8f33d3b.c8e47",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "Index 6",
        "func": "msg.payload = msg.payload.substr(1, 1);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1160,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "bfc78177.0931c",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "Index 5",
        "func": "msg.payload = msg.payload.substr(2, 1);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1160,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "22e16092.d4c4d",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "Index 4",
        "func": "msg.payload = msg.payload.substr(3, 1);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1160,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "314b6262.ab90be",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "Index 3",
        "func": "msg.payload = msg.payload.substr(4, 1);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1160,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "1b83e3eb.53d86c",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "Index 2",
        "func": "msg.payload = msg.payload.substr(5, 1);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1160,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "790f4115.927b5",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "Index 1",
        "func": "msg.payload = msg.payload.substr(6, 1);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1160,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "bfd6efbf.595af",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "Index 0",
        "func": "msg.payload = msg.payload.substr(7, 1);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1160,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "60df83d7.d0bfac",
        "type": "ui_text",
        "z": "67804b5a.aa2f64",
        "group": "32ee9a7b.eeac46",
        "order": 2,
        "width": "7",
        "height": "2",
        "name": "BOS 21 Swich Settings & Counter",
        "label": "{{msg.setting}}",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1160,
        "y": 440,
        "wires": []
    },
    {
        "id": "7bb74f53.0b0ea",
        "type": "link in",
        "z": "67804b5a.aa2f64",
        "name": "Process Data Hanling",
        "links": [
            "29fdf072.54f6"
        ],
        "x": 415,
        "y": 320,
        "wires": [
            [
                "1223ab0a.8834b5"
            ]
        ]
    },
    {
        "id": "3545b1b9.12980e",
        "type": "debug",
        "z": "67804b5a.aa2f64",
        "name": "BOS21M counter",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1110,
        "y": 400,
        "wires": []
    },
    {
        "id": "80b6ebb6.5eb428",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "BOS026R Command 07 LowIndex === \"B6\"",
        "func": "if (msg.BNIPort === parseInt(global.get('BOS026R'),16) && msg.command === 08 && msg.LowIndex === \"B6\") {\n    msg.payload = \"BOS026R Set OK\"\n} else {return;\n    \n}\n\nreturn msg;\n//{ payload:msg.payload.substr(15,8) };\n//msg.payload = msg.response;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 620,
        "wires": [
            [
                "d80f1eef.1e65e"
            ]
        ]
    },
    {
        "id": "d80f1eef.1e65e",
        "type": "ui_toast",
        "z": "67804b5a.aa2f64",
        "position": "bottom left",
        "displayTime": "1.5",
        "highlight": "",
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "",
        "name": "",
        "x": 990,
        "y": 620,
        "wires": []
    },
    {
        "id": "6cf0f59b.a505ec",
        "type": "comment",
        "z": "67804b5a.aa2f64",
        "name": "Service Data 1 second Cycle",
        "info": "",
        "x": 500,
        "y": 560,
        "wires": []
    },
    {
        "id": "39158556.bc56aa",
        "type": "link in",
        "z": "67804b5a.aa2f64",
        "name": "Service Data Hanling",
        "links": [
            "29fdf072.54f6"
        ],
        "x": 415,
        "y": 620,
        "wires": [
            [
                "80b6ebb6.5eb428"
            ]
        ]
    },
    {
        "id": "4062bf6.494db4",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "BOS21ADCAP access Gain",
        "func": "if (msg.BNIPort === parseInt(global.get('BOS026R'),16) && msg.command === 9 && msg.LowIndex ===\"BD\" && msg.SubIndex === \"00\") {\n    msg.payload = msg.response.substr(18,5);\n} else {return;\n    \n}\n\nreturn msg;\n//{ payload:msg.payload.substr(15,8) };",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 860,
        "wires": [
            [
                "a4872a6f.705f98",
                "37d9e4fb.53a5ac"
            ]
        ]
    },
    {
        "id": "a4872a6f.705f98",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "Calc Gain",
        "func": "msg.payload = parseInt((msg.payload.substr(0, 2))+(msg.payload.substr(3, 2)) ,16);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 800,
        "y": 860,
        "wires": [
            [
                "4c66ff94.c20aa",
                "4ff3f4d8.3e42ec",
                "ea42a779.05e838"
            ]
        ]
    },
    {
        "id": "27e75306.b9afac",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "AL_ReadReq Operating Hours BOS21 ",
        "func": "msg.Start = '08 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '02'; // Kommando\nmsg.IOLPort = global.get('BOS026R'); //Port Nummer\nmsg.LowIndex = '57'; //IO-Link Index \nmsg.HighIndex = '00'; //IO-Link Index (meiﬂtens 00)\nmsg.SubIndex = '01'; //IO-Link SubIndex \n\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 1260,
        "wires": [
            [
                "a0200150.8a36c"
            ]
        ]
    },
    {
        "id": "979a69ea.f4fa28",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "AL_ReadReq Operating Hours BOS21 Last Maintenance",
        "func": "msg.Start = '08 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '02'; // Kommando\nmsg.IOLPort = global.get('BOS026R'); //Port Nummer\nmsg.LowIndex = '57'; //IO-Link Index \nmsg.HighIndex = '00'; //IO-Link Index (meiﬂtens 00)\nmsg.SubIndex = '02'; //IO-Link SubIndex \n\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 1340,
        "wires": [
            [
                "a0200150.8a36c"
            ]
        ]
    },
    {
        "id": "7b7061a7.8510d",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "AL_ReadReq Access Gain BOS21 ",
        "func": "msg.Start = '08 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '02'; // Kommando\nmsg.IOLPort = global.get('BOS026R'); //Port Nummer\nmsg.LowIndex = 'BD'; //IO-Link Index \nmsg.HighIndex = '00'; //IO-Link Index (meiﬂtens 00)\nmsg.SubIndex = '00'; //IO-Link SubIndex \n\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 700,
        "wires": [
            [
                "fe69f642.128218",
                "be9bfed0.b52d2"
            ]
        ]
    },
    {
        "id": "96d29ca9.a7cf3",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "BOS21ADCAP Operating Hours",
        "func": "if (msg.BNIPort === parseInt(global.get('BOS026R'),16) && msg.command === 9 && msg.LowIndex ===\"57\" && msg.SubIndex === \"01\") {\n    msg.payload = msg.response.substr(18,12);\n} else {return;\n    \n}\n\nreturn msg;\n//{ payload:msg.payload.substr(15,8) };",
        "outputs": 1,
        "noerr": 0,
        "x": 550,
        "y": 1820,
        "wires": [
            [
                "41501358.8fb9ac"
            ]
        ]
    },
    {
        "id": "41501358.8fb9ac",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "Calc Hours",
        "func": "msg.payload = parseInt((msg.payload.substr(0, 2))+(msg.payload.substr(3, 2))+(msg.payload.substr(6, 2))+(msg.payload.substr(9, 2)),16);\nflow.set('BOSOperatingHours',msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 930,
        "y": 1820,
        "wires": [
            [
                "d2c07b5f.375298",
                "553949f4.165028"
            ]
        ]
    },
    {
        "id": "ae1af7f7.fa5cb8",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "BOS21ADCAP Operating Hous last maintenance ",
        "func": "if (msg.BNIPort === parseInt(global.get('BOS026R'),16) && msg.command === 9 && msg.LowIndex ===\"57\" && msg.SubIndex === \"02\") {\n    msg.payload = msg.response.substr(18,12);\n} else {return;\n    \n}\n\nreturn msg;\n//{ payload:msg.payload.substr(15,8) };",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 1860,
        "wires": [
            [
                "3ecb63a2.eb188c"
            ]
        ]
    },
    {
        "id": "3ecb63a2.eb188c",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "Calc Hours",
        "func": "msg.payload = parseInt((msg.payload.substr(0, 2))+(msg.payload.substr(3, 2))+(msg.payload.substr(6, 2))+(msg.payload.substr(9, 2)),16);\nflow.set('BOSOperatingHoursMaintenance',msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 930,
        "y": 1860,
        "wires": [
            [
                "c196359b.27c4d8",
                "1bf5655a.ff98eb"
            ]
        ]
    },
    {
        "id": "653b6a51.da86d4",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "AL_WriteReq BOS21M Type Switch",
        "func": "//msg.Start = '09 00';//9 + Length of Data, 00\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '03';\nmsg.IOLPort = global.get('BOS026R');\nmsg.LowIndex = 'BB';\nmsg.HighIndex = '00';\nmsg.SubIndex = '00';\nmsg.LengthOfData = '01';\nmsg.Data = msg.payload//msg.DataIn;\n\nif ((9 + parseInt(msg.LengthOfData)) <16) {\n    msg.Start = \"0\"+ (9 + parseInt(msg.LengthOfData)).toString(16) + \" 00\";\n} else { \n    msg.Start = (9 + parseInt(msg.LengthOfData)).toString(16)+ \" 00\";\n}\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex +\" \"+ msg.LengthOfData +\" \"+ msg.Data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 2320,
        "wires": [
            [
                "f88befa1.609e7"
            ]
        ]
    },
    {
        "id": "4c66ff94.c20aa",
        "type": "ui_chart",
        "z": "67804b5a.aa2f64",
        "name": "",
        "group": "549be9c0.957798",
        "order": 1,
        "width": "16",
        "height": "14",
        "label": "Access Gain",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "2500",
        "removeOlder": "20",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 2,
        "x": 970,
        "y": 860,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "7bf2ab12.600374",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "AL_ReadReq BOS21 LED Lifetime",
        "func": "msg.Start = '08 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '02'; // Kommando\nmsg.IOLPort = global.get('BOS026R'); //Port Nummer\nmsg.LowIndex = 'BE'; //IO-Link Index \nmsg.HighIndex = '00'; //IO-Link Index (meiﬂtens 00)\nmsg.SubIndex = '00'; //IO-Link SubIndex \n\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 1380,
        "wires": [
            [
                "a0200150.8a36c"
            ]
        ]
    },
    {
        "id": "b096df03.1b98",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "BOS21ADCAP LED Lifetime",
        "func": "if (msg.BNIPort === parseInt(global.get('BOS026R'),16) && msg.command === 9 && msg.LowIndex === \"BE\" && msg.SubIndex === \"00\") {\n    msg.payload = msg.response.substr(18,3);\n} else {return;\n    \n}\n\nreturn msg;\n//{ payload:msg.payload.substr(15,8) };",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 1900,
        "wires": [
            [
                "2e7f0419.09f5dc"
            ]
        ]
    },
    {
        "id": "2e7f0419.09f5dc",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "Calc LED Power",
        "func": "msg.payload = parseInt(msg.payload.substr(0, 2),16);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 1900,
        "wires": [
            [
                "868ca316.41bb7",
                "1153dc95.535a53"
            ]
        ]
    },
    {
        "id": "deeb87d0.fc8788",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "AL_ReadReq BOS21M Vendeor name",
        "func": "msg.Start = '08 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '02'; // Kommando\nmsg.IOLPort = global.get('BOS026R'); //Port Nummer\nmsg.LowIndex = '10'; //IO-Link Index \nmsg.HighIndex = '00'; //IO-Link Index (meiﬂtens 00)\nmsg.SubIndex = '00'; //IO-Link SubIndex \n\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 1420,
        "wires": [
            [
                "a0200150.8a36c"
            ]
        ]
    },
    {
        "id": "ecfe608e.e80a7",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "BOS21ADCAP Vendor Name",
        "func": "if (msg.BNIPort === parseInt(global.get('BOS026R'),16) && msg.command === 9 && msg.LowIndex === \"10\" && msg.SubIndex === \"00\") {\n    msg.payload = msg.response.substr(18,21);\n} else {return;\n    \n}\n\nreturn msg;\n//{ payload:msg.payload.substr(15,8) };",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 1940,
        "wires": [
            [
                "20ad7e26.556262"
            ]
        ]
    },
    {
        "id": "20ad7e26.556262",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "Hex to Ascii",
        "func": "var string = msg.payload.replace(/\\s/g,'');\n\nmsg.balluffHex = Buffer.from(string,\"hex\");\nmsg.payload = msg.balluffHex.toString('ascii')\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 930,
        "y": 1940,
        "wires": [
            [
                "4cf2563c.f85bf8"
            ]
        ]
    },
    {
        "id": "4cf2563c.f85bf8",
        "type": "ui_text",
        "z": "67804b5a.aa2f64",
        "group": "58bdd1e1.5b2db",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Vendor Name:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1100,
        "y": 1940,
        "wires": []
    },
    {
        "id": "ba142b9e.ba1398",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "AL_ReadReq BOS21M product Code ",
        "func": "msg.Start = '08 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '02'; // Kommando\nmsg.IOLPort = global.get('BOS026R'); //Port Nummer\nmsg.LowIndex = '13'; //IO-Link Index \nmsg.HighIndex = '00'; //IO-Link Index (meiﬂtens 00)\nmsg.SubIndex = '00'; //IO-Link SubIndex \n\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 1460,
        "wires": [
            [
                "a0200150.8a36c"
            ]
        ]
    },
    {
        "id": "ae74ee84.6fb72",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "BOS21ADCAP Order Code",
        "func": "if (msg.BNIPort === parseInt(global.get('BOS026R'),16) && msg.command === 9 && msg.LowIndex === \"13\" && msg.SubIndex === \"00\") {\n    msg.payload = msg.response.substr(18,21);\n} else {return;\n    \n}\n\nreturn msg;\n//{ payload:msg.payload.substr(15,8) };",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 1980,
        "wires": [
            [
                "d4ac0f44.082b9",
                "fb4b90cc.74e8d"
            ]
        ]
    },
    {
        "id": "d4ac0f44.082b9",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "Hex to Ascii",
        "func": "var string = msg.payload.replace(/\\s/g,'');\n\nmsg.balluffHex = Buffer.from(string,\"hex\");\nmsg.payload = msg.balluffHex.toString('ascii')\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 930,
        "y": 1980,
        "wires": [
            [
                "821956c6.5c5218"
            ]
        ]
    },
    {
        "id": "821956c6.5c5218",
        "type": "ui_text",
        "z": "67804b5a.aa2f64",
        "group": "58bdd1e1.5b2db",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Order Code:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1090,
        "y": 1980,
        "wires": []
    },
    {
        "id": "df6d6fa5.afe1f",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "AL_ReadReq BOS21M Serial Number",
        "func": "msg.Start = '08 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '02'; // Kommando\nmsg.IOLPort = global.get('BOS026R'); //Port Nummer\nmsg.LowIndex = '15'; //IO-Link Index \nmsg.HighIndex = '00'; //IO-Link Index (meiﬂtens 00)\nmsg.SubIndex = '00'; //IO-Link SubIndex \n\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 1500,
        "wires": [
            [
                "a0200150.8a36c"
            ]
        ]
    },
    {
        "id": "69e489ef.251488",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "BOS21ADCAP Serial Number",
        "func": "\nif (msg.BNIPort === parseInt(global.get('BOS026R'),16) && msg.command === 9 && msg.LowIndex === \"15\" && msg.SubIndex === \"00\") {\n    msg.payload = msg.response.substr(18,39);\n} else {return;\n    \n}\n\nreturn msg;\n//{ payload:msg.payload.substr(15,8) };",
        "outputs": 1,
        "noerr": 0,
        "x": 550,
        "y": 2020,
        "wires": [
            [
                "e35108ac.760168"
            ]
        ]
    },
    {
        "id": "e35108ac.760168",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "Hex to Ascii",
        "func": "var string = msg.payload.replace(/\\s/g,'');\n\nmsg.balluffHex = Buffer.from(string,\"hex\");\nmsg.payload = msg.balluffHex.toString('ascii')\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 930,
        "y": 2020,
        "wires": [
            [
                "cc6abce7.d4d5e"
            ]
        ]
    },
    {
        "id": "cc6abce7.d4d5e",
        "type": "ui_text",
        "z": "67804b5a.aa2f64",
        "group": "58bdd1e1.5b2db",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Serial Number:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1100,
        "y": 2020,
        "wires": []
    },
    {
        "id": "625ca4f6.48bebc",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "AL_ReadReq BOS21M Sensor Principle",
        "func": "msg.Start = '08 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '02'; // Kommando\nmsg.IOLPort = global.get('BOS026R'); //Port Nummer\nmsg.LowIndex = 'BB'; //IO-Link Index \nmsg.HighIndex = '00'; //IO-Link Index (meiﬂtens 00)\nmsg.SubIndex = '00'; //IO-Link SubIndex \n\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 740,
        "wires": [
            [
                "be9bfed0.b52d2"
            ]
        ]
    },
    {
        "id": "5ac5b486.f0c00c",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "BOS21ADCAP sensor principle",
        "func": "if (msg.BNIPort === parseInt(global.get('BOS026R'),16) && msg.command === 9 && msg.LowIndex === \"BB\" && msg.SubIndex === \"00\") {\n    msg.payload = msg.response.substr(18,2);\n} else {return;\n    \n}\n\nreturn msg;\n//{ payload:msg.payload.substr(15,8) };",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 960,
        "wires": [
            [
                "fc72840e.682ea8"
            ]
        ]
    },
    {
        "id": "fc72840e.682ea8",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "Transform",
        "func": "var principle = msg.payload;\n\nif(principle === \"00\"){\n    msg.payload = \"Diffuse  sensor\"\n} else if(principle === \"01\"){\n    msg.payload = \"Diffuse sensor BGS\"\n} else if(principle === \"02\"){\n    msg.payload = \"Retro-reflective\"\n}\nflow.set ('bosType',msg.payload)    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 800,
        "y": 960,
        "wires": [
            [
                "53a20769.62ae78",
                "75b08faa.60031"
            ]
        ]
    },
    {
        "id": "53a20769.62ae78",
        "type": "ui_text",
        "z": "67804b5a.aa2f64",
        "group": "32ee9a7b.eeac46",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Sensor Principle:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 970,
        "y": 960,
        "wires": []
    },
    {
        "id": "634667f6.f3fbb8",
        "type": "ui_dropdown",
        "z": "67804b5a.aa2f64",
        "name": "",
        "label": "Switch Counter Settings",
        "place": "Select option",
        "group": "32ee9a7b.eeac46",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "options": [
            {
                "label": "Inactive",
                "value": "00",
                "type": "str"
            },
            {
                "label": "Static Counter",
                "value": "01",
                "type": "str"
            },
            {
                "label": "Auto Reset",
                "value": "02",
                "type": "str"
            },
            {
                "label": "Speed",
                "value": "03",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 230,
        "y": 2440,
        "wires": [
            [
                "3c5d8e37.911732",
                "f72b5f6.129d9a"
            ]
        ]
    },
    {
        "id": "3c5d8e37.911732",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "AL_WriteReq BOS21M Type Switch",
        "func": "//msg.Start = '09 00';//9 + Length of Data, 00\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '03';\nmsg.IOLPort = global.get('BOS026R');\nmsg.LowIndex = 'B6';\nmsg.HighIndex = '00';\nmsg.SubIndex = '01';\nmsg.LengthOfData = '01';\nmsg.Data = msg.payload//msg.DataIn;\n\nif ((9 + parseInt(msg.LengthOfData)) <16) {\n    msg.Start = \"0\"+ (9 + parseInt(msg.LengthOfData)).toString(16) + \" 00\";\n} else { \n    msg.Start = (9 + parseInt(msg.LengthOfData)).toString(16)+ \" 00\";\n}\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex +\" \"+ msg.LengthOfData +\" \"+ msg.Data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 2440,
        "wires": [
            [
                "f88befa1.609e7"
            ]
        ]
    },
    {
        "id": "2613b090.1b1a6",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "AL_ReadReq BOS21M Stresslevel",
        "func": "msg.Start = '08 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '02'; // Kommando\nmsg.IOLPort = global.get('BOS026R'); //Port Nummer\nmsg.LowIndex = '00'; //IO-Link Index \nmsg.HighIndex = '05'; //IO-Link Index (meiﬂtens 00)\nmsg.SubIndex = '00'; //IO-Link SubIndex \nmsg.Index = 'XF';\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 1540,
        "wires": [
            [
                "c2d08010.c0fd"
            ]
        ]
    },
    {
        "id": "a3828489.dd8e68",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "BOS21ADCAP Stresslevel",
        "func": "if (msg.BNIPort === parseInt(global.get('BOS026R'),16) && msg.command === 9 && msg.LowIndex === \"XF\" && msg.SubIndex === \"00\") {\n    msg.payload = msg.response.substr(18,2);\n} else {return;\n    \n}\n\nreturn msg;\n//{ payload:msg.payload.substr(15,8) };",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 2060,
        "wires": [
            [
                "cdf8ffe1.5bf2d"
            ]
        ]
    },
    {
        "id": "cdf8ffe1.5bf2d",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "Transform",
        "func": "var principle = msg.payload;\n\nif(principle === \"01\"){\n    msg.payload = \"Good\"\n} else if(principle === \"02\"){\n    msg.payload = \"Heavy Load\"\n} else if(principle === \"03\"){\n    msg.payload = \"Critical\"\n}\n\nflow.set('BOSStressLevel',msg.payload)\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 2060,
        "wires": [
            [
                "c59ba958.3009d8",
                "9e9882e6.09f66",
                "c78423a7.05645"
            ]
        ]
    },
    {
        "id": "c59ba958.3009d8",
        "type": "ui_text",
        "z": "67804b5a.aa2f64",
        "group": "58bdd1e1.5b2db",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Stress level:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1090,
        "y": 2060,
        "wires": []
    },
    {
        "id": "c196359b.27c4d8",
        "type": "ui_text",
        "z": "67804b5a.aa2f64",
        "group": "58bdd1e1.5b2db",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Last maintenance:",
        "format": "{{msg.payload}} h",
        "layout": "row-left",
        "x": 1110,
        "y": 1860,
        "wires": []
    },
    {
        "id": "d2c07b5f.375298",
        "type": "ui_text",
        "z": "67804b5a.aa2f64",
        "group": "58bdd1e1.5b2db",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Operating Hours:",
        "format": "{{msg.payload}} h",
        "layout": "row-left",
        "x": 1110,
        "y": 1820,
        "wires": []
    },
    {
        "id": "868ca316.41bb7",
        "type": "ui_text",
        "z": "67804b5a.aa2f64",
        "group": "58bdd1e1.5b2db",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "LED Life Time:",
        "format": "{{msg.payload}} %",
        "layout": "row-left",
        "x": 1100,
        "y": 1900,
        "wires": []
    },
    {
        "id": "10ddfbad.8cf594",
        "type": "ui_numeric",
        "z": "67804b5a.aa2f64",
        "name": "",
        "label": "Counter Limit ",
        "group": "32ee9a7b.eeac46",
        "order": 4,
        "width": "7",
        "height": "2",
        "passthru": false,
        "topic": "",
        "format": "{{value}}",
        "min": "1",
        "max": "100",
        "step": 1,
        "x": 190,
        "y": 2520,
        "wires": [
            [
                "bfa8e3e3.950a7"
            ]
        ]
    },
    {
        "id": "bfa8e3e3.950a7",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "AL_WriteReq BOS21M Type Switch Value",
        "func": "//msg.Start = '09 00';//9 + Length of Data, 00\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '03';\nmsg.IOLPort = flow.get('BOS026R');\nmsg.LowIndex = 'B6';\nmsg.HighIndex = '00';\nmsg.SubIndex = '02';\nmsg.LengthOfData = '02';\n//msg.Data = msg.payload//msg.DataIn;\n\nif ((9 + parseInt(msg.LengthOfData)) <16) {\n    msg.Start = \"0\"+ (9 + parseInt(msg.LengthOfData)).toString(16) + \" 00\";\n} else { \n    msg.Start = (9 + parseInt(msg.LengthOfData)).toString(16)+ \" 00\";\n}\n\nif ((msg.payload) <16) {\n    msg.Data = \"00 0\"+ (msg.payload.toString(16));\n} else if (msg.payload >=16 && msg.payload < 256){\n    msg.Data = \"00 \" + (msg.payload.toString(16));\n} else if (msg.payload >=256 && msg.payload < 4096){\n    msg.Data = \"0\" + (msg.payload.toString(16));\n} else { \n    msg.Data = (msg.payload.toString(16));\n}\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex +\" \"+ msg.LengthOfData +\" \"+ msg.Data;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 2520,
        "wires": [
            [
                "f88befa1.609e7"
            ]
        ]
    },
    {
        "id": "cf285d40.88a7c",
        "type": "delay",
        "z": "67804b5a.aa2f64",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 380,
        "y": 2560,
        "wires": [
            []
        ]
    },
    {
        "id": "f72b5f6.129d9a",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "Set Flow settingBOS21",
        "func": "if(msg.payload === \"00\"){\n    flow.set('settingBOS21',\"inactive\")\n}else if (msg.payload === \"01\"){\n    flow.set('settingBOS21',\"Static Counter: \")\n}else if (msg.payload === \"02\"){\n    flow.set('settingBOS21',\"Automatic Reset Counter: \")\n}else if (msg.payload === \"03\"){\n    flow.set('settingBOS21',\"Parts per Minute :\")\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 2400,
        "wires": [
            []
        ]
    },
    {
        "id": "9669167.7209de8",
        "type": "ui_dropdown",
        "z": "67804b5a.aa2f64",
        "name": "",
        "label": "Switch BOS21 Type",
        "place": "Select option",
        "group": "32ee9a7b.eeac46",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "options": [
            {
                "label": "Diffuse",
                "value": "00",
                "type": "str"
            },
            {
                "label": "Diffuse BGS",
                "value": "01",
                "type": "str"
            },
            {
                "label": "Retro Reflective",
                "value": "02",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 220,
        "y": 2320,
        "wires": [
            [
                "653b6a51.da86d4"
            ]
        ]
    },
    {
        "id": "ab3be55a.ca2b98",
        "type": "inject",
        "z": "67804b5a.aa2f64",
        "name": "",
        "topic": "",
        "payload": "00",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 190,
        "y": 2400,
        "wires": [
            [
                "f72b5f6.129d9a"
            ]
        ]
    },
    {
        "id": "34e033ca.4430dc",
        "type": "inject",
        "z": "67804b5a.aa2f64",
        "name": "TS-30s",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "30",
        "crontab": "",
        "once": false,
        "onceDelay": "15",
        "x": 140,
        "y": 1280,
        "wires": [
            [
                "b6a93eb9.f0e0a"
            ]
        ]
    },
    {
        "id": "15ac73e3.8bd11c",
        "type": "inject",
        "z": "67804b5a.aa2f64",
        "name": "TS-1s",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 140,
        "y": 700,
        "wires": [
            [
                "12a63eaa.6bd931"
            ]
        ]
    },
    {
        "id": "12a63eaa.6bd931",
        "type": "switch",
        "z": "67804b5a.aa2f64",
        "name": "check if Sensors are set?",
        "property": "SensorsAreSet",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 390,
        "y": 720,
        "wires": [
            [
                "7b7061a7.8510d",
                "625ca4f6.48bebc"
            ],
            [
                "6be71cdc.8587c4"
            ]
        ]
    },
    {
        "id": "6be71cdc.8587c4",
        "type": "change",
        "z": "67804b5a.aa2f64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Sensors Not Set",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 780,
        "wires": [
            [
                "e1c01211.f9ebb"
            ]
        ]
    },
    {
        "id": "b6a93eb9.f0e0a",
        "type": "switch",
        "z": "67804b5a.aa2f64",
        "name": "",
        "property": "SensorsAreSet",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 270,
        "y": 1280,
        "wires": [
            [
                "27e75306.b9afac",
                "979a69ea.f4fa28",
                "7bf2ab12.600374",
                "deeb87d0.fc8788",
                "ba142b9e.ba1398",
                "df6d6fa5.afe1f",
                "2613b090.1b1a6"
            ],
            [
                "a081f6b.1f1b908"
            ]
        ]
    },
    {
        "id": "a081f6b.1f1b908",
        "type": "change",
        "z": "67804b5a.aa2f64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Sensors Not Set",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 1580,
        "wires": [
            [
                "af8fc4e6.cdad78"
            ]
        ]
    },
    {
        "id": "9ec6f188.a8ee5",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "Set Payload to Buffer",
        "func": "if (msg.hex.includes(undefined) === false){\n    var string = msg.hex.replace(/\\s/g,'');\n    msg.ip = global.get('host');\n    msg.port = '1999';\n    msg.payload = Buffer.from(string,\"hex\");\n} else {\n    msg.payload = \"not Present\"\n}\n\nreturn msg;\n\n//msg.payload = Buffer.from(msg.payload, \"hex\");\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1300,
        "y": 760,
        "wires": [
            [
                "7ca541c7.9041a"
            ]
        ]
    },
    {
        "id": "7ca541c7.9041a",
        "type": "switch",
        "z": "67804b5a.aa2f64",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "not Present",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1490,
        "y": 760,
        "wires": [
            [
                "8eb81841.c5be38"
            ],
            [
                "924171bd.d7eb8"
            ]
        ]
    },
    {
        "id": "f88befa1.609e7",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "Set Payload to Buffer",
        "func": "if (msg.hex.includes(undefined) === false){\n    var string = msg.hex.replace(/\\s/g,'');\n    msg.ip = global.get('host');\n    msg.port = '1999';\n    msg.payload = Buffer.from(string,\"hex\");\n} else {\n    msg.payload = \"not Present\"\n}\n\nreturn msg;\n\n//msg.payload = Buffer.from(msg.payload, \"hex\");\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 2400,
        "wires": [
            [
                "d285f913.66b6f8"
            ]
        ]
    },
    {
        "id": "d285f913.66b6f8",
        "type": "switch",
        "z": "67804b5a.aa2f64",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "not Present",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1390,
        "y": 2400,
        "wires": [
            [
                "58b0b004.c1c1d"
            ],
            [
                "6616a683.bc2278"
            ]
        ]
    },
    {
        "id": "539360d2.47c71",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "Set Payload to Buffer",
        "func": "if (msg.hex.includes(undefined) === false){\n    var string = msg.hex.replace(/\\s/g,'');\n    msg.ip = global.get('host');\n    msg.port = '1999';\n    msg.payload = Buffer.from(string,\"hex\");\n} else {\n    msg.payload = \"not Present\"\n}\n\nreturn msg;\n\n//msg.payload = Buffer.from(msg.payload, \"hex\");\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1320,
        "y": 1360,
        "wires": [
            [
                "a244c440.44a3e8"
            ]
        ]
    },
    {
        "id": "a244c440.44a3e8",
        "type": "switch",
        "z": "67804b5a.aa2f64",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "not Present",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1550,
        "y": 1360,
        "wires": [
            [
                "1c286a4b.4f46f6"
            ],
            [
                "9277ec15.c3bc7"
            ]
        ]
    },
    {
        "id": "cf67a523.24eb08",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "WriteProcessDataReq",
        "func": "//msg.Start = '05 00';//5 + Length of Data, 00\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '0B'; // In Hex\nmsg.IOLPort =  global.get('BOS026R'); // In Hex\nmsg.LengthOfData = '01'; //in count of Hex Bytes\nmsg.Data = msg.payload; //port data in HEX\nmsg.PL = msg.payload; //Payload of inject\n\n\nif ((5+parseInt(msg.LengthOfData)) <15) {\n    msg.Start = \"0\"+ (5+parseInt(msg.LengthOfData)).toString(16) + \" 00\";\n} else { \n    msg.Start = (5+parseInt(msg.LengthOfData)).toString(16)+ \" 00\";\n}\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.Data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 2700,
        "wires": [
            [
                "f15a998c.7f7f88"
            ]
        ]
    },
    {
        "id": "8a2bafee.ca4be",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "WriteProcessDataReq",
        "func": "//msg.Start = '05 00';//5 + Length of Data, 00\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '0B'; // In Hex\nmsg.IOLPort =  global.get('BOS026R'); // In Hex\nmsg.LengthOfData = '01'; //in count of Hex Bytes\nmsg.Data = msg.payload; //port data in HEX\nmsg.PL = msg.payload; //Payload of inject\n\n\nif ((5+parseInt(msg.LengthOfData)) <15) {\n    msg.Start = \"0\"+ (5+parseInt(msg.LengthOfData)).toString(16) + \" 00\";\n} else { \n    msg.Start = (5+parseInt(msg.LengthOfData)).toString(16)+ \" 00\";\n}\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.Data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 2760,
        "wires": [
            [
                "f15a998c.7f7f88"
            ]
        ]
    },
    {
        "id": "b81cd003.77a84",
        "type": "ui_button",
        "z": "67804b5a.aa2f64",
        "name": "",
        "group": "32ee9a7b.eeac46",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "RESET COUNTER",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "01",
        "payloadType": "str",
        "topic": "",
        "x": 210,
        "y": 2780,
        "wires": [
            [
                "8a2bafee.ca4be"
            ]
        ]
    },
    {
        "id": "e7964e74.e3bc1",
        "type": "ui_button",
        "z": "67804b5a.aa2f64",
        "name": "",
        "group": "32ee9a7b.eeac46",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "LED OFF",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "03",
        "payloadType": "str",
        "topic": "",
        "x": 180,
        "y": 2740,
        "wires": [
            [
                "8a2bafee.ca4be"
            ]
        ]
    },
    {
        "id": "b0fa2302.6299b",
        "type": "ui_button",
        "z": "67804b5a.aa2f64",
        "name": "",
        "group": "32ee9a7b.eeac46",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "LED ON",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "00",
        "payloadType": "str",
        "topic": "",
        "x": 180,
        "y": 2700,
        "wires": [
            [
                "cf67a523.24eb08"
            ]
        ]
    },
    {
        "id": "e1c01211.f9ebb",
        "type": "debug",
        "z": "67804b5a.aa2f64",
        "name": "sensors not set BOS026R",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 850,
        "y": 780,
        "wires": []
    },
    {
        "id": "924171bd.d7eb8",
        "type": "debug",
        "z": "67804b5a.aa2f64",
        "name": "BOS026R not Present",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1720,
        "y": 780,
        "wires": []
    },
    {
        "id": "8eb81841.c5be38",
        "type": "link out",
        "z": "67804b5a.aa2f64",
        "name": "1s Service Data sender",
        "links": [
            "d3db8e06.f0851"
        ],
        "x": 1635,
        "y": 740,
        "wires": []
    },
    {
        "id": "73571169.61bf1",
        "type": "link in",
        "z": "67804b5a.aa2f64",
        "name": "1s Service Data return",
        "links": [
            "29fdf072.54f6"
        ],
        "x": 275,
        "y": 860,
        "wires": [
            [
                "4062bf6.494db4",
                "5ac5b486.f0c00c",
                "b47707a6.e9dc38"
            ]
        ]
    },
    {
        "id": "95b5555e.ed1d48",
        "type": "comment",
        "z": "67804b5a.aa2f64",
        "name": "Service Data 5 min Cycle",
        "info": "",
        "x": 490,
        "y": 1160,
        "wires": []
    },
    {
        "id": "1c286a4b.4f46f6",
        "type": "link out",
        "z": "67804b5a.aa2f64",
        "name": "5min service Data sender",
        "links": [
            "d3db8e06.f0851"
        ],
        "x": 1695,
        "y": 1340,
        "wires": []
    },
    {
        "id": "9277ec15.c3bc7",
        "type": "debug",
        "z": "67804b5a.aa2f64",
        "name": "BOS026R not Present",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1780,
        "y": 1380,
        "wires": []
    },
    {
        "id": "876ac422.259438",
        "type": "link in",
        "z": "67804b5a.aa2f64",
        "name": "c5min service data return",
        "links": [
            "29fdf072.54f6"
        ],
        "x": 215,
        "y": 1940,
        "wires": [
            [
                "96d29ca9.a7cf3",
                "ae1af7f7.fa5cb8",
                "b096df03.1b98",
                "ecfe608e.e80a7",
                "ae74ee84.6fb72",
                "69e489ef.251488",
                "a3828489.dd8e68"
            ]
        ]
    },
    {
        "id": "af8fc4e6.cdad78",
        "type": "debug",
        "z": "67804b5a.aa2f64",
        "name": "sensors not set BOS026R",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 810,
        "y": 1580,
        "wires": []
    },
    {
        "id": "6616a683.bc2278",
        "type": "debug",
        "z": "67804b5a.aa2f64",
        "name": "BOS026R not Present",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1620,
        "y": 2420,
        "wires": []
    },
    {
        "id": "f15a998c.7f7f88",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "Set Payload to Buffer",
        "func": "if (msg.hex.includes(undefined) === false){\n    var string = msg.hex.replace(/\\s/g,'');\n    msg.ip = global.get('host');\n    msg.port = '1999';\n    msg.payload = Buffer.from(string,\"hex\");\n} else {\n    msg.payload = \"not Present\"\n}\n\nreturn msg;\n\n//msg.payload = Buffer.from(msg.payload, \"hex\");\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 2720,
        "wires": [
            [
                "473c6af9.c73fc4"
            ]
        ]
    },
    {
        "id": "473c6af9.c73fc4",
        "type": "switch",
        "z": "67804b5a.aa2f64",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "not Present",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1390,
        "y": 2720,
        "wires": [
            [
                "4e96664d.c6be58"
            ],
            [
                "1b9e2e6e.2a8342"
            ]
        ]
    },
    {
        "id": "d7dde50b.901288",
        "type": "comment",
        "z": "67804b5a.aa2f64",
        "name": "Write Service data",
        "info": "",
        "x": 390,
        "y": 2260,
        "wires": []
    },
    {
        "id": "2c1b56bd.6cb7ca",
        "type": "comment",
        "z": "67804b5a.aa2f64",
        "name": "Write Process Data ",
        "info": "",
        "x": 370,
        "y": 2660,
        "wires": []
    },
    {
        "id": "58b0b004.c1c1d",
        "type": "link out",
        "z": "67804b5a.aa2f64",
        "name": "Write Service Data send",
        "links": [
            "d3db8e06.f0851"
        ],
        "x": 1535,
        "y": 2380,
        "wires": []
    },
    {
        "id": "4e96664d.c6be58",
        "type": "link out",
        "z": "67804b5a.aa2f64",
        "name": "Write Process Data send",
        "links": [
            "d3db8e06.f0851"
        ],
        "x": 1535,
        "y": 2700,
        "wires": []
    },
    {
        "id": "1b9e2e6e.2a8342",
        "type": "debug",
        "z": "67804b5a.aa2f64",
        "name": "BOS026R not Present",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1620,
        "y": 2740,
        "wires": []
    },
    {
        "id": "c2d08010.c0fd",
        "type": "change",
        "z": "67804b5a.aa2f64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "LowIndex",
                "pt": "msg",
                "to": "Index",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 1540,
        "wires": [
            [
                "cfe06a6a.a814e8",
                "a0200150.8a36c"
            ]
        ]
    },
    {
        "id": "b47707a6.e9dc38",
        "type": "function",
        "z": "67804b5a.aa2f64",
        "name": "BOS21ADCAP access Gain Error",
        "func": "if (msg.BNIPort === parseInt(global.get('BOS026R'),16) && msg.command === 6 && msg.LowIndex ===\"BD\" && msg.SubIndex === \"00\") {\n    msg.payload = \"Access Gain Error please check the Sensor\"\n} else {return;\n    \n}\n\nreturn msg;\n//{ payload:msg.payload.substr(15,8) };",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 900,
        "wires": [
            [
                "a0032aa6.511ca8",
                "cc9a77b3.9a26f8"
            ]
        ]
    },
    {
        "id": "a0032aa6.511ca8",
        "type": "debug",
        "z": "67804b5a.aa2f64",
        "name": "Access Gain Error ",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 810,
        "y": 920,
        "wires": []
    },
    {
        "id": "cc9a77b3.9a26f8",
        "type": "ui_toast",
        "z": "67804b5a.aa2f64",
        "position": "top right",
        "displayTime": "2s",
        "highlight": "",
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "",
        "name": "",
        "x": 990,
        "y": 900,
        "wires": []
    },
    {
        "id": "9e9882e6.09f66",
        "type": "debug",
        "z": "67804b5a.aa2f64",
        "name": "Check if flow has succedded",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1170,
        "y": 2120,
        "wires": []
    },
    {
        "id": "c8e4018f.fbc37",
        "type": "function",
        "z": "ab36cfc2.069bd",
        "name": "AL_ReadReq BAE Stresslevel",
        "func": "msg.Start = '08 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '02'; // Kommando\nmsg.IOLPort = global.get('BAE00TP'); //Port Nummer\nmsg.LowIndex = '00'; //IO-Link Index \nmsg.HighIndex = '05'; //IO-Link Index (meiﬂtens 00)\nmsg.SubIndex = '00'; //IO-Link SubIndex \nmsg.Index = 'XX';\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 810,
        "y": 540,
        "wires": [
            [
                "b1a362cd.7b63f"
            ]
        ]
    },
    {
        "id": "ff8c6830.58ca38",
        "type": "function",
        "z": "ab36cfc2.069bd",
        "name": "AL_ReadReq BAE Years Lifetime",
        "func": "msg.Start = '08 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '02'; // Kommando\nmsg.IOLPort = global.get('BAE00TP'); //Port Nummer\nmsg.LowIndex = '02'; //IO-Link Index \nmsg.HighIndex = '05'; //IO-Link Index (meiﬂtens 00)\nmsg.SubIndex = '00'; //IO-Link SubIndex \nmsg.Index = 'XY';\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 820,
        "y": 620,
        "wires": [
            [
                "b1a362cd.7b63f"
            ]
        ]
    },
    {
        "id": "452e1be7.b8cba4",
        "type": "function",
        "z": "ab36cfc2.069bd",
        "name": "AL_ReadReq BAE Operating Hours",
        "func": "msg.Start = '08 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '02'; // Kommando\nmsg.IOLPort = global.get('BAE00TP'); //Port Nummer\nmsg.LowIndex = '06'; //IO-Link Index \nmsg.HighIndex = '05'; //IO-Link Index (meiﬂtens 00)\nmsg.SubIndex = '00'; //IO-Link SubIndex \nmsg.Index = 'XW';\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 820,
        "y": 660,
        "wires": [
            [
                "b1a362cd.7b63f"
            ]
        ]
    },
    {
        "id": "575da22b.1b442c",
        "type": "function",
        "z": "ab36cfc2.069bd",
        "name": "AL_ReadReq BAE Primary Cap Temp",
        "func": "msg.Start = '08 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '02'; // Kommando\nmsg.IOLPort = global.get('BAE00TP'); //Port Nummer\nmsg.LowIndex = '03'; //IO-Link Index \nmsg.HighIndex = '05'; //IO-Link Index (meiﬂtens 00)\nmsg.SubIndex = '00'; //IO-Link SubIndex \nmsg.Index = 'XV';\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 830,
        "y": 1080,
        "wires": [
            [
                "e114901f.24f66"
            ]
        ]
    },
    {
        "id": "9ac6d652.222af8",
        "type": "function",
        "z": "ab36cfc2.069bd",
        "name": "AL_ReadReq BAE Secondary Cap Temp",
        "func": "msg.Start = '08 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '02'; // Kommando\nmsg.IOLPort = global.get('BAE00TP'); //Port Nummer\nmsg.LowIndex = '04'; //IO-Link Index \nmsg.HighIndex = '05'; //IO-Link Index (meiﬂtens 00)\nmsg.SubIndex = '00'; //IO-Link SubIndex \nmsg.Index = 'XU';\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 840,
        "y": 1160,
        "wires": [
            [
                "e114901f.24f66"
            ]
        ]
    },
    {
        "id": "86bf08cb.51dcf8",
        "type": "ui_chart",
        "z": "ab36cfc2.069bd",
        "name": "",
        "group": "b539ba.2711f648",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "Primary Cap Temp",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 2,
        "x": 1110,
        "y": 1260,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "8508df2e.eb6be",
        "type": "function",
        "z": "ab36cfc2.069bd",
        "name": "ProcessInputs: BAE00TP",
        "func": "if (msg.BNIPort === parseInt(global.get('BAE00TP'),16) && msg.command === 10) {\n    msg.payload = msg.response.substr(15,11);\n} else {return;\n    \n}\n\nreturn msg;\n//{ payload:msg.payload.substr(15,8) };",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 260,
        "wires": [
            [
                "c65ed394.5c5d7",
                "a6a2e2d7.6a90f"
            ]
        ]
    },
    {
        "id": "c65ed394.5c5d7",
        "type": "function",
        "z": "ab36cfc2.069bd",
        "name": "BAE Voltage",
        "func": "msg.payload = parseInt((msg.payload.substr(0, 2))+(msg.payload.substr(3, 1)) ,16)/10;\nflow.set('BAEVoltage',msg.payload)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 950,
        "y": 240,
        "wires": [
            [
                "5bb6e8a7.21e568",
                "7c9f1c9a.2e7b94"
            ]
        ]
    },
    {
        "id": "a6a2e2d7.6a90f",
        "type": "function",
        "z": "ab36cfc2.069bd",
        "name": "BAE Current",
        "func": "msg.payload = parseInt((msg.payload.substr(4, 1))+(msg.payload.substr(6, 2)) ,16)/10;\nflow.set('BAEAmpere',msg.payload)\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 950,
        "y": 280,
        "wires": [
            [
                "a5026cd2.a5e04",
                "f32eba7d.317578"
            ]
        ]
    },
    {
        "id": "af76065.ab8aaf8",
        "type": "function",
        "z": "ab36cfc2.069bd",
        "name": "BAE Stresslevel",
        "func": "if (msg.BNIPort === parseInt(global.get('BAE00TP'),16) && msg.command === 9 && msg.LowIndex === 'XX' && msg.SubIndex === \"00\") {\n    msg.payload = msg.response.substr(18,2);\n} else {return;\n    \n}\n\nreturn msg;\n//{ payload:msg.payload.substr(15,8) };",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 760,
        "wires": [
            [
                "89d6396d.91d838"
            ]
        ]
    },
    {
        "id": "89d6396d.91d838",
        "type": "function",
        "z": "ab36cfc2.069bd",
        "name": "Transform",
        "func": "var principle = msg.payload;\n\nif(principle === \"01\"){\n    msg.payload = \"No Stress\"\n} else if(principle === \"02\"){\n    msg.payload = \"Okay\"\n} else if(principle === \"03\"){\n    msg.payload = \"Heavy Load\"\n}\n\nflow.set('BAEStressLevel',principle);\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 840,
        "y": 760,
        "wires": [
            [
                "bba2fe93.e6a8f",
                "2dc577ff.2430a8"
            ]
        ]
    },
    {
        "id": "ec284cdd.0252e",
        "type": "function",
        "z": "ab36cfc2.069bd",
        "name": "BAE Lifetime",
        "func": "if (msg.BNIPort === parseInt(global.get('BAE00TP'),16) && msg.command === 9 && msg.LowIndex === 'XY' && msg.SubIndex === \"00\") {\n    msg.payload = msg.response.substr(18,2);\n} else {return;\n    \n}\n\nreturn msg;\n//{ payload:msg.payload.substr(15,8) };",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 800,
        "wires": [
            [
                "3fee1c4a.28a114"
            ]
        ]
    },
    {
        "id": "3fee1c4a.28a114",
        "type": "function",
        "z": "ab36cfc2.069bd",
        "name": "Calc Years (1byte)",
        "func": "msg.original = msg.payload;\nmsg.calc = parseInt(msg.payload,16);\n//msg.payload = Math.round(((parseInt((msg.payload.substr(0, 2)) ,16))/15)*100);\nmsg.payload = msg.calc;\n\nflow.set('BAELifeTime',msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 800,
        "wires": [
            [
                "e13f538c.a25a",
                "44ea9a3a.1f04c4"
            ]
        ]
    },
    {
        "id": "389d5e30.77c442",
        "type": "function",
        "z": "ab36cfc2.069bd",
        "name": "BAE Operating hours",
        "func": "if (msg.BNIPort === parseInt(global.get('BAE00TP'),16) && msg.command === 9 && msg.LowIndex === 'XW' && msg.SubIndex === \"00\") {\n    msg.payload = msg.response.substr(18,12);\n} else {return;\n    \n}\n\nreturn msg;\n//{ payload:msg.payload.substr(15,8) };",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 840,
        "wires": [
            [
                "1ca344cd.a0db3b"
            ]
        ]
    },
    {
        "id": "1ca344cd.a0db3b",
        "type": "function",
        "z": "ab36cfc2.069bd",
        "name": "Calc Hours (4byte)",
        "func": "msg.payload = parseInt((msg.payload.substr(0, 2))+(msg.payload.substr(3, 2))+(msg.payload.substr(6, 2))+(msg.payload.substr(9, 2)),16);\n\nflow.set('BAEOperatingHours',msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 840,
        "wires": [
            [
                "27712601.223c6a",
                "3dad3e65.0e4242"
            ]
        ]
    },
    {
        "id": "6f856.cf7fb7aa4",
        "type": "function",
        "z": "ab36cfc2.069bd",
        "name": "Calc 2byte int",
        "func": "msg.payload = parseInt((msg.payload.substr(0, 2))+(msg.payload.substr(3, 2)) ,16);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 880,
        "y": 1260,
        "wires": [
            [
                "86bf08cb.51dcf8",
                "91fae4c5.0c7a78"
            ]
        ]
    },
    {
        "id": "b93f2457.5f0528",
        "type": "function",
        "z": "ab36cfc2.069bd",
        "name": "Calc 2byte int",
        "func": "msg.payload = parseInt((msg.payload.substr(0, 2))+(msg.payload.substr(3, 2)) ,16);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 880,
        "y": 1300,
        "wires": [
            [
                "a80c7f46.a278e",
                "a2d54d24.68aae"
            ]
        ]
    },
    {
        "id": "701ee66.4790318",
        "type": "function",
        "z": "ab36cfc2.069bd",
        "name": "BAE primary cap temp",
        "func": "if (msg.BNIPort === parseInt(global.get('BAE00TP'),16) && msg.command === 9 && msg.LowIndex === 'XV' && msg.SubIndex === \"00\") {\n    msg.payload = msg.response.substr(18,6);\n} else {return;\n    \n}\n\nreturn msg;\n//{ payload:msg.payload.substr(15,8) };",
        "outputs": 1,
        "noerr": 0,
        "x": 660,
        "y": 1260,
        "wires": [
            [
                "6f856.cf7fb7aa4"
            ]
        ]
    },
    {
        "id": "49101bed.ebab94",
        "type": "function",
        "z": "ab36cfc2.069bd",
        "name": "BAE Secondary cap temp",
        "func": "if (msg.BNIPort === parseInt(global.get('BAE00TP'),16) && msg.command === 9 && msg.LowIndex === 'XU' && msg.SubIndex === \"00\") {\n    msg.payload = msg.response.substr(18,6);\n} else {return;\n    \n}\n\nreturn msg;\n//{ payload:msg.payload.substr(15,8) };",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 1300,
        "wires": [
            [
                "b93f2457.5f0528"
            ]
        ]
    },
    {
        "id": "5bb6e8a7.21e568",
        "type": "ui_gauge",
        "z": "ab36cfc2.069bd",
        "name": "",
        "group": "bdb4d3fd.7c188",
        "order": 0,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Voltage",
        "label": "Volts",
        "format": "{{value}}",
        "min": 0,
        "max": "32",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1160,
        "y": 240,
        "wires": []
    },
    {
        "id": "a5026cd2.a5e04",
        "type": "ui_gauge",
        "z": "ab36cfc2.069bd",
        "name": "",
        "group": "bdb4d3fd.7c188",
        "order": 0,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Ampere",
        "label": "Ampere",
        "format": "{{value}}",
        "min": 0,
        "max": "4",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1160,
        "y": 280,
        "wires": []
    },
    {
        "id": "bba2fe93.e6a8f",
        "type": "ui_text",
        "z": "ab36cfc2.069bd",
        "group": "62b36233.dc087c",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Stresslevel:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1070,
        "y": 760,
        "wires": []
    },
    {
        "id": "e13f538c.a25a",
        "type": "ui_text",
        "z": "ab36cfc2.069bd",
        "group": "62b36233.dc087c",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Lifetime",
        "format": "{{msg.payload}} Years remaining",
        "layout": "row-left",
        "x": 1060,
        "y": 800,
        "wires": []
    },
    {
        "id": "27712601.223c6a",
        "type": "ui_text",
        "z": "ab36cfc2.069bd",
        "group": "62b36233.dc087c",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Operating hours",
        "format": "{{msg.payload}} h",
        "layout": "row-left",
        "x": 1080,
        "y": 840,
        "wires": []
    },
    {
        "id": "a80c7f46.a278e",
        "type": "ui_chart",
        "z": "ab36cfc2.069bd",
        "name": "",
        "group": "b539ba.2711f648",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "Secondary Cap Temp",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 2,
        "x": 1120,
        "y": 1300,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "2f19c96a.7eacc6",
        "type": "inject",
        "z": "ab36cfc2.069bd",
        "name": "TS-5sec",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 380,
        "y": 1100,
        "wires": [
            [
                "26371ec8.86e922"
            ]
        ]
    },
    {
        "id": "26371ec8.86e922",
        "type": "switch",
        "z": "ab36cfc2.069bd",
        "name": "",
        "property": "SensorsAreSet",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 550,
        "y": 1100,
        "wires": [
            [
                "575da22b.1b442c",
                "9ac6d652.222af8"
            ],
            [
                "b9e5d486.5c1e68"
            ]
        ]
    },
    {
        "id": "b9e5d486.5c1e68",
        "type": "change",
        "z": "ab36cfc2.069bd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Sensors Not Set",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 1120,
        "wires": [
            [
                "25313d5f.3f4f42"
            ]
        ]
    },
    {
        "id": "cb428970.ea88a8",
        "type": "function",
        "z": "ab36cfc2.069bd",
        "name": "Set Payload to Buffer",
        "func": "if (msg.hex.includes(undefined) === false){\n    var string = msg.hex.replace(/\\s/g,'');\n    msg.ip = global.get('host');\n    msg.port = '1999';\n    msg.payload = Buffer.from(string,\"hex\");\n} else {\n    msg.payload = \"not Present\"\n}\n\nreturn msg;\n\n//msg.payload = Buffer.from(msg.payload, \"hex\");\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1420,
        "y": 660,
        "wires": [
            [
                "8279a60d.87aff8"
            ]
        ]
    },
    {
        "id": "7a88e054.802ee",
        "type": "switch",
        "z": "ab36cfc2.069bd",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "not Present",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1810,
        "y": 660,
        "wires": [
            [
                "c1077a75.7b46d8"
            ],
            [
                "58ad6b8f.74c7d4"
            ]
        ]
    },
    {
        "id": "e5b325e4.3e16e8",
        "type": "function",
        "z": "ab36cfc2.069bd",
        "name": "Set Payload to Buffer",
        "func": "if (msg.hex.includes(undefined) === false){\n    var string = msg.hex.replace(/\\s/g,'');\n    msg.ip = global.get('host');\n    msg.port = '1999';\n    msg.payload = Buffer.from(string,\"hex\");\n} else {\n    msg.payload = \"not Present\"\n}\n\nreturn msg;\n\n//msg.payload = Buffer.from(msg.payload, \"hex\");\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1420,
        "y": 1180,
        "wires": [
            [
                "34f1e0c4.a0493"
            ]
        ]
    },
    {
        "id": "d0d3c4a9.d77438",
        "type": "switch",
        "z": "ab36cfc2.069bd",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "not Present",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1810,
        "y": 1180,
        "wires": [
            [
                "ca39cdea.0c12d"
            ],
            [
                "b0c59e1a.689e5"
            ]
        ]
    },
    {
        "id": "13345baf.328114",
        "type": "inject",
        "z": "ab36cfc2.069bd",
        "name": "TS-5min",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "x": 380,
        "y": 560,
        "wires": [
            [
                "82f6f77f.a909a8"
            ]
        ]
    },
    {
        "id": "82f6f77f.a909a8",
        "type": "switch",
        "z": "ab36cfc2.069bd",
        "name": "",
        "property": "SensorsAreSet",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 550,
        "y": 560,
        "wires": [
            [
                "c8e4018f.fbc37",
                "ff8c6830.58ca38",
                "452e1be7.b8cba4"
            ],
            [
                "57171043.2350e"
            ]
        ]
    },
    {
        "id": "57171043.2350e",
        "type": "change",
        "z": "ab36cfc2.069bd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Sensors Not Set",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 580,
        "wires": [
            [
                "1d977c81.3a90f3"
            ]
        ]
    },
    {
        "id": "8279a60d.87aff8",
        "type": "change",
        "z": "ab36cfc2.069bd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "LowIndex",
                "pt": "msg",
                "to": "Index",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1630,
        "y": 660,
        "wires": [
            [
                "7a88e054.802ee"
            ]
        ]
    },
    {
        "id": "34f1e0c4.a0493",
        "type": "change",
        "z": "ab36cfc2.069bd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "LowIndex",
                "pt": "msg",
                "to": "Index",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1630,
        "y": 1180,
        "wires": [
            [
                "d0d3c4a9.d77438"
            ]
        ]
    },
    {
        "id": "8114379f.0d82f8",
        "type": "comment",
        "z": "ab36cfc2.069bd",
        "name": "Process Data",
        "info": "",
        "x": 330,
        "y": 140,
        "wires": []
    },
    {
        "id": "6918dbce.fe3ad4",
        "type": "comment",
        "z": "ab36cfc2.069bd",
        "name": "Service Data 5 min Cycle",
        "info": "",
        "x": 350,
        "y": 380,
        "wires": []
    },
    {
        "id": "60b708e3.6833a8",
        "type": "comment",
        "z": "ab36cfc2.069bd",
        "name": "Write Service data",
        "info": "",
        "x": 370,
        "y": 1560,
        "wires": []
    },
    {
        "id": "ca9c3342.63741",
        "type": "comment",
        "z": "ab36cfc2.069bd",
        "name": "Write Process Data ",
        "info": "",
        "x": 370,
        "y": 1620,
        "wires": []
    },
    {
        "id": "b5f2566a.4e7dd8",
        "type": "link in",
        "z": "ab36cfc2.069bd",
        "name": "Process Data Hanling",
        "links": [
            "29fdf072.54f6"
        ],
        "x": 275,
        "y": 260,
        "wires": [
            [
                "8508df2e.eb6be"
            ]
        ]
    },
    {
        "id": "a218e572.8fd058",
        "type": "function",
        "z": "780da233.7168fc",
        "name": "BTS Hours",
        "func": "if (msg.BNIPort === parseInt(global.get('BTS0002'),16) && msg.command === 9 && msg.LowIndex === '57' && msg.SubIndex === \"01\") {\n    msg.payload = msg.response.substr(18,11);\n} else {return;\n    \n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 780,
        "wires": [
            [
                "2a5d4685.6b615a"
            ]
        ]
    },
    {
        "id": "2a5d4685.6b615a",
        "type": "function",
        "z": "780da233.7168fc",
        "name": "Calc Hours",
        "func": "var sub1 = msg.payload.substr(0,2);\nvar sub2 = msg.payload.substr(3,2);\nvar sub3 = msg.payload.substr(6,2);\nvar sub4 = msg.payload.substr(9,2);\nmsg.hours = parseInt(sub1+sub2+sub3+sub4,16);\n//msg.temp = parseInt(sub1 ,16);\nreturn {payload : msg.hours};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 780,
        "wires": [
            [
                "6638da3f.dbf9c4",
                "1a4fba5f.505976",
                "a4e6a40a.4656a8"
            ]
        ]
    },
    {
        "id": "6638da3f.dbf9c4",
        "type": "ui_gauge",
        "z": "780da233.7168fc",
        "name": "Operating Hours",
        "group": "b8a88d10.9bd6b",
        "order": 2,
        "width": "5",
        "height": "6",
        "gtype": "wave",
        "title": "Operating Hours",
        "label": "Hours",
        "format": "{{h}}",
        "min": 0,
        "max": "200",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 900,
        "y": 780,
        "wires": []
    },
    {
        "id": "fbafd878.746ac8",
        "type": "ui_dropdown",
        "z": "780da233.7168fc",
        "name": "",
        "label": "Select Unit",
        "place": "Select option",
        "group": "b8a88d10.9bd6b",
        "order": 1,
        "width": "5",
        "height": "2",
        "passthru": false,
        "options": [
            {
                "label": "Relative",
                "value": "00",
                "type": "str"
            },
            {
                "label": "Celsius",
                "value": "01",
                "type": "str"
            },
            {
                "label": "Fahrenheit",
                "value": "02",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 290,
        "y": 580,
        "wires": [
            [
                "1080e709.4d1a69"
            ]
        ]
    },
    {
        "id": "1080e709.4d1a69",
        "type": "function",
        "z": "780da233.7168fc",
        "name": "BTS Change Unit on display",
        "func": "//msg.Start = '09 00';//9 + Length of Data, 00\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '03';\nmsg.IOLPort = global.get('BTS0002');\nmsg.LowIndex = '5A';\nmsg.HighIndex = '00';\nmsg.SubIndex = '00';\nmsg.LengthOfData = '01'; \nmsg.Data = msg.payload;\n\nif ((9 + parseInt(msg.LengthOfData)) <16) {\n    msg.Start = \"0\"+ (9 + parseInt(msg.LengthOfData)).toString(16) + \" 00\";\n} else { \n    msg.Start = (9 + parseInt(msg.LengthOfData)).toString(16)+ \" 00\";\n}\n/*\nif ((msg.payload) <16) {\n    msg.Data = \"00 0\"+ (msg.payload.toString(16));\n} else if (msg.payload >=16 && msg.payload < 256){\n    msg.Data = \"00 \" + (msg.payload.toString(16));\n} else if (msg.payload >=256 && msg.payload < 4096){\n    msg.Data = \"0\" + (msg.payload.toString(16));\n} else { \n    msg.Data = (msg.payload.toString(16));\n}\n*/\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex +\" \"+ msg.LengthOfData +\" \"+ msg.Data;\n\nreturn msg;\n\n\n//choice = msg.payload;\n\n//msg.hex = \"0A 00 02 03 00 5A 00 00 01 \"+choice;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 580,
        "wires": [
            [
                "9799f5.61e8d608"
            ]
        ]
    },
    {
        "id": "fa6a1ff2.76421",
        "type": "function",
        "z": "780da233.7168fc",
        "name": "AL_ReadReq BTS get Operating Hours",
        "func": "msg.Start = '08 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '02'; // Kommando\nmsg.IOLPort = global.get('BTS0002'); //Port Nummer\nmsg.LowIndex = '57'; //IO-Link Index \nmsg.HighIndex = '00'; //IO-Link Index (meiﬂtens 00)\nmsg.SubIndex = '01'; //IO-Link SubIndex \nmsg.Index = '57';\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 640,
        "wires": [
            [
                "9799f5.61e8d608"
            ]
        ]
    },
    {
        "id": "9799f5.61e8d608",
        "type": "function",
        "z": "780da233.7168fc",
        "name": "Set Payload to Buffer",
        "func": "if (msg.hex.includes(undefined) === false){\n    var string = msg.hex.replace(/\\s/g,'');\n    msg.ip = global.get('host');\n    msg.port = '1999';\n    msg.payload = Buffer.from(string,\"hex\");\n} else {\n    msg.payload = \"not Present\"\n}\n\nreturn msg;\n\n//msg.payload = Buffer.from(msg.payload, \"hex\");\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1200,
        "y": 640,
        "wires": [
            [
                "8657d8f6.f90888"
            ]
        ]
    },
    {
        "id": "8657d8f6.f90888",
        "type": "switch",
        "z": "780da233.7168fc",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "not Present",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1410,
        "y": 640,
        "wires": [
            [
                "2406c328.78fdac"
            ],
            [
                "8fc66551.b16ec8"
            ]
        ]
    },
    {
        "id": "512ce648.d2fc28",
        "type": "inject",
        "z": "780da233.7168fc",
        "name": "TS-11sec",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 270,
        "y": 660,
        "wires": [
            [
                "72b4db2c.fcd4c4"
            ]
        ]
    },
    {
        "id": "72b4db2c.fcd4c4",
        "type": "switch",
        "z": "780da233.7168fc",
        "name": "",
        "property": "SensorsAreSet",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 660,
        "wires": [
            [
                "fa6a1ff2.76421"
            ],
            [
                "efa9a01c.25027"
            ]
        ]
    },
    {
        "id": "efa9a01c.25027",
        "type": "change",
        "z": "780da233.7168fc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Sensors Not Set",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 680,
        "wires": [
            [
                "5f559265.9c703c"
            ]
        ]
    },
    {
        "id": "db2e5b4b.9efd88",
        "type": "comment",
        "z": "6539041e.99e41c",
        "name": "Error Handling",
        "info": "",
        "x": 1350,
        "y": 740,
        "wires": []
    },
    {
        "id": "c6fb67e7.816eb8",
        "type": "comment",
        "z": "ab36cfc2.069bd",
        "name": "Service Data 10 sec Cycle",
        "info": "",
        "x": 350,
        "y": 940,
        "wires": []
    },
    {
        "id": "a18aa791.be4e58",
        "type": "link in",
        "z": "ab36cfc2.069bd",
        "name": "5 minservice data return",
        "links": [
            "29fdf072.54f6"
        ],
        "x": 340,
        "y": 760,
        "wires": [
            [
                "af76065.ab8aaf8",
                "ec284cdd.0252e",
                "389d5e30.77c442"
            ]
        ]
    },
    {
        "id": "1d977c81.3a90f3",
        "type": "debug",
        "z": "ab36cfc2.069bd",
        "name": "Sensors not set",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1020,
        "y": 580,
        "wires": []
    },
    {
        "id": "c1077a75.7b46d8",
        "type": "link out",
        "z": "ab36cfc2.069bd",
        "name": "5 min Service Data send",
        "links": [
            "d3db8e06.f0851"
        ],
        "x": 1915,
        "y": 640,
        "wires": []
    },
    {
        "id": "58ad6b8f.74c7d4",
        "type": "debug",
        "z": "ab36cfc2.069bd",
        "name": "BAE00TP not Present",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 2000,
        "y": 680,
        "wires": []
    },
    {
        "id": "25313d5f.3f4f42",
        "type": "debug",
        "z": "ab36cfc2.069bd",
        "name": "Sensors not set",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1020,
        "y": 1120,
        "wires": []
    },
    {
        "id": "ca39cdea.0c12d",
        "type": "link out",
        "z": "ab36cfc2.069bd",
        "name": "10s service data send",
        "links": [
            "d3db8e06.f0851"
        ],
        "x": 1915,
        "y": 1160,
        "wires": []
    },
    {
        "id": "b0c59e1a.689e5",
        "type": "debug",
        "z": "ab36cfc2.069bd",
        "name": "BAE00TP not Present",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 2000,
        "y": 1200,
        "wires": []
    },
    {
        "id": "e97c90ac.9d551",
        "type": "link in",
        "z": "ab36cfc2.069bd",
        "name": "10s service data return",
        "links": [
            "29fdf072.54f6"
        ],
        "x": 355,
        "y": 1240,
        "wires": [
            [
                "701ee66.4790318",
                "49101bed.ebab94"
            ]
        ]
    },
    {
        "id": "ba9721a.8a54ee",
        "type": "comment",
        "z": "780da233.7168fc",
        "name": "Service Data 10s Cycle",
        "info": "",
        "x": 360,
        "y": 440,
        "wires": []
    },
    {
        "id": "7eef9cb6.9996e4",
        "type": "comment",
        "z": "780da233.7168fc",
        "name": "Process Data",
        "info": "",
        "x": 350,
        "y": 200,
        "wires": []
    },
    {
        "id": "d37f8f3f.ba807",
        "type": "comment",
        "z": "780da233.7168fc",
        "name": "Write Service data",
        "info": "",
        "x": 350,
        "y": 1140,
        "wires": []
    },
    {
        "id": "ccce18d8.29da78",
        "type": "comment",
        "z": "780da233.7168fc",
        "name": "Write Process Data ",
        "info": "",
        "x": 350,
        "y": 1200,
        "wires": []
    },
    {
        "id": "5424ca34.10e514",
        "type": "function",
        "z": "780da233.7168fc",
        "name": "ProcessInputs: BTS",
        "func": "if (msg.BNIPort === (parseInt(global.get('BTS0002'),16)) && msg.command === 10) {\n    msg.payload = msg.response.substr(15,5);\n} else {\n    return;\n}\nreturn msg;\n\n//return { payload:msg.payload.ProcessInputs };\n",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 300,
        "wires": [
            [
                "98be3a26.7bed48",
                "32935226.fc0c1e"
            ]
        ]
    },
    {
        "id": "98be3a26.7bed48",
        "type": "function",
        "z": "780da233.7168fc",
        "name": "BTS Output Temp",
        "func": "var tooLow = msg.payload.substr(4,1);\nvar temp1 = msg.payload.substr(0, 2);\nvar temp2 = msg.payload.substr(3, 1);\nvar temp = parseInt(temp1+temp2,16);\n\nif (tooLow == 8){\nmsg.temp = 0;\n}\nelse{msg.temp = temp;\n}\n\nreturn {payload:msg.temp};\n\n\n/*\n\nvar hex3 = msg.payload.substr(6, 2);\n\nvar dec = parseInt(hex3 ,16);\nvar string = dec.toString(2);\nwhile (string.length%8){string=\"0\"+string;}\nmsg.dist = string;\n\nreturn {payload:msg.dist};\n*/\n",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 280,
        "wires": [
            [
                "155115d0.6c098a",
                "ce58ac0d.23643"
            ]
        ]
    },
    {
        "id": "32935226.fc0c1e",
        "type": "function",
        "z": "780da233.7168fc",
        "name": "BTS Output values",
        "func": "var hex = msg.payload.substr(4, 1);\n\nvar dec = parseInt(hex ,16);\nvar string = dec.toString(2);\nwhile (string.length%4){string=\"0\"+string;}\nmsg.dist = string;\n\nreturn {payload:msg.dist};\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 320,
        "wires": [
            [
                "305c42.e48143be",
                "7ff8d690.833808",
                "b1980f8d.5b0b5",
                "e37cdc9b.d23a5"
            ]
        ]
    },
    {
        "id": "305c42.e48143be",
        "type": "function",
        "z": "780da233.7168fc",
        "name": "Out of Range",
        "func": "var sub1 = msg.payload.substr(0, 1);\nmsg.string = sub1;\n//return {payload:msg.dist};\nreturn {payload:msg.string};",
        "outputs": 1,
        "noerr": 0,
        "x": 970,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "7ff8d690.833808",
        "type": "function",
        "z": "780da233.7168fc",
        "name": "teach In",
        "func": "var sub1 = msg.payload.substr(1, 1);\nmsg.string = sub1;\n//return {payload:msg.dist};\nreturn {payload:msg.string};",
        "outputs": 1,
        "noerr": 0,
        "x": 960,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "b1980f8d.5b0b5",
        "type": "function",
        "z": "780da233.7168fc",
        "name": "BCD 2",
        "func": "var sub1 = msg.payload.substr(2, 1);\nmsg.string = sub1;\n//return {payload:msg.dist};\nreturn {payload:msg.string};",
        "outputs": 1,
        "noerr": 0,
        "x": 950,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "e37cdc9b.d23a5",
        "type": "function",
        "z": "780da233.7168fc",
        "name": "BCD 1",
        "func": "var sub1 = msg.payload.substr(3, 1);\nmsg.string = sub1;\n//return {payload:msg.dist};\nreturn {payload:msg.string};",
        "outputs": 1,
        "noerr": 0,
        "x": 950,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "155115d0.6c098a",
        "type": "ui_chart",
        "z": "780da233.7168fc",
        "name": "",
        "group": "1c6113cb.b2cde4",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Temperature",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "1300",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 2,
        "x": 990,
        "y": 260,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "b34ddada.120828",
        "type": "link in",
        "z": "780da233.7168fc",
        "name": "Process Data Hanling",
        "links": [
            "29fdf072.54f6"
        ],
        "x": 295,
        "y": 300,
        "wires": [
            [
                "5424ca34.10e514"
            ]
        ]
    },
    {
        "id": "651dd15a.273b4",
        "type": "link in",
        "z": "780da233.7168fc",
        "name": "10s Dervice Data handler",
        "links": [
            "29fdf072.54f6"
        ],
        "x": 235,
        "y": 780,
        "wires": [
            [
                "a218e572.8fd058"
            ]
        ]
    },
    {
        "id": "5f559265.9c703c",
        "type": "debug",
        "z": "780da233.7168fc",
        "name": "Sensors not set",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 820,
        "y": 680,
        "wires": []
    },
    {
        "id": "2406c328.78fdac",
        "type": "link out",
        "z": "780da233.7168fc",
        "name": "5 min Service Data send",
        "links": [
            "d3db8e06.f0851"
        ],
        "x": 1555,
        "y": 620,
        "wires": []
    },
    {
        "id": "8fc66551.b16ec8",
        "type": "debug",
        "z": "780da233.7168fc",
        "name": "BTS0002 not Present",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1640,
        "y": 660,
        "wires": []
    },
    {
        "id": "1a4fba5f.505976",
        "type": "debug",
        "z": "780da233.7168fc",
        "name": "check Process ok",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 910,
        "y": 840,
        "wires": []
    },
    {
        "id": "b408e71c.d6fbb8",
        "type": "link in",
        "z": "6381dee2.b8bb4",
        "name": "Process Data Handler",
        "links": [
            "29fdf072.54f6"
        ],
        "x": 275,
        "y": 320,
        "wires": [
            [
                "5b9302ee.12bf4c"
            ]
        ]
    },
    {
        "id": "1c5594f3.8adadb",
        "type": "comment",
        "z": "6381dee2.b8bb4",
        "name": "Process Data",
        "info": "",
        "x": 330,
        "y": 260,
        "wires": []
    },
    {
        "id": "e9a60cf3.3fa9d",
        "type": "comment",
        "z": "6381dee2.b8bb4",
        "name": "Service Data 10s Cycle",
        "info": "",
        "x": 340,
        "y": 480,
        "wires": []
    },
    {
        "id": "8b65067d.8a6928",
        "type": "comment",
        "z": "6381dee2.b8bb4",
        "name": "Write Service data",
        "info": "",
        "x": 350,
        "y": 940,
        "wires": []
    },
    {
        "id": "4a63ead1.b8b8e4",
        "type": "comment",
        "z": "6381dee2.b8bb4",
        "name": "Write Process Data ",
        "info": "",
        "x": 350,
        "y": 1080,
        "wires": []
    },
    {
        "id": "5b9302ee.12bf4c",
        "type": "function",
        "z": "6381dee2.b8bb4",
        "name": "ProcessInputs: BAW",
        "func": "if (msg.BNIPort === (parseInt(global.get('BAW004M'),16)) && msg.command === 10) {\n    msg.payload = msg.response.substr(15,5);\n} else {\n    return;\n    \n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 320,
        "wires": [
            [
                "47b20872.8a4f48"
            ]
        ]
    },
    {
        "id": "47b20872.8a4f48",
        "type": "function",
        "z": "6381dee2.b8bb4",
        "name": "BAW Convert to decimal",
        "func": "var check = msg.payload.substr(4,1);\nvar dist1 = msg.payload.substr(0, 2);\nvar dist2 = msg.payload.substr(3, 1);\nvar distRoh = parseInt(dist1+dist2 ,16);\nvar checkValue = parseInt(check, 16);\n\nif (checkValue !== 8) {\n    msg.dist = (((distRoh + 200)*0.8249999284744263)/1000);\n} else { msg.dist = null;\n    \n}\n\nif (msg.dist === null) {\n    return {payload:msg.dist}; \n} else {\n    return {payload:msg.dist.toFixed(3)};\n}\n\n\n//\n\n//return { payload:msg.payload.ProcessInputs };//*0,8249999284744263);\n//msg.dist = parseInt(dist1+dist2 ,16)/1000;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 320,
        "wires": [
            [
                "c03b1767.37f3a8",
                "575e31a.21d22d"
            ]
        ]
    },
    {
        "id": "c03b1767.37f3a8",
        "type": "ui_chart",
        "z": "6381dee2.b8bb4",
        "name": "BAW Abstand",
        "group": "18a8eec0.db28e1",
        "order": 1,
        "width": "0",
        "height": "0",
        "label": "BAW004M",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "No Data Yet :-)",
        "dot": false,
        "ymin": "0",
        "ymax": "4",
        "removeOlder": "30",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#000000",
            "#aec7e8",
            "#ff7f0e",
            "#12ba3d",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": true,
        "outputs": 2,
        "x": 980,
        "y": 320,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "25a2e8b8.640aa8",
        "type": "inject",
        "z": "6381dee2.b8bb4",
        "name": "TS-12s",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 340,
        "y": 520,
        "wires": [
            [
                "aeff76e2.664528"
            ]
        ]
    },
    {
        "id": "aeff76e2.664528",
        "type": "switch",
        "z": "6381dee2.b8bb4",
        "name": "",
        "property": "SensorsAreSet",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 510,
        "y": 520,
        "wires": [
            [
                "5fc55115.23503"
            ],
            [
                "9a118e19.66a39"
            ]
        ]
    },
    {
        "id": "9a118e19.66a39",
        "type": "change",
        "z": "6381dee2.b8bb4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Sensors Not Set",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 560,
        "wires": [
            [
                "2cf2b727.afa988"
            ]
        ]
    },
    {
        "id": "5fc55115.23503",
        "type": "function",
        "z": "6381dee2.b8bb4",
        "name": "AL_ReadReq BAW temp Array",
        "func": "msg.Start = '08 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '02'; // Kommando\nmsg.IOLPort = global.get('BAW004M'); //Port Nummer\nmsg.LowIndex = '52'; //IO-Link Index \nmsg.HighIndex = '00'; //IO-Link Index (meiﬂtens 00)\nmsg.SubIndex = '00'; //IO-Link SubIndex \n\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 500,
        "wires": [
            [
                "ad794639.bad2c8"
            ]
        ]
    },
    {
        "id": "2cf2b727.afa988",
        "type": "debug",
        "z": "6381dee2.b8bb4",
        "name": "Sensors not set",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 920,
        "y": 560,
        "wires": []
    },
    {
        "id": "ad794639.bad2c8",
        "type": "function",
        "z": "6381dee2.b8bb4",
        "name": "Set Payload to Buffer",
        "func": "if (msg.hex.includes(undefined) === false){\n    var string = msg.hex.replace(/\\s/g,'');\n    msg.ip = global.get('host');\n    msg.port = '1999';\n    msg.payload = Buffer.from(string,\"hex\");\n} else {\n    msg.payload = \"not Present\"\n}\n\nreturn msg;\n\n//msg.payload = Buffer.from(msg.payload, \"hex\");\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1200,
        "y": 500,
        "wires": [
            [
                "937bd497.038558"
            ]
        ]
    },
    {
        "id": "937bd497.038558",
        "type": "switch",
        "z": "6381dee2.b8bb4",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "not Present",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1390,
        "y": 500,
        "wires": [
            [
                "5109c2ef.79d96c"
            ],
            [
                "63ea8709.8a4e58"
            ]
        ]
    },
    {
        "id": "5109c2ef.79d96c",
        "type": "link out",
        "z": "6381dee2.b8bb4",
        "name": "10s Service Data send",
        "links": [
            "d3db8e06.f0851"
        ],
        "x": 1535,
        "y": 480,
        "wires": []
    },
    {
        "id": "63ea8709.8a4e58",
        "type": "debug",
        "z": "6381dee2.b8bb4",
        "name": "BAW004M not Present",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1620,
        "y": 520,
        "wires": []
    },
    {
        "id": "f17b3bb9.d8ed88",
        "type": "function",
        "z": "6381dee2.b8bb4",
        "name": "BAW Temp array",
        "func": "if (msg.BNIPort === parseInt(global.get('BAW004M'),16) && msg.command === 9 && msg.LowIndex === '52' && msg.SubIndex === \"00\") {\n    msg.payload = msg.response.substr(18,15);\n} else {return;\n    \n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 550,
        "y": 620,
        "wires": [
            [
                "291c4455.9b74cc"
            ]
        ]
    },
    {
        "id": "291c4455.9b74cc",
        "type": "function",
        "z": "6381dee2.b8bb4",
        "name": "Transform",
        "func": "msg.internal_temp_actual = parseInt(msg.payload.substr(0,2),16);\nmsg.internal_temp_max_startup = parseInt(msg.payload.substr(3,2),16);\nmsg.internal_temp_min_startup = parseInt(msg.payload.substr(6,2),16);\nmsg.internal_temp_max_lifetime = parseInt(msg.payload.substr(9,2),16);\nmsg.internal_temp_min_lifetime = parseInt(msg.payload.substr(12,2),16)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 740,
        "y": 620,
        "wires": [
            [
                "cc375def.6cc13",
                "62c84178.61902",
                "bd583a2e.ba2238",
                "6602f419.40abfc",
                "22bbe715.aa7118"
            ]
        ]
    },
    {
        "id": "3f0af00b.d2975",
        "type": "link in",
        "z": "6381dee2.b8bb4",
        "name": "10s service data return",
        "links": [
            "29fdf072.54f6"
        ],
        "x": 335,
        "y": 620,
        "wires": [
            [
                "f17b3bb9.d8ed88"
            ]
        ]
    },
    {
        "id": "683ffc5f.b68464",
        "type": "function",
        "z": "835dee2c.59a9d",
        "name": "transform answer... ",
        "func": "if (msg.BNIPort === parseInt(global.get('BAW004M'),16) && msg.command === 9 && msg.LowIndex === '52' && msg.SubIndex === \"00\") {\n    msg.payload = msg.response.substr(18,15);\n} else {return;\n    \n}\n\nreturn msg;\n//byte 0,1 (3,6)\n//byte 2 = protokoll revision (9)\n//byte 3 command (12)\n//byte 4 Port (15)\n//byte 5 length of data (18)\n//following bytes are the result :-)\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "2eaf2fd8.d9c38",
        "type": "ui_chart",
        "z": "6381dee2.b8bb4",
        "name": "",
        "group": "18a8eec0.db28e1",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "internal Temperatures",
        "chartType": "line",
        "legend": "false",
        "xformat": "mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-25",
        "ymax": "125",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 2,
        "x": 1260,
        "y": 620,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "cc375def.6cc13",
        "type": "function",
        "z": "6381dee2.b8bb4",
        "name": "internal_temp_actual",
        "func": "msg.payload = msg.internal_temp_actual;\nmsg.topic = \"internal_temp_actual\";\n//msg.label = \"internal_temp_actual\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 980,
        "y": 620,
        "wires": [
            [
                "2eaf2fd8.d9c38",
                "6691f433.01ac7c",
                "1df92881.2b0de7"
            ]
        ]
    },
    {
        "id": "62c84178.61902",
        "type": "function",
        "z": "6381dee2.b8bb4",
        "name": "internal_temp_max_startup",
        "func": "msg.payload = msg.internal_temp_max_startup;\nmsg.topic = \"internal_temp_max_startup\";\n//msg.label = \"internal_temp_max_startup\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1000,
        "y": 660,
        "wires": [
            [
                "2eaf2fd8.d9c38",
                "e0ddb76e.a22848"
            ]
        ]
    },
    {
        "id": "bd583a2e.ba2238",
        "type": "function",
        "z": "6381dee2.b8bb4",
        "name": "internal_temp_min_startup",
        "func": "msg.payload = msg.internal_temp_min_startup;\nmsg.topic = \"internal_temp_min_startup\";\n//msg.label = \"internal_temp_min_startup\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1000,
        "y": 700,
        "wires": [
            [
                "2eaf2fd8.d9c38",
                "4d05c2f1.5ead5c"
            ]
        ]
    },
    {
        "id": "6602f419.40abfc",
        "type": "function",
        "z": "6381dee2.b8bb4",
        "name": "internal_temp_max_lifetime",
        "func": "msg.payload = msg.internal_temp_max_lifetime;\nmsg.topic = \"internal_temp_max_lifetime\";\n//msg.label = \"internal_temp_max_lifetime\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1000,
        "y": 740,
        "wires": [
            [
                "2eaf2fd8.d9c38",
                "2cb33988.9205a6"
            ]
        ]
    },
    {
        "id": "22bbe715.aa7118",
        "type": "function",
        "z": "6381dee2.b8bb4",
        "name": "internal_temp_min_lifetime",
        "func": "msg.payload = msg.internal_temp_min_lifetime;\nmsg.topic = \"internal_temp_min_lifetime\";\n//msg.label = \"internal_temp_min_lifetime\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1000,
        "y": 780,
        "wires": [
            [
                "2eaf2fd8.d9c38",
                "d948abbd.6d5cf8"
            ]
        ]
    },
    {
        "id": "45dacee7.9e2cd",
        "type": "function",
        "z": "77ed1840.b211d8",
        "name": "ProcessInputs: BNI HUB BNI0008",
        "func": "if (msg.BNIPort === parseInt(global.get('BNI0008'),16) && msg.command === 10) {\n    msg.payload = msg.response.substr(15,30)\n    } else {return;\n    \n}\n\nreturn msg;\n//{ payload:msg.payload.substr(15,8) };",
        "outputs": 1,
        "noerr": 0,
        "x": 400,
        "y": 240,
        "wires": [
            [
                "ad156508.005828"
            ]
        ]
    },
    {
        "id": "ad156508.005828",
        "type": "function",
        "z": "77ed1840.b211d8",
        "name": "BNI Hub swpoints extract BNI0008",
        "func": "if (msg.payload.substr(0,1)=== \"0\"){\n    msg.payload = \"0000\";\n} else {\nmsg.payload = parseInt(msg.payload.substr(0,1),16).toString(2);\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 240,
        "wires": [
            [
                "950a7456.ceab48",
                "abee7488.5b0408",
                "e0918c71.1b498",
                "86f2725b.b6715"
            ]
        ]
    },
    {
        "id": "950a7456.ceab48",
        "type": "function",
        "z": "77ed1840.b211d8",
        "name": "Port 7",
        "func": "var sub1 = msg.payload.substr(0, 1);\nmsg.string = sub1;\n//return {payload:msg.dist};\nreturn {payload:msg.string};",
        "outputs": 1,
        "noerr": 0,
        "x": 950,
        "y": 180,
        "wires": [
            [
                "7624270c.3a5178"
            ]
        ]
    },
    {
        "id": "abee7488.5b0408",
        "type": "function",
        "z": "77ed1840.b211d8",
        "name": "Port 6",
        "func": "var sub1 = msg.payload.substr(1, 1);\nmsg.string = sub1;\n//return {payload:msg.dist};\nreturn {payload:msg.string};",
        "outputs": 1,
        "noerr": 0,
        "x": 950,
        "y": 220,
        "wires": [
            [
                "9c62ca5f.760868"
            ]
        ]
    },
    {
        "id": "e0918c71.1b498",
        "type": "function",
        "z": "77ed1840.b211d8",
        "name": "Port 5",
        "func": "var sub1 = msg.payload.substr(2, 1);\nmsg.string = sub1;\n//return {payload:msg.dist};\nreturn {payload:msg.string};",
        "outputs": 1,
        "noerr": 0,
        "x": 950,
        "y": 260,
        "wires": [
            [
                "a9a7bb9c.7830c8"
            ]
        ]
    },
    {
        "id": "86f2725b.b6715",
        "type": "function",
        "z": "77ed1840.b211d8",
        "name": "Port 4",
        "func": "var sub1 = msg.payload.substr(3, 1);\nmsg.string = sub1;\n//return {payload:msg.dist};\nreturn {payload:msg.string};",
        "outputs": 1,
        "noerr": 0,
        "x": 950,
        "y": 300,
        "wires": [
            [
                "ff27e54b.fe70d8"
            ]
        ]
    },
    {
        "id": "ff27e54b.fe70d8",
        "type": "ui_chart",
        "z": "77ed1840.b211d8",
        "name": "Port 4",
        "group": "3f6231e8.0a70fe",
        "order": 5,
        "width": "3",
        "height": "3",
        "label": "Port 4",
        "chartType": "pie",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 2,
        "x": 1150,
        "y": 300,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "a9a7bb9c.7830c8",
        "type": "ui_chart",
        "z": "77ed1840.b211d8",
        "name": "Port 5",
        "group": "3f6231e8.0a70fe",
        "order": 6,
        "width": "3",
        "height": "3",
        "label": "Port 5",
        "chartType": "pie",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 2,
        "x": 1150,
        "y": 260,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "9c62ca5f.760868",
        "type": "ui_chart",
        "z": "77ed1840.b211d8",
        "name": "Port 6",
        "group": "3f6231e8.0a70fe",
        "order": 7,
        "width": "3",
        "height": "3",
        "label": "Port 6",
        "chartType": "pie",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 2,
        "x": 1150,
        "y": 220,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "7624270c.3a5178",
        "type": "ui_chart",
        "z": "77ed1840.b211d8",
        "name": "Port 7",
        "group": "3f6231e8.0a70fe",
        "order": 8,
        "width": "3",
        "height": "3",
        "label": "Port 7",
        "chartType": "pie",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": true,
        "outputs": 2,
        "x": 1150,
        "y": 180,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "98448688.914a68",
        "type": "link in",
        "z": "77ed1840.b211d8",
        "name": "Process Data Handler",
        "links": [
            "29fdf072.54f6"
        ],
        "x": 195,
        "y": 240,
        "wires": [
            [
                "45dacee7.9e2cd"
            ]
        ]
    },
    {
        "id": "2ad3e3c.cb61a1c",
        "type": "comment",
        "z": "77ed1840.b211d8",
        "name": "Process Data",
        "info": "",
        "x": 250,
        "y": 180,
        "wires": []
    },
    {
        "id": "ad6b3381.6307c",
        "type": "comment",
        "z": "77ed1840.b211d8",
        "name": "Service Data 10s Cycle",
        "info": "",
        "x": 260,
        "y": 400,
        "wires": []
    },
    {
        "id": "76822f9f.65ad3",
        "type": "comment",
        "z": "77ed1840.b211d8",
        "name": "Write Service data",
        "info": "",
        "x": 250,
        "y": 460,
        "wires": []
    },
    {
        "id": "74dfde76.12099",
        "type": "comment",
        "z": "77ed1840.b211d8",
        "name": "Write Process Data ",
        "info": "",
        "x": 250,
        "y": 520,
        "wires": []
    },
    {
        "id": "47959d2b.711074",
        "type": "function",
        "z": "ac4471cd.2e0b4",
        "name": "ProcessInputs: BUS BUS004P",
        "func": "if (msg.BNIPort === (parseInt(global.get('BUS004P'),16)) && msg.command === 10) {\n    msg.payload = msg.response.substr(15,5);\n} else {\n    return;\n    \n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 160,
        "wires": [
            [
                "f6f76c3e.208c5"
            ]
        ]
    },
    {
        "id": "f6f76c3e.208c5",
        "type": "function",
        "z": "ac4471cd.2e0b4",
        "name": "BUS Convert to Decimal",
        "func": "var sub1 = msg.payload.substr(0, 2);\nvar sub2 = msg.payload.substr(3, 2);\n\nvar subIn = sub1+sub2;\nvar subInt = parseInt(subIn ,16);\nvar string = subInt.toString(2);\nvar dist1 = string.substr(0, 14);\n\nmsg.dist = parseInt(dist1 ,2)/10;\n\nreturn {payload:msg.dist};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 160,
        "wires": [
            [
                "3f15d8e0.fb6568",
                "879db338.e0f95"
            ]
        ]
    },
    {
        "id": "3f15d8e0.fb6568",
        "type": "ui_chart",
        "z": "ac4471cd.2e0b4",
        "name": "BUS Chart",
        "group": "d4cd9dca.8b82",
        "order": 3,
        "width": "0",
        "height": "0",
        "label": "BUS004P",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "120",
        "ymax": "1400",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#0000ff",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": true,
        "outputs": 2,
        "x": 890,
        "y": 160,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "cc1c5af5.1593e8",
        "type": "comment",
        "z": "ac4471cd.2e0b4",
        "name": "Process Data",
        "info": "",
        "x": 270,
        "y": 80,
        "wires": []
    },
    {
        "id": "bf8bd065.a7bfb",
        "type": "link in",
        "z": "ac4471cd.2e0b4",
        "name": "Process Data Handler",
        "links": [
            "29fdf072.54f6"
        ],
        "x": 215,
        "y": 160,
        "wires": [
            [
                "47959d2b.711074"
            ]
        ]
    },
    {
        "id": "2d40d88f.458198",
        "type": "comment",
        "z": "ac4471cd.2e0b4",
        "name": "Service Data 10s Cycle",
        "info": "",
        "x": 280,
        "y": 300,
        "wires": []
    },
    {
        "id": "17aa6595.c5211a",
        "type": "comment",
        "z": "ac4471cd.2e0b4",
        "name": "Write Service data",
        "info": "",
        "x": 270,
        "y": 360,
        "wires": []
    },
    {
        "id": "bb93639e.6b02e",
        "type": "comment",
        "z": "ac4471cd.2e0b4",
        "name": "Write Process Data ",
        "info": "",
        "x": 270,
        "y": 420,
        "wires": []
    },
    {
        "id": "7d081870.a281d8",
        "type": "function",
        "z": "dabafc8a.62b67",
        "name": "BTL ProcessInputs BTL6PFIOL001",
        "func": "if (msg.BNIPort === parseInt(global.get('BTL6PFIOL001'),16) && msg.command === 10) \n    {   msg.dist = parseInt(msg.response.substr(15,11).split(\" \").join(\"\"), 16);\n        msg.distError = 0;\n        if(msg.dist === 0x7FFFFFFF )\n        {\n            msg.dist = 0;\n            msg.distError = 1;\n        }\n        else\n        {\n            var sign = msg.dist >>> 31;\n            \n            if(sign == 1)\n            {\n                msg.dist = (~(msg.dist - 1)) & 0x7FFFFFFF;\n                msg.dist *= -1;\n            }\n            else\n            {\n                msg.dist = msg.dist & 0x7FFFFFFF;\n            }\n        }\n    } \nelse \n{\n    return;\n}\n\nreturn msg;\n//{ payload:msg.payload.substr(15,8) };",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 300,
        "wires": [
            [
                "b4d12a2a.ebf9e8",
                "ecff4577.decb18"
            ]
        ]
    },
    {
        "id": "b4d12a2a.ebf9e8",
        "type": "function",
        "z": "dabafc8a.62b67",
        "name": "Convert to smartlight level",
        "func": "const MAX_DIST = 200000; //max range von BTL\nconst MAX_LEVEL_VALUE = 65535; //Prozessdatenrange in int. des Spartlight\nif(msg.dist > MAX_DIST)\n{\n    msg.dist = MAX_DIST;\n}\nif((msg.distError === 1) || (msg.dist < 0))\n{\n    msg.payload = 0;\n}\nelse\n{\n    msg.payload = Math.round((msg.dist / MAX_DIST) * MAX_LEVEL_VALUE);\n}\n\nreturn msg;\n\n//by eduard Vˆlker :-)",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 340,
        "wires": [
            [
                "a9bd0d71.11f6b"
            ]
        ]
    },
    {
        "id": "ecff4577.decb18",
        "type": "change",
        "z": "dabafc8a.62b67",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dist",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 300,
        "wires": [
            [
                "50aecb94.f8fdc4",
                "b2b6f74.e1a4e08"
            ]
        ]
    },
    {
        "id": "50aecb94.f8fdc4",
        "type": "ui_chart",
        "z": "dabafc8a.62b67",
        "name": "BTL IOL 200mm",
        "group": "7e32a54a.31c4fc",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "BTL IOL 200mm",
        "chartType": "line",
        "legend": "false",
        "xformat": "ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "250000",
        "removeOlder": "20",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": true,
        "outputs": 2,
        "x": 980,
        "y": 300,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "a9bd0d71.11f6b",
        "type": "rbe",
        "z": "dabafc8a.62b67",
        "name": "",
        "func": "deadband",
        "gap": "5%",
        "start": "",
        "inout": "in",
        "property": "payload",
        "x": 780,
        "y": 380,
        "wires": [
            [
                "4c5539f7.a9abb8"
            ]
        ]
    },
    {
        "id": "4c5539f7.a9abb8",
        "type": "link out",
        "z": "dabafc8a.62b67",
        "name": "Smartlight Level output",
        "links": [
            "99b6c05c.bdd44",
            "8e9983e2.acd6c"
        ],
        "x": 875,
        "y": 380,
        "wires": []
    },
    {
        "id": "c20794c3.f09f78",
        "type": "comment",
        "z": "dabafc8a.62b67",
        "name": "Process Data",
        "info": "",
        "x": 230,
        "y": 220,
        "wires": []
    },
    {
        "id": "d6c132f.01fd0d",
        "type": "link in",
        "z": "dabafc8a.62b67",
        "name": "Process Data Handler",
        "links": [
            "29fdf072.54f6"
        ],
        "x": 175,
        "y": 300,
        "wires": [
            [
                "7d081870.a281d8"
            ]
        ]
    },
    {
        "id": "40a8e00f.2fd01",
        "type": "comment",
        "z": "dabafc8a.62b67",
        "name": "Service Data 10s Cycle",
        "info": "",
        "x": 260,
        "y": 540,
        "wires": []
    },
    {
        "id": "f68b5d75.28b84",
        "type": "comment",
        "z": "dabafc8a.62b67",
        "name": "Write Service data",
        "info": "",
        "x": 250,
        "y": 600,
        "wires": []
    },
    {
        "id": "2f625337.1d079c",
        "type": "comment",
        "z": "dabafc8a.62b67",
        "name": "Write Process Data ",
        "info": "",
        "x": 250,
        "y": 660,
        "wires": []
    },
    {
        "id": "36355601.cfd86a",
        "type": "ui_slider",
        "z": "5bca5d42.a45cb4",
        "name": "Brightness Slider",
        "label": "Brightness",
        "group": "54484818.fe72d8",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "",
        "min": "17",
        "max": "127",
        "step": 1,
        "x": 390,
        "y": 220,
        "wires": [
            [
                "5cc277cf.fdf3b8"
            ]
        ]
    },
    {
        "id": "f04aded7.9df21",
        "type": "ui_button",
        "z": "5bca5d42.a45cb4",
        "name": "",
        "group": "62bead19.bb57f4",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Runlight",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 360,
        "y": 340,
        "wires": [
            [
                "fee9de6c.a582"
            ]
        ]
    },
    {
        "id": "2a80cae3.2d8cb6",
        "type": "change",
        "z": "5bca5d42.a45cb4",
        "name": "Set Hex String -get Process Data Port 4",
        "rules": [
            {
                "t": "set",
                "p": "hex",
                "pt": "msg",
                "to": "0D 00 02 0B 04 45 00 00 04 00 00 01 00",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "248f44dc.2da81c",
        "type": "function",
        "z": "5bca5d42.a45cb4",
        "name": "Hex String join",
        "func": "var speed = flow.get('speedRunlight');\nvar lauflicht = flow.get('colorRunlight');\nvar hintergrund = flow.get('backgroundRunlight');\n\nmsg.hex = \"0D 00 02 0B \"+global.get('BNI0088')+\" \"+lauflicht+\"\"+hintergrund+\" 00 00 04 00 00 0\"+speed+\" 00\";\nmsg.speed = speed;\nmsg.colorRunlight = lauflicht;\nmsg.backgroundRunlight = hintergrund;\nreturn msg;\n\n//24 00 00 04 00 00 04 00",
        "outputs": 1,
        "noerr": 0,
        "x": 780,
        "y": 380,
        "wires": [
            [
                "8a32df53.428ee"
            ]
        ]
    },
    {
        "id": "ee817ee3.ddd7b",
        "type": "ui_slider",
        "z": "5bca5d42.a45cb4",
        "name": "Speed Slider",
        "label": "Speed",
        "group": "62bead19.bb57f4",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "topic": "",
        "min": 0,
        "max": "5",
        "step": 1,
        "x": 370,
        "y": 380,
        "wires": [
            [
                "c439bd17.3b5c2"
            ]
        ]
    },
    {
        "id": "f50eb475.86e548",
        "type": "ui_dropdown",
        "z": "5bca5d42.a45cb4",
        "name": "Color",
        "label": "Runlight Color",
        "place": "Select option",
        "group": "62bead19.bb57f4",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "options": [
            {
                "label": "OFF",
                "value": "0",
                "type": "str"
            },
            {
                "label": "Green",
                "value": "1",
                "type": "str"
            },
            {
                "label": "Red",
                "value": "2",
                "type": "str"
            },
            {
                "label": "Yellow",
                "value": "3",
                "type": "str"
            },
            {
                "label": "Blue",
                "value": "4",
                "type": "str"
            },
            {
                "label": "Orange",
                "value": "5",
                "type": "str"
            },
            {
                "label": "White",
                "value": "7",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 350,
        "y": 420,
        "wires": [
            [
                "35ec600.bf78ba"
            ]
        ]
    },
    {
        "id": "35ec600.bf78ba",
        "type": "change",
        "z": "5bca5d42.a45cb4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "colorRunlight",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "8e838502.a5c448",
        "type": "change",
        "z": "5bca5d42.a45cb4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "backgroundRunlight",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "dd8de8a4.a4bba8",
        "type": "ui_dropdown",
        "z": "5bca5d42.a45cb4",
        "name": "Color Background",
        "label": "Background Color",
        "place": "Select option",
        "group": "62bead19.bb57f4",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "options": [
            {
                "label": "OFF",
                "value": "0",
                "type": "str"
            },
            {
                "label": "Green",
                "value": "1",
                "type": "str"
            },
            {
                "label": "Red",
                "value": "2",
                "type": "str"
            },
            {
                "label": "Yellow",
                "value": "3",
                "type": "str"
            },
            {
                "label": "Blue",
                "value": "4",
                "type": "str"
            },
            {
                "label": "Orange",
                "value": "5",
                "type": "str"
            },
            {
                "label": "White",
                "value": "7",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 390,
        "y": 460,
        "wires": [
            [
                "8e838502.a5c448"
            ]
        ]
    },
    {
        "id": "c439bd17.3b5c2",
        "type": "change",
        "z": "5bca5d42.a45cb4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "speedRunlight",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 380,
        "wires": [
            [
                "248f44dc.2da81c"
            ]
        ]
    },
    {
        "id": "4615fb41.2e4ac4",
        "type": "inject",
        "z": "5bca5d42.a45cb4",
        "name": "Init Color",
        "topic": "",
        "payload": "4",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5.2",
        "x": 180,
        "y": 480,
        "wires": [
            [
                "8e838502.a5c448"
            ]
        ]
    },
    {
        "id": "e8fb414c.1639b",
        "type": "inject",
        "z": "5bca5d42.a45cb4",
        "name": "Init Color",
        "topic": "",
        "payload": "2",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5.1",
        "x": 180,
        "y": 440,
        "wires": [
            [
                "35ec600.bf78ba"
            ]
        ]
    },
    {
        "id": "555eb0b8.958fd",
        "type": "inject",
        "z": "5bca5d42.a45cb4",
        "name": "Init Speed",
        "topic": "",
        "payload": "2",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "x": 190,
        "y": 400,
        "wires": [
            [
                "c439bd17.3b5c2"
            ]
        ]
    },
    {
        "id": "62855dfb.f65104",
        "type": "ui_button",
        "z": "5bca5d42.a45cb4",
        "name": "",
        "group": "54484818.fe72d8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "OFF",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 350,
        "y": 280,
        "wires": [
            [
                "3f4ba838.8c8e08"
            ]
        ]
    },
    {
        "id": "b7ced85b.7cedb8",
        "type": "change",
        "z": "5bca5d42.a45cb4",
        "name": "Set Hex String -get Process Data Port 4",
        "rules": [
            {
                "t": "set",
                "p": "hex",
                "pt": "msg",
                "to": "0D 00 02 0B 04 00 00 00 04 00 00 01 00",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "7084623f.aa666c",
        "type": "comment",
        "z": "5bca5d42.a45cb4",
        "name": "BNI0088",
        "info": "BNI_IOL-801-102-Z036\n( byte eingangsdaten)",
        "x": 160,
        "y": 220,
        "wires": []
    },
    {
        "id": "e5cc595b.0d16a8",
        "type": "ui_button",
        "z": "5bca5d42.a45cb4",
        "name": "",
        "group": "c51df1d6.93ec",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "level Mode",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 370,
        "y": 520,
        "wires": [
            [
                "874cecc8.1ad2"
            ]
        ]
    },
    {
        "id": "99fff4e7.11c4a8",
        "type": "change",
        "z": "5bca5d42.a45cb4",
        "name": "Set Hex String -get Process Data Port 4",
        "rules": [
            {
                "t": "set",
                "p": "hex",
                "pt": "msg",
                "to": "0D 00 02 0B 04 43 07 00 02 00 dc ff 00",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "2318cfd.dcb573",
        "type": "function",
        "z": "5bca5d42.a45cb4",
        "name": "Hex String join",
        "func": "var level = msg.payload;\nvar seg1 = flow.get('seg1');\nvar seg2 = flow.get('seg2');\nvar seg3 = flow.get('seg3');\nvar levelHex1 = level.toString(16).substr(0,2);\nvar levelHex2 = level.toString(16).substr(2,4);\n\nmsg.hex = \"0D 00 02 0B \"+global.get('BNI0088')+\" \"+seg2+\"\"+seg1+\" 0\"+seg3+\" 00 02 00 \"+levelHex2+\" \"+levelHex1+\" 00\";\nmsg.level = level;\nmsg.seg1 = seg1;\nmsg.seg2 = seg2;\nmsg.seg3 = seg3;\nmsg.levelHex = levelHex1+\" \"+levelHex2;\nreturn msg;\n\n//level noch anpassen",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 560,
        "wires": [
            [
                "8a32df53.428ee"
            ]
        ]
    },
    {
        "id": "1745a4a4.b5a46b",
        "type": "ui_slider",
        "z": "5bca5d42.a45cb4",
        "name": "Level Slider",
        "label": "Level",
        "group": "c51df1d6.93ec",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "topic": "",
        "min": 0,
        "max": "65535",
        "step": "100",
        "x": 370,
        "y": 560,
        "wires": [
            [
                "2318cfd.dcb573"
            ]
        ]
    },
    {
        "id": "1b9b2c0f.8344e4",
        "type": "ui_dropdown",
        "z": "5bca5d42.a45cb4",
        "name": "Color Segment 1",
        "label": "Color Segment 1",
        "place": "Select option",
        "group": "c51df1d6.93ec",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "options": [
            {
                "label": "OFF",
                "value": "0",
                "type": "str"
            },
            {
                "label": "Green",
                "value": "1",
                "type": "str"
            },
            {
                "label": "Red",
                "value": "2",
                "type": "str"
            },
            {
                "label": "Yellow",
                "value": "3",
                "type": "str"
            },
            {
                "label": "Blue",
                "value": "4",
                "type": "str"
            },
            {
                "label": "Orange",
                "value": "5",
                "type": "str"
            },
            {
                "label": "White",
                "value": "7",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 390,
        "y": 600,
        "wires": [
            [
                "674c794b.9e3d88"
            ]
        ]
    },
    {
        "id": "674c794b.9e3d88",
        "type": "change",
        "z": "5bca5d42.a45cb4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "seg1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "86a69e30.ef4b6",
        "type": "change",
        "z": "5bca5d42.a45cb4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "seg2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "a64aa316.bbd8c",
        "type": "ui_dropdown",
        "z": "5bca5d42.a45cb4",
        "name": "Color Segment 2",
        "label": "Color Segment 2",
        "place": "Select option",
        "group": "c51df1d6.93ec",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "options": [
            {
                "label": "OFF",
                "value": "0",
                "type": "str"
            },
            {
                "label": "Green",
                "value": "1",
                "type": "str"
            },
            {
                "label": "Red",
                "value": "2",
                "type": "str"
            },
            {
                "label": "Yellow",
                "value": "3",
                "type": "str"
            },
            {
                "label": "Blue",
                "value": "4",
                "type": "str"
            },
            {
                "label": "Orange",
                "value": "5",
                "type": "str"
            },
            {
                "label": "White",
                "value": "7",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 390,
        "y": 640,
        "wires": [
            [
                "86a69e30.ef4b6"
            ]
        ]
    },
    {
        "id": "ee8d09ea.4297a8",
        "type": "ui_dropdown",
        "z": "5bca5d42.a45cb4",
        "name": "Color Segment 3",
        "label": "Color Segment 3",
        "place": "Select option",
        "group": "c51df1d6.93ec",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "options": [
            {
                "label": "OFF",
                "value": "0",
                "type": "str"
            },
            {
                "label": "Green",
                "value": "1",
                "type": "str"
            },
            {
                "label": "Red",
                "value": "2",
                "type": "str"
            },
            {
                "label": "Yellow",
                "value": "3",
                "type": "str"
            },
            {
                "label": "Blue",
                "value": "4",
                "type": "str"
            },
            {
                "label": "Orange",
                "value": "5",
                "type": "str"
            },
            {
                "label": "White",
                "value": "7",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 390,
        "y": 680,
        "wires": [
            [
                "646295c3.b8453c"
            ]
        ]
    },
    {
        "id": "646295c3.b8453c",
        "type": "change",
        "z": "5bca5d42.a45cb4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "seg3",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "b8500985.fe0ec8",
        "type": "inject",
        "z": "5bca5d42.a45cb4",
        "name": "Init Color",
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5.6",
        "x": 180,
        "y": 700,
        "wires": [
            [
                "646295c3.b8453c"
            ]
        ]
    },
    {
        "id": "1b7d8061.d7acc",
        "type": "inject",
        "z": "5bca5d42.a45cb4",
        "name": "Init Color",
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5.5",
        "x": 180,
        "y": 660,
        "wires": [
            [
                "86a69e30.ef4b6"
            ]
        ]
    },
    {
        "id": "9d05ba74.96de68",
        "type": "inject",
        "z": "5bca5d42.a45cb4",
        "name": "Init Level",
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5.4",
        "x": 180,
        "y": 620,
        "wires": [
            [
                "674c794b.9e3d88"
            ]
        ]
    },
    {
        "id": "123100cd.efd01f",
        "type": "inject",
        "z": "5bca5d42.a45cb4",
        "name": "Init Level",
        "topic": "",
        "payload": "3542",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5.3",
        "x": 180,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "5cc277cf.fdf3b8",
        "type": "change",
        "z": "5bca5d42.a45cb4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "brightness",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 220,
        "wires": [
            [
                "6fd6d035.04006"
            ]
        ]
    },
    {
        "id": "6fd6d035.04006",
        "type": "function",
        "z": "5bca5d42.a45cb4",
        "name": "Hex String join",
        "func": "var bright = flow.get('brightness');\nvar brightness = bright.toString(16);\n\nmsg.hex = \"0C 00 02 03 \"+global.get('BNI0088')+\" 51 00 00 03 \"+brightness+\" \"+brightness+\" \"+brightness;\nmsg.brightness = brightness;\n\nreturn msg;\n\n//to Do: brightness in HEX\n\n/*\n//msg.Start = '09 00';//9 + Length of Data, 00\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '03';\nmsg.IOLPort = '00';\nmsg.LowIndex = '51';\nmsg.HighIndex = '00';\nmsg.SubIndex = '00';\nmsg.LengthOfData = '03';\nmsg.Data = msg.payload.toString(16);\n\nif ((9 + parseInt(msg.LengthOfData)) <16) {\n    msg.Start = \"0\"+ (9 + parseInt(msg.LengthOfData)).toString(16) + \" 00\";\n} else { \n    msg.Start = (9 + parseInt(msg.LengthOfData)).toString(16)+ \" 00\";\n}\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex +\" \"+ msg.LengthOfData +\" \"+ msg.Data+\" \"+ msg.Data+\" \"+ msg.Data;\n\nreturn msg;\n*/",
        "outputs": 1,
        "noerr": 0,
        "x": 780,
        "y": 220,
        "wires": [
            [
                "8a32df53.428ee"
            ]
        ]
    },
    {
        "id": "8a32df53.428ee",
        "type": "function",
        "z": "5bca5d42.a45cb4",
        "name": "Set Payload to Buffer",
        "func": "if (msg.hex.includes(undefined) === false){\n    var string = msg.hex.replace(/\\s/g,'');\n    msg.ip = global.get('host');\n    msg.port = '1999';\n    msg.payload = Buffer.from(string,\"hex\");\n} else {\n    msg.payload = \"not Present\"\n}\n\nreturn msg;\n\n//msg.payload = Buffer.from(msg.payload, \"hex\");\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1220,
        "y": 340,
        "wires": [
            [
                "b62f10ab.1b5ee"
            ]
        ]
    },
    {
        "id": "b62f10ab.1b5ee",
        "type": "switch",
        "z": "5bca5d42.a45cb4",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "not Present",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1410,
        "y": 340,
        "wires": [
            [
                "419d027c.22887c"
            ],
            [
                "efd5fc6.f5176"
            ]
        ]
    },
    {
        "id": "efd5fc6.f5176",
        "type": "debug",
        "z": "5bca5d42.a45cb4",
        "name": "Sensors not set",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1580,
        "y": 360,
        "wires": []
    },
    {
        "id": "8e9983e2.acd6c",
        "type": "link in",
        "z": "5bca5d42.a45cb4",
        "name": "Smartlight Level Input",
        "links": [
            "5c1e78d3.252298",
            "4c5539f7.a9abb8"
        ],
        "x": 735,
        "y": 580,
        "wires": [
            [
                "2318cfd.dcb573"
            ]
        ]
    },
    {
        "id": "419d027c.22887c",
        "type": "link out",
        "z": "5bca5d42.a45cb4",
        "name": "",
        "links": [
            "d3db8e06.f0851"
        ],
        "x": 1515,
        "y": 320,
        "wires": []
    },
    {
        "id": "f4dcb888.8ebba8",
        "type": "comment",
        "z": "5bca5d42.a45cb4",
        "name": "Write Process Data ",
        "info": "",
        "x": 190,
        "y": 160,
        "wires": []
    },
    {
        "id": "db5fe1de.b2fcb",
        "type": "function",
        "z": "5bca5d42.a45cb4",
        "name": "AL_WriteReq BNI0088",
        "func": "//msg.Start = '09 00';//9 + Length of Data, 00\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '03';\nmsg.IOLPort = flow.get('BOS026R');\nmsg.LowIndex = 'B6';\nmsg.HighIndex = '00';\nmsg.SubIndex = '02';\nmsg.LengthOfData = '02';\n//msg.Data = msg.payload//msg.DataIn;\n\nif ((9 + parseInt(msg.LengthOfData)) <16) {\n    msg.Start = \"0\"+ (9 + parseInt(msg.LengthOfData)).toString(16) + \" 00\";\n} else { \n    msg.Start = (9 + parseInt(msg.LengthOfData)).toString(16)+ \" 00\";\n}\n\nif ((msg.payload) <16) {\n    msg.Data = \"00 0\"+ (msg.payload.toString(16));\n} else if (msg.payload >=16 && msg.payload < 256){\n    msg.Data = \"00 \" + (msg.payload.toString(16));\n} else if (msg.payload >=256 && msg.payload < 4096){\n    msg.Data = \"0\" + (msg.payload.toString(16));\n} else { \n    msg.Data = (msg.payload.toString(16));\n}\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex +\" \"+ msg.LengthOfData +\" \"+ msg.Data;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 820,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "baace3d6.a9f1f",
        "type": "comment",
        "z": "5bca5d42.a45cb4",
        "name": "To Do: change to Write process data ",
        "info": "",
        "x": 820,
        "y": 780,
        "wires": []
    },
    {
        "id": "3f4ba838.8c8e08",
        "type": "function",
        "z": "5bca5d42.a45cb4",
        "name": "WriteProcessDataReq",
        "func": "//msg.Start = '05 00';//5 + Length of Data, 00\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '0B'; // In Hex\nmsg.IOLPort = global.get('BNI0088'); // In Hex\nmsg.LengthOfData = '08'; //in count of Hex Bytes\nmsg.Data = \"00 00 00 04 00 00 01 00\"; //port data in HEX\nmsg.PL = msg.payload; //Payload of inject\n\n\nif ((5+parseInt(msg.LengthOfData)) <15) {\n    msg.Start = \"0\"+ (5+parseInt(msg.LengthOfData)).toString(16) + \" 00\";\n} else { \n    msg.Start = (5+parseInt(msg.LengthOfData)).toString(16)+ \" 00\";\n}\n\n/*if ((msg.payload) <16) {\n    msg.Data = \"00 0\"+ (msg.payload.toString(16));\n} else if (msg.payload >=16 && msg.payload < 256){\n    msg.Data = \"00 \" + (msg.payload.toString(16));\n} else if (msg.payload >=256 && msg.payload < 4096){\n    msg.Data = \"0\" + (msg.payload.toString(16));\n} else { \n    msg.Data = (msg.payload.toString(16));\n}*/\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.Data;\n\nreturn msg;\n\n//0D 00 02 0B 04 00 00 00 04 00 00 01 00",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 280,
        "wires": [
            [
                "8a32df53.428ee"
            ]
        ]
    },
    {
        "id": "da814d7.12162b",
        "type": "function",
        "z": "f2cf66f1.8deb18",
        "name": "WriteProcessDataReq Color Wheel Mode",
        "func": "//msg.Start = '05 00';//5 + Length of Data, 00\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '0B'; // In Hex\nmsg.IOLPort = global.get('BNI00E0'); // In Hex\nmsg.LengthOfData = '07'; //in count of Hex Bytes\n//msg.Data = msg.payload.toString(16); //port data in HEX\nmsg.PL = msg.payload; //Payload of inject\n\n\nif ((5+parseInt(msg.LengthOfData)) <15) {\n    msg.Start = \"0\"+ (5+parseInt(msg.LengthOfData)).toString(16) + \" 00\";\n} else { \n    msg.Start = (5+parseInt(msg.LengthOfData)).toString(16)+ \" 00\";\n}\nmsg.Data = \"00 00 00 08 00 00 01\";\n\n/*\nif ((msg.payload) <16) {\n    msg.Data = \"00 0\"+ (msg.payload.toString(16));\n} else if (msg.payload >=16 && msg.payload < 256){\n    msg.Data = \"00 \" + (msg.payload.toString(16));\n} else if (msg.payload >=256 && msg.payload < 4096){\n    msg.Data = \"0\" + (msg.payload.toString(16));\n} else { \n    msg.Data = (msg.payload.toString(16));\n}\n*/\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.Data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 780,
        "y": 140,
        "wires": [
            [
                "a54b1843.e9f338"
            ]
        ]
    },
    {
        "id": "e7a17b86.031668",
        "type": "ui_button",
        "z": "f2cf66f1.8deb18",
        "name": "",
        "group": "c613f189.13fdb",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Color Wheel Mode",
        "color": "black",
        "bgcolor": "",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "",
        "x": 510,
        "y": 140,
        "wires": [
            [
                "da814d7.12162b"
            ]
        ]
    },
    {
        "id": "a54b1843.e9f338",
        "type": "function",
        "z": "f2cf66f1.8deb18",
        "name": "Set Payload to Buffer",
        "func": "if (msg.hex.includes(undefined) === false){\n    var string = msg.hex.replace(/\\s/g,'');\n    msg.ip = global.get('host');\n    msg.port = '1999';\n    msg.payload = Buffer.from(string,\"hex\");\n} else {\n    msg.payload = \"not Present\"\n}\n\nreturn msg;\n\n//msg.payload = Buffer.from(msg.payload, \"hex\");\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1240,
        "y": 140,
        "wires": [
            [
                "404c91a.aa62f7"
            ]
        ]
    },
    {
        "id": "955a6d51.1f52f",
        "type": "function",
        "z": "f2cf66f1.8deb18",
        "name": "WriteProcessDataReq Color Wheel Mode",
        "func": "//msg.Start = '05 00';//5 + Length of Data, 00\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '0B'; // In Hex\nmsg.IOLPort = global.get('BNI00E0'); // In Hex\nmsg.LengthOfData = '07'; //in count of Hex Bytes\n//msg.Data = msg.payload.toString(16); //port data in HEX\nmsg.PL = msg.payload; //Payload of inject\n\n\nif ((5+parseInt(msg.LengthOfData)) <15) {\n    msg.Start = \"0\"+ (5+parseInt(msg.LengthOfData)).toString(16) + \" 00\";\n} else { \n    msg.Start = (5+parseInt(msg.LengthOfData)).toString(16)+ \" 00\";\n}\nmsg.Data = \"42 00 00 04 16 01 04\";\n\n/*\nif ((msg.payload) <16) {\n    msg.Data = \"00 0\"+ (msg.payload.toString(16));\n} else if (msg.payload >=16 && msg.payload < 256){\n    msg.Data = \"00 \" + (msg.payload.toString(16));\n} else if (msg.payload >=256 && msg.payload < 4096){\n    msg.Data = \"0\" + (msg.payload.toString(16));\n} else { \n    msg.Data = (msg.payload.toString(16));\n}\n*/\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.Data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 780,
        "y": 180,
        "wires": [
            [
                "a54b1843.e9f338"
            ]
        ]
    },
    {
        "id": "7faaa8a7.42cac8",
        "type": "inject",
        "z": "f2cf66f1.8deb18",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 480,
        "y": 180,
        "wires": [
            [
                "955a6d51.1f52f"
            ]
        ]
    },
    {
        "id": "4930413d.01293",
        "type": "ui_slider",
        "z": "f2cf66f1.8deb18",
        "name": "",
        "label": "Level Slider",
        "group": "384cbe8.1481a42",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "",
        "min": 0,
        "max": "65535",
        "step": "1000",
        "x": 490,
        "y": 280,
        "wires": [
            [
                "99883e9a.b6628"
            ]
        ]
    },
    {
        "id": "99883e9a.b6628",
        "type": "function",
        "z": "f2cf66f1.8deb18",
        "name": "WriteProcessDataReq Color Wheel Mode",
        "func": "//msg.Start = '05 00';//5 + Length of Data, 00\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '0B'; // In Hex\nmsg.IOLPort = global.get('BNI00E0'); // In Hex\nmsg.LengthOfData = '07'; //in count of Hex Bytes\n//msg.Data = msg.payload.toString(16); //port data in HEX\nmsg.PL = msg.payload; //Payload of inject\n\n\nif ((5+parseInt(msg.LengthOfData)) <15) {\n    msg.Start = \"0\"+ (5+parseInt(msg.LengthOfData)).toString(16) + \" 00\";\n} else { \n    msg.Start = (5+parseInt(msg.LengthOfData)).toString(16)+ \" 00\";\n}\n//msg.Data = \"42 00 00 04 16 01 04\";\n//msg.color1 = \"1\";\n//msg.color2 = \"2\";\n//msg.color3 = \"4\"; //0 off, 1green, 2red, 3yellow, 4blue, 5orange, 7white\n//msg.direction = \"1\" //0 clockwise, 1 counter clock\n//msg.fade = \"1\" //0 no Fade, 1 fade\n\nif ((msg.payload) <16) {\n    msg.Data = \"00 0\"+ (msg.payload.toString(16));\n} else if (msg.payload >=16 && msg.payload < 256){\n    msg.Data = \"00 \" + (msg.payload.toString(16));\n} else if (msg.payload >=256 && msg.payload < 4096){\n    msg.Data = \"0\" + (msg.payload.toString(16));\n} else { \n    msg.Data = (msg.payload.toString(16));\n}\nmsg.Datastring = flow.get('color2') +\"\"+ flow.get('color1') +\" 0\"+ flow.get('color3') +\" 00 02 \"+ flow.get('fade') + \"\" + flow.get('direction') + \" \" + msg.Data.substr(2,2) +\" \"+ msg.Data.substr(0,2);  \n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.Datastring;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 780,
        "y": 280,
        "wires": [
            [
                "a54b1843.e9f338"
            ]
        ]
    },
    {
        "id": "7eac16a8.061d78",
        "type": "ui_dropdown",
        "z": "f2cf66f1.8deb18",
        "name": "",
        "label": "Level Color 1",
        "place": "Select option",
        "group": "384cbe8.1481a42",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "options": [
            {
                "label": "Off",
                "value": "0",
                "type": "str"
            },
            {
                "label": "Green",
                "value": "1",
                "type": "str"
            },
            {
                "label": "Red",
                "value": "2",
                "type": "str"
            },
            {
                "label": "Yellow",
                "value": "3",
                "type": "str"
            },
            {
                "label": "Blue",
                "value": "4",
                "type": "str"
            },
            {
                "label": "Orange",
                "value": "5",
                "type": "str"
            },
            {
                "label": "White",
                "value": "7",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 350,
        "y": 320,
        "wires": [
            [
                "b3ab8dd8.7b8a4"
            ]
        ]
    },
    {
        "id": "c0aff649.af8e68",
        "type": "ui_dropdown",
        "z": "f2cf66f1.8deb18",
        "name": "",
        "label": "Level Color 2",
        "place": "Select option",
        "group": "384cbe8.1481a42",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "options": [
            {
                "label": "Off",
                "value": "0",
                "type": "str"
            },
            {
                "label": "Green",
                "value": "1",
                "type": "str"
            },
            {
                "label": "Red",
                "value": "2",
                "type": "str"
            },
            {
                "label": "Yellow",
                "value": "3",
                "type": "str"
            },
            {
                "label": "Blue",
                "value": "4",
                "type": "str"
            },
            {
                "label": "Orange",
                "value": "5",
                "type": "str"
            },
            {
                "label": "White",
                "value": "7",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 350,
        "y": 360,
        "wires": [
            [
                "c671518c.86f84"
            ]
        ]
    },
    {
        "id": "a1f6c53a.8ad448",
        "type": "ui_dropdown",
        "z": "f2cf66f1.8deb18",
        "name": "",
        "label": "Level Color 3",
        "place": "Select option",
        "group": "384cbe8.1481a42",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "options": [
            {
                "label": "Off",
                "value": "0",
                "type": "str"
            },
            {
                "label": "Green",
                "value": "1",
                "type": "str"
            },
            {
                "label": "Red",
                "value": "2",
                "type": "str"
            },
            {
                "label": "Yellow",
                "value": "3",
                "type": "str"
            },
            {
                "label": "Blue",
                "value": "4",
                "type": "str"
            },
            {
                "label": "Orange",
                "value": "5",
                "type": "str"
            },
            {
                "label": "White",
                "value": "7",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 350,
        "y": 400,
        "wires": [
            [
                "32fe143e.b9e6dc"
            ]
        ]
    },
    {
        "id": "b3ab8dd8.7b8a4",
        "type": "change",
        "z": "f2cf66f1.8deb18",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "color1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "c671518c.86f84",
        "type": "change",
        "z": "f2cf66f1.8deb18",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "color2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "32fe143e.b9e6dc",
        "type": "change",
        "z": "f2cf66f1.8deb18",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "color3",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "8c8da1ba.a69fa",
        "type": "ui_dropdown",
        "z": "f2cf66f1.8deb18",
        "name": "",
        "label": "Level Rotation",
        "place": "Select option",
        "group": "384cbe8.1481a42",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "options": [
            {
                "label": "Clockwise",
                "value": "0",
                "type": "str"
            },
            {
                "label": "CounterClockwise",
                "value": "1",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 360,
        "y": 440,
        "wires": [
            [
                "cf230f10.f11c7"
            ]
        ]
    },
    {
        "id": "cf230f10.f11c7",
        "type": "change",
        "z": "f2cf66f1.8deb18",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "direction",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "aab0917d.3d8d1",
        "type": "ui_dropdown",
        "z": "f2cf66f1.8deb18",
        "name": "",
        "label": "Level fade",
        "place": "Select option",
        "group": "384cbe8.1481a42",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "options": [
            {
                "label": "No Fade",
                "value": "0",
                "type": "str"
            },
            {
                "label": "Fade",
                "value": "1",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 350,
        "y": 480,
        "wires": [
            [
                "84a0d756.16cf08"
            ]
        ]
    },
    {
        "id": "84a0d756.16cf08",
        "type": "change",
        "z": "f2cf66f1.8deb18",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "fade",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "f9f581c2.3867c",
        "type": "inject",
        "z": "f2cf66f1.8deb18",
        "name": "Init Level",
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "x": 180,
        "y": 340,
        "wires": [
            [
                "b3ab8dd8.7b8a4"
            ]
        ]
    },
    {
        "id": "3626b880.5d6118",
        "type": "inject",
        "z": "f2cf66f1.8deb18",
        "name": "Init Level",
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "x": 180,
        "y": 380,
        "wires": [
            [
                "c671518c.86f84"
            ]
        ]
    },
    {
        "id": "40aa8bfe.02dea4",
        "type": "inject",
        "z": "f2cf66f1.8deb18",
        "name": "Init Level",
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "x": 180,
        "y": 420,
        "wires": [
            [
                "32fe143e.b9e6dc"
            ]
        ]
    },
    {
        "id": "14da83ea.6a64fc",
        "type": "inject",
        "z": "f2cf66f1.8deb18",
        "name": "Init Level",
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "x": 180,
        "y": 460,
        "wires": [
            [
                "cf230f10.f11c7"
            ]
        ]
    },
    {
        "id": "a872840e.d64948",
        "type": "inject",
        "z": "f2cf66f1.8deb18",
        "name": "Init Level",
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "x": 180,
        "y": 500,
        "wires": [
            [
                "84a0d756.16cf08"
            ]
        ]
    },
    {
        "id": "f0d7cf6.3a5363",
        "type": "inject",
        "z": "f2cf66f1.8deb18",
        "name": "Init Level",
        "topic": "",
        "payload": "25000",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "x": 180,
        "y": 280,
        "wires": [
            [
                "4930413d.01293"
            ]
        ]
    },
    {
        "id": "a1e62a4b.921278",
        "type": "comment",
        "z": "f2cf66f1.8deb18",
        "name": "BNI00XX",
        "info": "",
        "x": 180,
        "y": 100,
        "wires": []
    },
    {
        "id": "404c91a.aa62f7",
        "type": "switch",
        "z": "f2cf66f1.8deb18",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "not Present",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1430,
        "y": 140,
        "wires": [
            [
                "62f4f6a1.77e888"
            ],
            [
                "b6eb674f.558d78"
            ]
        ]
    },
    {
        "id": "b6eb674f.558d78",
        "type": "debug",
        "z": "f2cf66f1.8deb18",
        "name": "Sensors not present",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1640,
        "y": 160,
        "wires": []
    },
    {
        "id": "62f4f6a1.77e888",
        "type": "link out",
        "z": "f2cf66f1.8deb18",
        "name": "Process Data Send",
        "links": [
            "d3db8e06.f0851"
        ],
        "x": 1555,
        "y": 120,
        "wires": []
    },
    {
        "id": "42771f2f.f050b",
        "type": "debug",
        "z": "6539041e.99e41c",
        "name": "Outgoing massages Debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 540,
        "y": 540,
        "wires": []
    },
    {
        "id": "bee7c340.25f39",
        "type": "debug",
        "z": "6539041e.99e41c",
        "name": "incoming massages Debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1140,
        "y": 540,
        "wires": []
    },
    {
        "id": "fca1b508.572718",
        "type": "inject",
        "z": "7eb9cfc2.9ad25",
        "name": "BNI General",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "1",
        "crontab": "",
        "once": false,
        "x": 480,
        "y": 140,
        "wires": [
            [
                "7dbc4988.cdf3f8"
            ]
        ]
    },
    {
        "id": "7dbc4988.cdf3f8",
        "type": "http request",
        "z": "7eb9cfc2.9ad25",
        "name": "fetch data from BNI",
        "method": "GET",
        "ret": "obj",
        "url": "http://192.168.0.50/dprop.jsn",
        "tls": "",
        "x": 730,
        "y": 140,
        "wires": [
            [
                "86bae406.f76ca8"
            ]
        ]
    },
    {
        "id": "86bae406.f76ca8",
        "type": "function",
        "z": "7eb9cfc2.9ad25",
        "name": "Split",
        "func": "var output = [];\n\nfor(var i = 0; i < msg.payload.length; i++)\n{\n    var element = msg.payload[i];\n    \n    if( element !== null &&\n        element !== undefined )\n        {\n            output[i] = {};\n            output[i].payload = element;\n        }\n}\n\nreturn output;",
        "outputs": 1,
        "noerr": 0,
        "x": 910,
        "y": 140,
        "wires": [
            [
                "f8de2a2b.0aeb48"
            ]
        ]
    },
    {
        "id": "f8de2a2b.0aeb48",
        "type": "function",
        "z": "7eb9cfc2.9ad25",
        "name": "ProcessInputs",
        "func": "return { payload:msg.payload.ProcessInputs };",
        "outputs": 1,
        "noerr": 0,
        "x": 1100,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "904a0405.9ba568",
        "type": "function",
        "z": "3e53e732.db32a8",
        "name": "ProcessInputs: BUS BOD0026",
        "func": "if (msg.BNIPort === (parseInt(global.get('BOD0026'),16)) && msg.command === 10) {\n    msg.payload = msg.response.substr(15,5);\n} else {\n    return;\n    \n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 360,
        "wires": [
            [
                "2ffc6c95.547bb4",
                "87d83c55.3961a"
            ]
        ]
    },
    {
        "id": "2ffc6c95.547bb4",
        "type": "function",
        "z": "3e53e732.db32a8",
        "name": "BUS Convert to Decimal",
        "func": "msg.hexValue = msg.payload;\n\nmsg.payload = parseInt(msg.hexValue.split(' ').join(''),16)/10;\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 360,
        "wires": [
            [
                "fcc52712.c68518",
                "43f3c964.e28508",
                "326033eb.a00d8c"
            ]
        ]
    },
    {
        "id": "fcc52712.c68518",
        "type": "ui_chart",
        "z": "3e53e732.db32a8",
        "name": "BOD0026 Chart",
        "group": "9036748d.d520c8",
        "order": 3,
        "width": "0",
        "height": "0",
        "label": "BOD0026",
        "chartType": "line",
        "legend": "false",
        "xformat": "ss",
        "interpolate": "linear",
        "nodata": "No Data Yet :-)",
        "dot": false,
        "ymin": "0",
        "ymax": "655",
        "removeOlder": "30",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#0000ff",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 2,
        "x": 900,
        "y": 360,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "eb5ca9ca.a8d808",
        "type": "comment",
        "z": "3e53e732.db32a8",
        "name": "Process Data",
        "info": "",
        "x": 270,
        "y": 280,
        "wires": []
    },
    {
        "id": "5ee1f121.6404d",
        "type": "link in",
        "z": "3e53e732.db32a8",
        "name": "Process Data Handler",
        "links": [
            "29fdf072.54f6"
        ],
        "x": 215,
        "y": 360,
        "wires": [
            [
                "904a0405.9ba568"
            ]
        ]
    },
    {
        "id": "3fd4a46d.01114c",
        "type": "comment",
        "z": "3e53e732.db32a8",
        "name": "Service Data 10s Cycle",
        "info": "",
        "x": 280,
        "y": 500,
        "wires": []
    },
    {
        "id": "414da33b.467b4c",
        "type": "comment",
        "z": "3e53e732.db32a8",
        "name": "Write Service data",
        "info": "",
        "x": 270,
        "y": 560,
        "wires": []
    },
    {
        "id": "8ffc3bd9.624bc8",
        "type": "comment",
        "z": "3e53e732.db32a8",
        "name": "Write Process Data ",
        "info": "",
        "x": 270,
        "y": 620,
        "wires": []
    },
    {
        "id": "87d83c55.3961a",
        "type": "debug",
        "z": "3e53e732.db32a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 580,
        "y": 420,
        "wires": []
    },
    {
        "id": "43f3c964.e28508",
        "type": "debug",
        "z": "3e53e732.db32a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 870,
        "y": 420,
        "wires": []
    },
    {
        "id": "1168bccb.912aa3",
        "type": "change",
        "z": "6539041e.99e41c",
        "name": "Release next massage in queue",
        "rules": [
            {
                "t": "set",
                "p": "trigger",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            },
            {
                "t": "delete",
                "p": "fromip",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "ip",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "port",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 320,
        "wires": [
            [
                "6e7bd3a6.3a745c",
                "71b6555a.7711cc"
            ]
        ]
    },
    {
        "id": "8b05c185.c439c",
        "type": "inject",
        "z": "6539041e.99e41c",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": "10",
        "x": 910,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "af266bce.cd8c88",
        "type": "debug",
        "z": "6539041e.99e41c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 690,
        "y": 360,
        "wires": []
    },
    {
        "id": "6e7bd3a6.3a745c",
        "type": "debug",
        "z": "6539041e.99e41c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1450,
        "y": 340,
        "wires": []
    },
    {
        "id": "44fc7d34.43b6e4",
        "type": "inject",
        "z": "8bf0017.3caeb",
        "name": "",
        "topic": "",
        "payload": "test",
        "payloadType": "str",
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 270,
        "y": 300,
        "wires": [
            [
                "b89e7f7c.734bf"
            ]
        ]
    },
    {
        "id": "afa8fe0.c974e",
        "type": "debug",
        "z": "8bf0017.3caeb",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 999,
        "y": 319,
        "wires": []
    },
    {
        "id": "6bbe54c9.ae393c",
        "type": "inject",
        "z": "8bf0017.3caeb",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 321,
        "y": 451,
        "wires": [
            [
                "40edf7b5.8d5b08"
            ]
        ]
    },
    {
        "id": "40edf7b5.8d5b08",
        "type": "change",
        "z": "8bf0017.3caeb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 544,
        "y": 451,
        "wires": [
            [
                "5689a476.e9b62c"
            ]
        ]
    },
    {
        "id": "a58b835d.9ab1e",
        "type": "inject",
        "z": "8bf0017.3caeb",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 306,
        "y": 513,
        "wires": [
            [
                "25974b7d.122114"
            ]
        ]
    },
    {
        "id": "25974b7d.122114",
        "type": "change",
        "z": "8bf0017.3caeb",
        "name": "Bypass set to true",
        "rules": [
            {
                "t": "set",
                "p": "bypass",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 539,
        "y": 513,
        "wires": [
            [
                "5689a476.e9b62c"
            ]
        ]
    },
    {
        "id": "b1332a96.7bced8",
        "type": "inject",
        "z": "8bf0017.3caeb",
        "name": "",
        "topic": "",
        "payload": "test",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 376,
        "y": 241,
        "wires": [
            [
                "be8348ce.33ac78"
            ]
        ]
    },
    {
        "id": "be8348ce.33ac78",
        "type": "change",
        "z": "8bf0017.3caeb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ttl",
                "pt": "msg",
                "to": "2000",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 531,
        "y": 244,
        "wires": [
            [
                "5689a476.e9b62c"
            ]
        ]
    },
    {
        "id": "5689a476.e9b62c",
        "type": "simple-queue",
        "z": "8bf0017.3caeb",
        "name": "queue1",
        "firstMessageBypass": true,
        "bypassInterval": "0",
        "x": 753,
        "y": 317,
        "wires": [
            [
                "afa8fe0.c974e"
            ]
        ]
    },
    {
        "id": "ed28d633.876728",
        "type": "inject",
        "z": "8bf0017.3caeb",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 308,
        "y": 567,
        "wires": [
            [
                "40621f59.959ca"
            ]
        ]
    },
    {
        "id": "40621f59.959ca",
        "type": "change",
        "z": "8bf0017.3caeb",
        "name": "Bypass set to false",
        "rules": [
            {
                "t": "set",
                "p": "bypass",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 541,
        "y": 567,
        "wires": [
            [
                "5689a476.e9b62c"
            ]
        ]
    },
    {
        "id": "729503c0.2c24fc",
        "type": "function",
        "z": "d85e9c9b.15b92",
        "name": "ProcessInputs: BUS BOD0026",
        "func": "if (msg.BNIPort === (parseInt(global.get('BOD0020'),16)) && msg.command === 10) {\n    msg.payload = msg.response.substr(15,5);\n} else {\n    return;\n    \n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 220,
        "wires": [
            [
                "7e83d56b.9372cc",
                "6e2705f0.da679c"
            ]
        ]
    },
    {
        "id": "7e83d56b.9372cc",
        "type": "function",
        "z": "d85e9c9b.15b92",
        "name": "BUS Convert to Decimal",
        "func": "msg.hexValue = msg.payload;\n\nmsg.payload = parseInt(msg.hexValue.split(' ').join(''),16)/10;\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 220,
        "wires": [
            [
                "56448564.5a4e3c",
                "dec154bb.c994d8",
                "d0073106.b4895"
            ]
        ]
    },
    {
        "id": "56448564.5a4e3c",
        "type": "ui_chart",
        "z": "d85e9c9b.15b92",
        "name": "BOD0026 Chart",
        "group": "80b83639.697f88",
        "order": 3,
        "width": "0",
        "height": "0",
        "label": "BOD0020",
        "chartType": "line",
        "legend": "false",
        "xformat": "ss",
        "interpolate": "linear",
        "nodata": "No Data Yet :-)",
        "dot": false,
        "ymin": "0",
        "ymax": "655",
        "removeOlder": "30",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#0000ff",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 2,
        "x": 840,
        "y": 220,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "485dc6de.ae6718",
        "type": "comment",
        "z": "d85e9c9b.15b92",
        "name": "Process Data",
        "info": "",
        "x": 210,
        "y": 140,
        "wires": []
    },
    {
        "id": "cb54ff6.8433b",
        "type": "link in",
        "z": "d85e9c9b.15b92",
        "name": "Process Data Handler",
        "links": [
            "29fdf072.54f6"
        ],
        "x": 155,
        "y": 220,
        "wires": [
            [
                "729503c0.2c24fc"
            ]
        ]
    },
    {
        "id": "6e2705f0.da679c",
        "type": "debug",
        "z": "d85e9c9b.15b92",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 520,
        "y": 280,
        "wires": []
    },
    {
        "id": "dec154bb.c994d8",
        "type": "debug",
        "z": "d85e9c9b.15b92",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 810,
        "y": 280,
        "wires": []
    },
    {
        "id": "62c50fe7.fc5a2",
        "type": "function",
        "z": "f82b1c74.5c04a",
        "name": "ProcessInputs: bsp DS235",
        "func": "if (msg.BNIPort === (parseInt(global.get('DS235'),16)) && msg.command === 10) {\n    msg.payload = msg.response.substr(15,5);\n} else {\n    return;\n    \n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 340,
        "wires": [
            [
                "5b156e5f.bbc2b",
                "a7204ee7.93909"
            ]
        ]
    },
    {
        "id": "5b156e5f.bbc2b",
        "type": "function",
        "z": "f82b1c74.5c04a",
        "name": "BUS Convert to Decimal",
        "func": "msg.hexValue = msg.payload;\n\nif (msg.hexValue.substr(0,2) === \"ff\"){\n    //cut first two, binarize second pair, parse int\n    msg.test = \n    msg.payload = ((parseInt((parseInt(msg.hexValue.substr(3,2),16).toString(2)).slice(0,-2),2)/100)-0.63).toFixed(2);\n}else if (msg.hexValue === \"00 00\"){\n    msg.payload = 0;\n}else {\n    msg.payload = parseInt((parseInt(msg.hexValue.split(' ').join(''),16).toString(2)).slice(0,-2),2)/100;\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 790,
        "y": 340,
        "wires": [
            [
                "cc56ff2f.c6f4",
                "9ec73ceb.cb0ac",
                "e0f8e50e.6a8918"
            ]
        ]
    },
    {
        "id": "d36aa46c.58ba38",
        "type": "comment",
        "z": "f82b1c74.5c04a",
        "name": "Process Data",
        "info": "",
        "x": 370,
        "y": 260,
        "wires": []
    },
    {
        "id": "c9262b18.2dff18",
        "type": "link in",
        "z": "f82b1c74.5c04a",
        "name": "Process Data Handler",
        "links": [
            "29fdf072.54f6"
        ],
        "x": 315,
        "y": 340,
        "wires": [
            [
                "62c50fe7.fc5a2"
            ]
        ]
    },
    {
        "id": "bf774f4d.2c856",
        "type": "comment",
        "z": "f82b1c74.5c04a",
        "name": "Service Data 10s Cycle",
        "info": "",
        "x": 380,
        "y": 480,
        "wires": []
    },
    {
        "id": "71c7280c.b43ce8",
        "type": "comment",
        "z": "f82b1c74.5c04a",
        "name": "Write Service data",
        "info": "",
        "x": 370,
        "y": 540,
        "wires": []
    },
    {
        "id": "875a479e.7da1b8",
        "type": "comment",
        "z": "f82b1c74.5c04a",
        "name": "Write Process Data ",
        "info": "",
        "x": 370,
        "y": 600,
        "wires": []
    },
    {
        "id": "a7204ee7.93909",
        "type": "debug",
        "z": "f82b1c74.5c04a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 680,
        "y": 400,
        "wires": []
    },
    {
        "id": "cc56ff2f.c6f4",
        "type": "debug",
        "z": "f82b1c74.5c04a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 970,
        "y": 400,
        "wires": []
    },
    {
        "id": "9ec73ceb.cb0ac",
        "type": "ui_gauge",
        "z": "f82b1c74.5c04a",
        "name": "",
        "group": "94cf6fe8.94f07",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "DS235",
        "label": "Bar",
        "format": "{{value}}",
        "min": "-1",
        "max": 10,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1040,
        "y": 340,
        "wires": []
    },
    {
        "id": "9b301a6c.863d98",
        "type": "function",
        "z": "f2cf66f1.8deb18",
        "name": "ProcessInputs: BNI00E0",
        "func": "if (msg.BNIPort === (parseInt(global.get('BNI00E0'),16)) && msg.command === 10) {\n    msg.payload = msg.response.substr(15,5);\n} else {\n    return;\n    \n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 700,
        "wires": [
            [
                "91bb7ee.150a48",
                "b7e2440a.b40948"
            ]
        ]
    },
    {
        "id": "91bb7ee.150a48",
        "type": "function",
        "z": "f2cf66f1.8deb18",
        "name": "BNI00E0 convert value",
        "func": "msg.hexValue = msg.payload;\n\nif (msg.payload.substr(1,1) === \"0\") {\n    msg.payload = \"nothing detected\";\n    msg.db = 0;\n    \n}else if(msg.payload.substr(1,1)===\"1\"){\n    msg.payload = \"pick detected\";\n    msg.db = 1;\n}\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 700,
        "wires": [
            [
                "59001eb2.b3255",
                "a3e0a36a.be2d3",
                "a045a1c5.9e759"
            ]
        ]
    },
    {
        "id": "bc26935b.20661",
        "type": "link in",
        "z": "f2cf66f1.8deb18",
        "name": "Process Data Handler",
        "links": [
            "29fdf072.54f6"
        ],
        "x": 215,
        "y": 700,
        "wires": [
            [
                "9b301a6c.863d98"
            ]
        ]
    },
    {
        "id": "b7e2440a.b40948",
        "type": "debug",
        "z": "f2cf66f1.8deb18",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 620,
        "y": 760,
        "wires": []
    },
    {
        "id": "59001eb2.b3255",
        "type": "debug",
        "z": "f2cf66f1.8deb18",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 910,
        "y": 760,
        "wires": []
    },
    {
        "id": "b4918a1f.e5eac8",
        "type": "comment",
        "z": "f2cf66f1.8deb18",
        "name": "Process Data",
        "info": "",
        "x": 190,
        "y": 640,
        "wires": []
    },
    {
        "id": "a3e0a36a.be2d3",
        "type": "ui_text",
        "z": "f2cf66f1.8deb18",
        "group": "c613f189.13fdb",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Sensor Detection",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1020,
        "y": 700,
        "wires": []
    },
    {
        "id": "7fd02ad7.557254",
        "type": "inject",
        "z": "f2cf66f1.8deb18",
        "name": "TS-10sec",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 130,
        "y": 940,
        "wires": [
            [
                "11ae219f.c84d8e"
            ]
        ]
    },
    {
        "id": "11ae219f.c84d8e",
        "type": "switch",
        "z": "f2cf66f1.8deb18",
        "name": "check if Sensors are set?",
        "property": "SensorsAreSet",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 940,
        "wires": [
            [
                "f3216ccb.ea7a2"
            ],
            [
                "d2e25188.c86ab"
            ]
        ]
    },
    {
        "id": "d2e25188.c86ab",
        "type": "change",
        "z": "f2cf66f1.8deb18",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Sensors Not Set",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 980,
        "wires": [
            [
                "dba8cccc.384aa"
            ]
        ]
    },
    {
        "id": "dba8cccc.384aa",
        "type": "debug",
        "z": "f2cf66f1.8deb18",
        "name": "sensors not set BOS026R",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 830,
        "y": 980,
        "wires": []
    },
    {
        "id": "f3216ccb.ea7a2",
        "type": "function",
        "z": "f2cf66f1.8deb18",
        "name": "AL_ReadReq Access Gain BNI00E0",
        "func": "msg.Start = '08 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '02'; // Kommando\nmsg.IOLPort = global.get('BNI00E0'); //Port Nummer\nmsg.LowIndex = '42'; //IO-Link Index \nmsg.HighIndex = '00'; //IO-Link Index (meiﬂtens 00)\nmsg.SubIndex = '00'; //IO-Link SubIndex \n\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 940,
        "wires": [
            [
                "c1159410.cf14e8"
            ]
        ]
    },
    {
        "id": "519d2b9a.6d70c4",
        "type": "function",
        "z": "f2cf66f1.8deb18",
        "name": "Set Payload to Buffer",
        "func": "if (msg.hex.includes(undefined) === false){\n    var string = msg.hex.replace(/\\s/g,'');\n    msg.ip = global.get('host');\n    msg.port = '1999';\n    msg.payload = Buffer.from(string,\"hex\");\n} else {\n    msg.payload = \"not Present\"\n}\n\nreturn msg;\n\n//msg.payload = Buffer.from(msg.payload, \"hex\");\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1280,
        "y": 1000,
        "wires": [
            [
                "15fe0593.b21d9a"
            ]
        ]
    },
    {
        "id": "15fe0593.b21d9a",
        "type": "switch",
        "z": "f2cf66f1.8deb18",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "not Present",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1470,
        "y": 1000,
        "wires": [
            [
                "965423c9.542d2"
            ],
            [
                "59eb44bb.51613c"
            ]
        ]
    },
    {
        "id": "965423c9.542d2",
        "type": "link out",
        "z": "f2cf66f1.8deb18",
        "name": "1s Service Data sender",
        "links": [
            "d3db8e06.f0851"
        ],
        "x": 1615,
        "y": 980,
        "wires": []
    },
    {
        "id": "59eb44bb.51613c",
        "type": "debug",
        "z": "f2cf66f1.8deb18",
        "name": "BNI00E0 not Present",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1700,
        "y": 1020,
        "wires": []
    },
    {
        "id": "9cc671d0.1c56e",
        "type": "link in",
        "z": "f2cf66f1.8deb18",
        "name": "1s Service Data return",
        "links": [
            "29fdf072.54f6"
        ],
        "x": 255,
        "y": 1140,
        "wires": [
            [
                "32aa3c16.68df14",
                "e38c6833.fb4618"
            ]
        ]
    },
    {
        "id": "32aa3c16.68df14",
        "type": "function",
        "z": "f2cf66f1.8deb18",
        "name": "BNI00E0 access Gain",
        "func": "if (msg.BNIPort === parseInt(global.get('BNI00E0'),16) && msg.command === 9 && msg.LowIndex ===\"42\" && msg.SubIndex === \"00\") {\n    msg.payload = msg.response.substr(18,2);\n} else {return;\n    \n}\n\nreturn msg;\n//{ payload:msg.payload.substr(15,8) };",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 1080,
        "wires": [
            [
                "1cd1cee6.3ddf21",
                "615a8bb3.5ee394"
            ]
        ]
    },
    {
        "id": "1cd1cee6.3ddf21",
        "type": "function",
        "z": "f2cf66f1.8deb18",
        "name": "Calc Gain",
        "func": "msg.payload = parseInt(msg.payload ,16);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 780,
        "y": 1080,
        "wires": [
            [
                "ff31ce27.dfc8c",
                "31ac0953.ede6d6"
            ]
        ]
    },
    {
        "id": "ff31ce27.dfc8c",
        "type": "ui_chart",
        "z": "f2cf66f1.8deb18",
        "name": "",
        "group": "b05782d0.a3348",
        "order": 1,
        "width": "12",
        "height": "7",
        "label": "Access Gain",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "150",
        "removeOlder": "20",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 2,
        "x": 950,
        "y": 1100,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "5444db23.628524",
        "type": "comment",
        "z": "f2cf66f1.8deb18",
        "name": "Service Data 10s Cycle",
        "info": "",
        "x": 220,
        "y": 860,
        "wires": []
    },
    {
        "id": "1eedcd91.3a8b02",
        "type": "function",
        "z": "f2cf66f1.8deb18",
        "name": "AL_ReadReq device temp BNI00E0",
        "func": "msg.Start = '08 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '02'; // Kommando\nmsg.IOLPort = global.get('BNI00E0'); //Port Nummer\nmsg.LowIndex = '52'; //IO-Link Index \nmsg.HighIndex = '00'; //IO-Link Index (meiﬂtens 00)\nmsg.SubIndex = '00'; //IO-Link SubIndex \n\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 1020,
        "wires": [
            [
                "519d2b9a.6d70c4"
            ]
        ]
    },
    {
        "id": "e38c6833.fb4618",
        "type": "function",
        "z": "f2cf66f1.8deb18",
        "name": "BNI00E0 Device temp",
        "func": "if (msg.BNIPort === parseInt(global.get('BNI00E0'),16) && msg.command === 9 && msg.LowIndex ===\"52\" && msg.SubIndex === \"00\") {\n    msg.payload = msg.response.substr(18,15);\n} else {return;\n    \n}\n\nreturn msg;\n//{ payload:msg.payload.substr(15,8) };",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 1200,
        "wires": [
            [
                "8a9aa140.4245c",
                "bcbb3a9.dcdfdc8"
            ]
        ]
    },
    {
        "id": "cfdbe850.41b0c8",
        "type": "ui_chart",
        "z": "f2cf66f1.8deb18",
        "name": "",
        "group": "b05782d0.a3348",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "Device Temperature",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-10",
        "ymax": "80",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 2,
        "x": 1280,
        "y": 1260,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "8a9aa140.4245c",
        "type": "debug",
        "z": "f2cf66f1.8deb18",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 650,
        "y": 1260,
        "wires": []
    },
    {
        "id": "bcbb3a9.dcdfdc8",
        "type": "function",
        "z": "f2cf66f1.8deb18",
        "name": "Transform",
        "func": "msg.internal_temp_actual = parseInt(msg.payload.substr(0,2),16);\nmsg.internal_temp_max_startup = parseInt(msg.payload.substr(3,2),16);\nmsg.internal_temp_min_startup = parseInt(msg.payload.substr(6,2),16);\nmsg.internal_temp_max_lifetime = parseInt(msg.payload.substr(9,2),16);\nmsg.internal_temp_min_lifetime = parseInt(msg.payload.substr(12,2),16)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 1200,
        "wires": [
            [
                "186c811f.825fef",
                "cbe9a03.e0a506",
                "1ba47e5.6f00182",
                "bd27be5.fcbad4",
                "d4b05c8f.90a4f"
            ]
        ]
    },
    {
        "id": "186c811f.825fef",
        "type": "function",
        "z": "f2cf66f1.8deb18",
        "name": "internal_temp_actual",
        "func": "msg.payload = msg.internal_temp_actual;\nmsg.topic = \"internal_temp_actual\";\n//msg.label = \"internal_temp_actual\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 900,
        "y": 1200,
        "wires": [
            [
                "cfdbe850.41b0c8",
                "d0973de1.cd3f1",
                "eb070291.c8876"
            ]
        ]
    },
    {
        "id": "cbe9a03.e0a506",
        "type": "function",
        "z": "f2cf66f1.8deb18",
        "name": "internal_temp_max_startup",
        "func": "msg.payload = msg.internal_temp_max_startup;\nmsg.topic = \"internal_temp_max_startup\";\n//msg.label = \"internal_temp_max_startup\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 1240,
        "wires": [
            [
                "fb3e3687.51c1e8",
                "cfdbe850.41b0c8"
            ]
        ]
    },
    {
        "id": "1ba47e5.6f00182",
        "type": "function",
        "z": "f2cf66f1.8deb18",
        "name": "internal_temp_min_startup",
        "func": "msg.payload = msg.internal_temp_min_startup;\nmsg.topic = \"internal_temp_min_startup\";\n//msg.label = \"internal_temp_min_startup\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 1280,
        "wires": [
            [
                "ce70c575.e75da8",
                "cfdbe850.41b0c8"
            ]
        ]
    },
    {
        "id": "bd27be5.fcbad4",
        "type": "function",
        "z": "f2cf66f1.8deb18",
        "name": "internal_temp_max_lifetime",
        "func": "msg.payload = msg.internal_temp_max_lifetime;\nmsg.topic = \"internal_temp_max_lifetime\";\n//msg.label = \"internal_temp_max_lifetime\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 1320,
        "wires": [
            [
                "cfdbe850.41b0c8",
                "c200db1f.0cbe58"
            ]
        ]
    },
    {
        "id": "d4b05c8f.90a4f",
        "type": "function",
        "z": "f2cf66f1.8deb18",
        "name": "internal_temp_min_lifetime",
        "func": "msg.payload = msg.internal_temp_min_lifetime;\nmsg.topic = \"internal_temp_min_lifetime\";\n//msg.label = \"internal_temp_min_lifetime\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 1360,
        "wires": [
            [
                "cfdbe850.41b0c8",
                "ec0a7b12.455e68"
            ]
        ]
    },
    {
        "id": "4ce7c0f6.e9b1e",
        "type": "inject",
        "z": "6539041e.99e41c",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 450,
        "y": 300,
        "wires": [
            [
                "4b7e7b64.604374"
            ]
        ]
    },
    {
        "id": "4b7e7b64.604374",
        "type": "change",
        "z": "6539041e.99e41c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 663,
        "y": 300,
        "wires": [
            [
                "71b6555a.7711cc"
            ]
        ]
    },
    {
        "id": "e750bb55.b05178",
        "type": "influxdb out",
        "z": "114f7bfe.eab0d4",
        "influxdb": "91206e30.71aad8",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "x": 480,
        "y": 320,
        "wires": []
    },
    {
        "id": "355066e9.dab40a",
        "type": "influxdb batch",
        "z": "114f7bfe.eab0d4",
        "influxdb": "91206e30.71aad8",
        "precision": "",
        "retentionPolicy": "",
        "name": "",
        "x": 480,
        "y": 200,
        "wires": []
    },
    {
        "id": "2a37f0bc.a0ae3",
        "type": "influxdb in",
        "z": "114f7bfe.eab0d4",
        "influxdb": "91206e30.71aad8",
        "name": "",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "x": 640,
        "y": 140,
        "wires": [
            [
                "3030a8da.6f6d08"
            ]
        ]
    },
    {
        "id": "9378973b.4dfbd8",
        "type": "inject",
        "z": "114f7bfe.eab0d4",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 320,
        "wires": [
            [
                "8d1f1446.266cd8"
            ]
        ]
    },
    {
        "id": "8d1f1446.266cd8",
        "type": "function",
        "z": "114f7bfe.eab0d4",
        "name": "",
        "func": "msg.measurement = \"testPayload\";\nmsg.payload = [\n    {\n        numValue: 12,\n        randomValue: Math.random()*10,\n        strValue: \"42.3\"\n        },\n    {\n    tag1:\"sensor1\",\n    tag2:\"device2\",\n    tag3:\"testdevice\"\n        }\n    ];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 270,
        "y": 320,
        "wires": [
            [
                "e750bb55.b05178"
            ]
        ]
    },
    {
        "id": "4f480dc4.aa03f4",
        "type": "inject",
        "z": "114f7bfe.eab0d4",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 80,
        "wires": [
            [
                "af2a2f23.83762"
            ]
        ]
    },
    {
        "id": "3030a8da.6f6d08",
        "type": "debug",
        "z": "114f7bfe.eab0d4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 810,
        "y": 140,
        "wires": []
    },
    {
        "id": "af2a2f23.83762",
        "type": "function",
        "z": "114f7bfe.eab0d4",
        "name": "msg.query = \"select * from testPayload\";",
        "func": "msg.query = \"select * from testPayload\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 400,
        "y": 100,
        "wires": [
            [
                "2a37f0bc.a0ae3"
            ]
        ]
    },
    {
        "id": "798b7c13.579a24",
        "type": "change",
        "z": "6539041e.99e41c",
        "name": "set bypass on",
        "rules": [
            {
                "t": "set",
                "p": "bypass",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 260,
        "wires": [
            [
                "71b6555a.7711cc"
            ]
        ]
    },
    {
        "id": "639fc4f6.f954fc",
        "type": "inject",
        "z": "6539041e.99e41c",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 440,
        "y": 260,
        "wires": [
            [
                "798b7c13.579a24"
            ]
        ]
    },
    {
        "id": "cfe06a6a.a814e8",
        "type": "debug",
        "z": "67804b5a.aa2f64",
        "name": "Check if flow has succedded",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1300,
        "y": 1560,
        "wires": []
    },
    {
        "id": "b89e7f7c.734bf",
        "type": "function",
        "z": "8bf0017.3caeb",
        "name": "",
        "func": "var count = context.get('count')||0;\ncount += 1;\n// store the value back\ncontext.set('count',count);\n// make it part of the outgoing msg object\nmsg.count = count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 300,
        "wires": [
            [
                "5689a476.e9b62c"
            ]
        ]
    },
    {
        "id": "dab8a4c.e9dc658",
        "type": "inject",
        "z": "8bf0017.3caeb",
        "name": "",
        "topic": "",
        "payload": "test",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 390,
        "y": 180,
        "wires": [
            [
                "b33094be.7dbb98"
            ]
        ]
    },
    {
        "id": "b33094be.7dbb98",
        "type": "change",
        "z": "8bf0017.3caeb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "trigger",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 555,
        "y": 183,
        "wires": [
            [
                "5689a476.e9b62c"
            ]
        ]
    },
    {
        "id": "71b6555a.7711cc",
        "type": "simple-queue",
        "z": "6539041e.99e41c",
        "name": "queue1",
        "firstMessageBypass": true,
        "bypassInterval": "0",
        "x": 360,
        "y": 440,
        "wires": [
            [
                "af266bce.cd8c88",
                "545d6ff2.4dd46"
            ]
        ]
    },
    {
        "id": "4ff3f4d8.3e42ec",
        "type": "debug",
        "z": "67804b5a.aa2f64",
        "name": "Check if flow has succedded",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1280,
        "y": 860,
        "wires": []
    },
    {
        "id": "fe69f642.128218",
        "type": "debug",
        "z": "67804b5a.aa2f64",
        "name": "Check if flow has succedded",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1160,
        "y": 700,
        "wires": []
    },
    {
        "id": "c311bfb4.ca9b6",
        "type": "inject",
        "z": "e393e3b.e73752",
        "name": "TS-30sec",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "30",
        "crontab": "",
        "once": false,
        "onceDelay": "3",
        "x": 250,
        "y": 200,
        "wires": [
            [
                "21a63d90.496712"
            ]
        ]
    },
    {
        "id": "6ae627c.2cadcd8",
        "type": "change",
        "z": "e393e3b.e73752",
        "name": "read config",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "host",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 180,
        "wires": [
            [
                "68a4c5c3.ab2ccc"
            ]
        ]
    },
    {
        "id": "68a4c5c3.ab2ccc",
        "type": "http request",
        "z": "e393e3b.e73752",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "url": "http://{{host}}/index.jsn",
        "tls": "",
        "x": 850,
        "y": 180,
        "wires": [
            [
                "eb840413.def9d8"
            ]
        ]
    },
    {
        "id": "db39956.fab7f68",
        "type": "debug",
        "z": "e393e3b.e73752",
        "name": "Dprop Ports sensors Object ",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1360,
        "y": 180,
        "wires": []
    },
    {
        "id": "2f1cb46.e9e134c",
        "type": "inject",
        "z": "e393e3b.e73752",
        "name": "TS-31sec",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "31",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "x": 230,
        "y": 360,
        "wires": [
            [
                "2abb4915.877086"
            ]
        ]
    },
    {
        "id": "eb840413.def9d8",
        "type": "function",
        "z": "e393e3b.e73752",
        "name": "check Port Status",
        "func": "msg.p00Status = msg.payload[0].p00Status;\nmsg.p02Status = msg.payload[0].p02Status;\nmsg.p04Status = msg.payload[0].p04Status;\nmsg.p06Status = msg.payload[0].p06Status;\nmsg.p08Status = msg.payload[0].p08Status;\nmsg.p10Status = msg.payload[0].p10Status;\nmsg.p12Status = msg.payload[0].p12Status;\nmsg.p14Status = msg.payload[0].p14Status;\n\nif(msg.p00Status === \"87FF\" && msg.p02Status === \"87FF\" && msg.p04Status === \"87FF\" && msg.p06Status === \"87FF\" && msg.p08Status === \"87FF\" && msg.p10Status === \"87FF\" && msg.p12Status === \"87FF\" && msg.p14Status === \"87FF\"){\n    msg.portStatus = \"OK\";\n}else{\n    msg.portStatus = \"NOK\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1090,
        "y": 180,
        "wires": [
            [
                "db39956.fab7f68",
                "76ace47b.686c8c"
            ]
        ]
    },
    {
        "id": "21a63d90.496712",
        "type": "switch",
        "z": "e393e3b.e73752",
        "name": "check if config is set",
        "property": "configIsSet",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 460,
        "y": 200,
        "wires": [
            [
                "6ae627c.2cadcd8"
            ],
            []
        ]
    },
    {
        "id": "76ace47b.686c8c",
        "type": "change",
        "z": "e393e3b.e73752",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "portStatus",
                "pt": "flow",
                "to": "portStatus",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "b05bfb3f.c34e18",
        "type": "switch",
        "z": "e393e3b.e73752",
        "name": "check if PortStatus is set",
        "property": "portStatus",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "NOK",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 970,
        "y": 340,
        "wires": [
            [
                "85bef761.fa0a78",
                "36f1127.39c83ee"
            ],
            [
                "c3342a28.a5c4b8"
            ]
        ]
    },
    {
        "id": "c3342a28.a5c4b8",
        "type": "change",
        "z": "e393e3b.e73752",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "PortsalreadySet",
                "pt": "msg",
                "to": "already set",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 380,
        "wires": [
            [
                "9ca68ad5.3cafe8",
                "36f1127.39c83ee"
            ]
        ]
    },
    {
        "id": "9ca68ad5.3cafe8",
        "type": "debug",
        "z": "e393e3b.e73752",
        "name": "Ports already set",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "PortsalreadySet",
        "x": 1450,
        "y": 380,
        "wires": []
    },
    {
        "id": "ef4641d2.0a437",
        "type": "debug",
        "z": "e393e3b.e73752",
        "name": "Config Not Set",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1640,
        "y": 340,
        "wires": []
    },
    {
        "id": "545d6ff2.4dd46",
        "type": "change",
        "z": "6539041e.99e41c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "LowIndex",
                "pt": "global",
                "to": "LowIndex",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "SubIndex",
                "pt": "global",
                "to": "SubIndex",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 440,
        "wires": [
            [
                "60f12d31.2d4414"
            ]
        ]
    },
    {
        "id": "874cecc8.1ad2",
        "type": "function",
        "z": "5bca5d42.a45cb4",
        "name": "WriteProcessDataReq",
        "func": "//msg.Start = '05 00';//5 + Length of Data, 00\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '0B'; // In Hex\nmsg.IOLPort = global.get('BNI0088'); // In Hex\nmsg.LengthOfData = '08'; //in count of Hex Bytes\nmsg.Data = \"43 07 00 02 00 dc ff 00\"; //port data in HEX\nmsg.PL = msg.payload; //Payload of inject\n\n\nif ((5+parseInt(msg.LengthOfData)) <15) {\n    msg.Start = \"0\"+ (5+parseInt(msg.LengthOfData)).toString(16) + \" 00\";\n} else { \n    msg.Start = (5+parseInt(msg.LengthOfData)).toString(16)+ \" 00\";\n}\n\n/*if ((msg.payload) <16) {\n    msg.Data = \"00 0\"+ (msg.payload.toString(16));\n} else if (msg.payload >=16 && msg.payload < 256){\n    msg.Data = \"00 \" + (msg.payload.toString(16));\n} else if (msg.payload >=256 && msg.payload < 4096){\n    msg.Data = \"0\" + (msg.payload.toString(16));\n} else { \n    msg.Data = (msg.payload.toString(16));\n}*/\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.Data;\n\nreturn msg;\n\n//0D 00 02 0B 04 00 00 00 04 00 00 01 00 OFF\n//0D 00 02 0B 04 43 07 00 02 00 dc ff 00 Level Mode\n//0D 00 02 0B 04 45 00 00 04 00 00 01 00 Runlight\n",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 520,
        "wires": [
            [
                "8a32df53.428ee"
            ]
        ]
    },
    {
        "id": "fee9de6c.a582",
        "type": "function",
        "z": "5bca5d42.a45cb4",
        "name": "WriteProcessDataReq",
        "func": "//msg.Start = '05 00';//5 + Length of Data, 00\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '0B'; // In Hex\nmsg.IOLPort = global.get('BNI0088'); // In Hex\nmsg.LengthOfData = '08'; //in count of Hex Bytes\nmsg.Data = \"24 00 00 04 00 00 01 00\"; //port data in HEX\nmsg.PL = msg.payload; //Payload of inject\n\n\nif ((5+parseInt(msg.LengthOfData)) <15) {\n    msg.Start = \"0\"+ (5+parseInt(msg.LengthOfData)).toString(16) + \" 00\";\n} else { \n    msg.Start = (5+parseInt(msg.LengthOfData)).toString(16)+ \" 00\";\n}\n\n/*if ((msg.payload) <16) {\n    msg.Data = \"00 0\"+ (msg.payload.toString(16));\n} else if (msg.payload >=16 && msg.payload < 256){\n    msg.Data = \"00 \" + (msg.payload.toString(16));\n} else if (msg.payload >=256 && msg.payload < 4096){\n    msg.Data = \"0\" + (msg.payload.toString(16));\n} else { \n    msg.Data = (msg.payload.toString(16));\n}*/\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.Data;\n\nreturn msg;\n\n//0D 00 02 0B 04 00 00 00 04 00 00 01 00 OFF\n//0D 00 02 0B 04 43 07 00 02 00 dc ff 00 Level Mode\n//0D 00 02 0B 04 45 00 00 04 00 00 01 00 Runlight\n",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 340,
        "wires": [
            [
                "8a32df53.428ee"
            ]
        ]
    },
    {
        "id": "6691f433.01ac7c",
        "type": "function",
        "z": "6381dee2.b8bb4",
        "name": "Create BD In Object",
        "func": "msg.measurement = \"BAW004M\";\nmsg.payload = [\n    {\n        internal_temp_actual: msg.payload,\n        }\n    ];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 580,
        "wires": [
            [
                "b429220.9757de"
            ]
        ]
    },
    {
        "id": "b429220.9757de",
        "type": "influxdb out",
        "z": "6381dee2.b8bb4",
        "influxdb": "c6421bfe.84a3a8",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "x": 1490,
        "y": 580,
        "wires": []
    },
    {
        "id": "d0973de1.cd3f1",
        "type": "function",
        "z": "f2cf66f1.8deb18",
        "name": "Create BD In Object",
        "func": "msg.measurement = \"BNI00E0\";\nmsg.payload = [\n    {\n        internal_temp_actual: msg.payload,\n        }\n    ];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1200,
        "y": 1160,
        "wires": [
            [
                "2aa2ba3b.e51566"
            ]
        ]
    },
    {
        "id": "2aa2ba3b.e51566",
        "type": "influxdb out",
        "z": "f2cf66f1.8deb18",
        "influxdb": "c6421bfe.84a3a8",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "x": 1430,
        "y": 1160,
        "wires": []
    },
    {
        "id": "beaef2bf.4dda6",
        "type": "function",
        "z": "1e08cca7.730233",
        "name": "ProcessInputs:BCS012N",
        "func": "if (msg.BNIPort === (parseInt(global.get('BCS012N'),16)) && msg.command === 10) {\n    msg.payload = msg.response.substr(15,5);\n} else {\n    return;\n    \n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 260,
        "wires": [
            [
                "6080bfb5.71b15",
                "c1f4e7c0.732f38"
            ]
        ]
    },
    {
        "id": "6080bfb5.71b15",
        "type": "function",
        "z": "1e08cca7.730233",
        "name": "BCS Convert to Decimal",
        "func": "msg.hexValue = msg.payload;\n\nmsg.payload = parseInt((parseInt(msg.hexValue.split(' ').join(''),16).toString(2)).slice(0,-4),2);\n\n\n/*\nif (msg.hexValue.substr(0,2) === \"ff\"){\n    //cut first two, binarize second pair, parse int\n    msg.payload = ((parseInt((parseInt(msg.hexValue.substr(3,2),16).toString(2)).slice(0,-2),2)/100)-0.63).toFixed(2);\n}else if (msg.hexValue === \"00 00\"){\n    msg.payload = 0;\n}else {\n    msg.payload = parseInt((parseInt(msg.hexValue.split(' ').join(''),16).toString(2)).slice(0,-2),2)/100;\n}*/\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 260,
        "wires": [
            [
                "caf7bd90.adab8",
                "e43306b5.11ddf8",
                "de29ff2c.51715"
            ]
        ]
    },
    {
        "id": "4e5c0307.60a8cc",
        "type": "comment",
        "z": "1e08cca7.730233",
        "name": "Process Data",
        "info": "",
        "x": 310,
        "y": 180,
        "wires": []
    },
    {
        "id": "da4e99e1.447978",
        "type": "link in",
        "z": "1e08cca7.730233",
        "name": "Process Data Handler",
        "links": [
            "29fdf072.54f6"
        ],
        "x": 255,
        "y": 260,
        "wires": [
            [
                "beaef2bf.4dda6"
            ]
        ]
    },
    {
        "id": "99c16be7.236bf8",
        "type": "comment",
        "z": "1e08cca7.730233",
        "name": "Service Data 10s Cycle",
        "info": "",
        "x": 320,
        "y": 400,
        "wires": []
    },
    {
        "id": "cb36c7ec.3eb928",
        "type": "comment",
        "z": "1e08cca7.730233",
        "name": "Write Service data",
        "info": "",
        "x": 310,
        "y": 460,
        "wires": []
    },
    {
        "id": "b09a710a.9505c",
        "type": "comment",
        "z": "1e08cca7.730233",
        "name": "Write Process Data ",
        "info": "",
        "x": 310,
        "y": 520,
        "wires": []
    },
    {
        "id": "c1f4e7c0.732f38",
        "type": "debug",
        "z": "1e08cca7.730233",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 620,
        "y": 320,
        "wires": []
    },
    {
        "id": "caf7bd90.adab8",
        "type": "debug",
        "z": "1e08cca7.730233",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 910,
        "y": 320,
        "wires": []
    },
    {
        "id": "e43306b5.11ddf8",
        "type": "ui_chart",
        "z": "1e08cca7.730233",
        "name": "",
        "group": "44efe4f5.c287fc",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "BCS012N",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "4096",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 2,
        "x": 960,
        "y": 260,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "665306e5.d90438",
        "type": "function",
        "z": "6484b8ec.c50888",
        "name": "ProcessInputs:BES04FK",
        "func": "if (msg.BNIPort === (parseInt(global.get('BES04FK'),16)) && msg.command === 10) {\n    msg.payload = msg.response.substr(16,1);\n} else {\n    return;\n    \n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 320,
        "wires": [
            [
                "389252ad.42ecee",
                "f0f4f9f5.549058"
            ]
        ]
    },
    {
        "id": "389252ad.42ecee",
        "type": "function",
        "z": "6484b8ec.c50888",
        "name": "BES Convert to Decimal",
        "func": "msg.hexValue = msg.payload;\n\nif(msg.hexValue == \"1\"){\n    msg.payload = \"Target in reach\";\n}else if(msg.hexValue == \"4\"){\n    msg.payload = \"Target out of reach\"\n}else if(msg.hexValue ==\"3\"){\n    msg.payload = \"Target too close\"\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 320,
        "wires": [
            [
                "9440c5e1.2855f8",
                "d7561923.439298",
                "9d22e84b.336868"
            ]
        ]
    },
    {
        "id": "dd4e0613.c18e48",
        "type": "comment",
        "z": "6484b8ec.c50888",
        "name": "Process Data",
        "info": "",
        "x": 310,
        "y": 240,
        "wires": []
    },
    {
        "id": "df6c407f.08795",
        "type": "link in",
        "z": "6484b8ec.c50888",
        "name": "Process Data Handler",
        "links": [
            "29fdf072.54f6"
        ],
        "x": 255,
        "y": 320,
        "wires": [
            [
                "665306e5.d90438"
            ]
        ]
    },
    {
        "id": "3203149f.24cc3c",
        "type": "comment",
        "z": "6484b8ec.c50888",
        "name": "Service Data 10s Cycle",
        "info": "",
        "x": 320,
        "y": 460,
        "wires": []
    },
    {
        "id": "50130231.25dfbc",
        "type": "comment",
        "z": "6484b8ec.c50888",
        "name": "Write Service data",
        "info": "",
        "x": 290,
        "y": 760,
        "wires": []
    },
    {
        "id": "4cb95662.40d748",
        "type": "comment",
        "z": "6484b8ec.c50888",
        "name": "Write Process Data ",
        "info": "",
        "x": 290,
        "y": 820,
        "wires": []
    },
    {
        "id": "f0f4f9f5.549058",
        "type": "debug",
        "z": "6484b8ec.c50888",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 620,
        "y": 380,
        "wires": []
    },
    {
        "id": "9440c5e1.2855f8",
        "type": "debug",
        "z": "6484b8ec.c50888",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 910,
        "y": 380,
        "wires": []
    },
    {
        "id": "204dcda8.b48022",
        "type": "inject",
        "z": "6484b8ec.c50888",
        "name": "TS-2sec",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 340,
        "y": 520,
        "wires": [
            [
                "b3d15e28.8ebe6"
            ]
        ]
    },
    {
        "id": "b3d15e28.8ebe6",
        "type": "switch",
        "z": "6484b8ec.c50888",
        "name": "check if Sensors are set?",
        "property": "SensorsAreSet",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 540,
        "wires": [
            [
                "5c590ea9.85492"
            ],
            [
                "270a64b2.948d1c"
            ]
        ]
    },
    {
        "id": "5c590ea9.85492",
        "type": "function",
        "z": "6484b8ec.c50888",
        "name": "AL_ReadReq Analog Value BES04FK",
        "func": "msg.Start = '08 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '02'; // Kommando\nmsg.IOLPort = global.get('BES04FK'); //Port Nummer\nmsg.LowIndex = 'B2'; //IO-Link Index \nmsg.HighIndex = '00'; //IO-Link Index (meiﬂtens 00)\nmsg.SubIndex = '00'; //IO-Link SubIndex \n\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 910,
        "y": 520,
        "wires": [
            [
                "eaf53806.30a028"
            ]
        ]
    },
    {
        "id": "270a64b2.948d1c",
        "type": "change",
        "z": "6484b8ec.c50888",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Sensors Not Set",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 560,
        "wires": [
            [
                "169c1d71.467573"
            ]
        ]
    },
    {
        "id": "169c1d71.467573",
        "type": "debug",
        "z": "6484b8ec.c50888",
        "name": "sensors not set BOS026R",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1050,
        "y": 560,
        "wires": []
    },
    {
        "id": "eaf53806.30a028",
        "type": "function",
        "z": "6484b8ec.c50888",
        "name": "Set Payload to Buffer",
        "func": "if (msg.hex.includes(undefined) === false){\n    var string = msg.hex.replace(/\\s/g,'');\n    msg.ip = global.get('host');\n    msg.port = '1999';\n    msg.payload = Buffer.from(string,\"hex\");\n} else {\n    msg.payload = \"not Present\"\n}\n\nreturn msg;\n\n//msg.payload = Buffer.from(msg.payload, \"hex\");\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1400,
        "y": 520,
        "wires": [
            [
                "4c10b3f0.05496c"
            ]
        ]
    },
    {
        "id": "4c10b3f0.05496c",
        "type": "switch",
        "z": "6484b8ec.c50888",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "not Present",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1570,
        "y": 520,
        "wires": [
            [
                "53c16067.d7644"
            ],
            [
                "8644ad07.99bb1"
            ]
        ]
    },
    {
        "id": "53c16067.d7644",
        "type": "link out",
        "z": "6484b8ec.c50888",
        "name": "1s Service Data sender",
        "links": [
            "d3db8e06.f0851"
        ],
        "x": 1715,
        "y": 500,
        "wires": []
    },
    {
        "id": "8644ad07.99bb1",
        "type": "debug",
        "z": "6484b8ec.c50888",
        "name": "BOS026R not Present",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1800,
        "y": 540,
        "wires": []
    },
    {
        "id": "87fe7570.28ad68",
        "type": "link in",
        "z": "6484b8ec.c50888",
        "name": "1s Service Data return",
        "links": [
            "29fdf072.54f6"
        ],
        "x": 475,
        "y": 720,
        "wires": [
            [
                "42e0717e.01f09"
            ]
        ]
    },
    {
        "id": "42e0717e.01f09",
        "type": "function",
        "z": "6484b8ec.c50888",
        "name": "BNI00E0 access Gain",
        "func": "if (msg.BNIPort === parseInt(global.get('BES04FK'),16) && msg.command === 9 && msg.LowIndex ===\"B2\" && msg.SubIndex === \"00\") {\n    msg.payload = msg.response.substr(18,5);\n} else {return;\n    \n}\n\nreturn msg;\n//{ payload:msg.payload.substr(15,8) };",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 660,
        "wires": [
            [
                "e9ca7aa8.60fb48"
            ]
        ]
    },
    {
        "id": "e9ca7aa8.60fb48",
        "type": "function",
        "z": "6484b8ec.c50888",
        "name": "Calc Gain",
        "func": "msg.payload = parseInt(msg.payload.split(\" \").join(\"\"),16);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1000,
        "y": 660,
        "wires": [
            [
                "a34f4072.287ea",
                "e364ce0.bc8943",
                "18d90ecd.c14331"
            ]
        ]
    },
    {
        "id": "a34f4072.287ea",
        "type": "ui_chart",
        "z": "6484b8ec.c50888",
        "name": "",
        "group": "5241fa79.e92134",
        "order": 1,
        "width": "12",
        "height": "7",
        "label": "Analog Value",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "4096",
        "removeOlder": "20",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 2,
        "x": 1170,
        "y": 660,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "e364ce0.bc8943",
        "type": "debug",
        "z": "6484b8ec.c50888",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1130,
        "y": 700,
        "wires": []
    },
    {
        "id": "d7561923.439298",
        "type": "ui_text",
        "z": "6484b8ec.c50888",
        "group": "ddead2be.c5fed",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Switch State",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1020,
        "y": 320,
        "wires": []
    },
    {
        "id": "aa178dc4.7b792",
        "type": "function",
        "z": "2375ac28.7bf134",
        "name": "ProcessInputs: BUS BOD0026",
        "func": "if (msg.BNIPort === (parseInt(global.get('BOD0023'),16)) && msg.command === 10) {\n    msg.payload = msg.response.substr(15,5);\n} else {\n    return;\n    \n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 330,
        "y": 300,
        "wires": [
            [
                "f461f3c5.6bf5b",
                "c25ba27f.9e9c7"
            ]
        ]
    },
    {
        "id": "f461f3c5.6bf5b",
        "type": "function",
        "z": "2375ac28.7bf134",
        "name": "BUS Convert to Decimal",
        "func": "msg.hexValue = msg.payload;\n\nmsg.payload = parseInt(msg.hexValue.split(' ').join(''),16)/100;\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 300,
        "wires": [
            [
                "63faf5be.a8af9c",
                "7d6ccf12.43cd5",
                "2def2524.60cfca"
            ]
        ]
    },
    {
        "id": "63faf5be.a8af9c",
        "type": "ui_chart",
        "z": "2375ac28.7bf134",
        "name": "BOD0026 Chart",
        "group": "b54330e.904bcd",
        "order": 3,
        "width": "0",
        "height": "0",
        "label": "BOD0026",
        "chartType": "line",
        "legend": "false",
        "xformat": "ss",
        "interpolate": "linear",
        "nodata": "No Data Yet :-)",
        "dot": false,
        "ymin": "0",
        "ymax": "150",
        "removeOlder": "30",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#0000ff",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 2,
        "x": 820,
        "y": 300,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "cf8050bf.f187d",
        "type": "comment",
        "z": "2375ac28.7bf134",
        "name": "Process Data",
        "info": "",
        "x": 190,
        "y": 220,
        "wires": []
    },
    {
        "id": "eebe9534.99e908",
        "type": "link in",
        "z": "2375ac28.7bf134",
        "name": "Process Data Handler",
        "links": [
            "29fdf072.54f6"
        ],
        "x": 135,
        "y": 300,
        "wires": [
            [
                "aa178dc4.7b792"
            ]
        ]
    },
    {
        "id": "1308f810.f99168",
        "type": "comment",
        "z": "2375ac28.7bf134",
        "name": "Service Data 10s Cycle",
        "info": "",
        "x": 200,
        "y": 440,
        "wires": []
    },
    {
        "id": "27efd9fe.637646",
        "type": "comment",
        "z": "2375ac28.7bf134",
        "name": "Write Service data",
        "info": "",
        "x": 190,
        "y": 500,
        "wires": []
    },
    {
        "id": "af1cd9b6.70c2f8",
        "type": "comment",
        "z": "2375ac28.7bf134",
        "name": "Write Process Data ",
        "info": "",
        "x": 190,
        "y": 560,
        "wires": []
    },
    {
        "id": "c25ba27f.9e9c7",
        "type": "debug",
        "z": "2375ac28.7bf134",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 500,
        "y": 360,
        "wires": []
    },
    {
        "id": "7d6ccf12.43cd5",
        "type": "debug",
        "z": "2375ac28.7bf134",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 790,
        "y": 360,
        "wires": []
    },
    {
        "id": "37d9e4fb.53a5ac",
        "type": "debug",
        "z": "67804b5a.aa2f64",
        "name": "Check if flow has succedded",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 860,
        "y": 1080,
        "wires": []
    },
    {
        "id": "a0200150.8a36c",
        "type": "simple-queue",
        "z": "67804b5a.aa2f64",
        "name": "queue1",
        "firstMessageBypass": true,
        "bypassInterval": "1000",
        "x": 1120,
        "y": 1360,
        "wires": [
            [
                "539360d2.47c71"
            ]
        ]
    },
    {
        "id": "be9bfed0.b52d2",
        "type": "simple-queue",
        "z": "67804b5a.aa2f64",
        "name": "queue1",
        "firstMessageBypass": true,
        "bypassInterval": "100",
        "x": 1080,
        "y": 740,
        "wires": [
            [
                "9ec6f188.a8ee5"
            ]
        ]
    },
    {
        "id": "b1a362cd.7b63f",
        "type": "simple-queue",
        "z": "ab36cfc2.069bd",
        "name": "queue1",
        "firstMessageBypass": true,
        "bypassInterval": "1000",
        "x": 1200,
        "y": 660,
        "wires": [
            [
                "cb428970.ea88a8"
            ]
        ]
    },
    {
        "id": "e114901f.24f66",
        "type": "simple-queue",
        "z": "ab36cfc2.069bd",
        "name": "queue1",
        "firstMessageBypass": true,
        "bypassInterval": "100",
        "x": 1220,
        "y": 1180,
        "wires": [
            [
                "e5b325e4.3e16e8"
            ]
        ]
    },
    {
        "id": "72aca78b.8806b8",
        "type": "change",
        "z": "67804b5a.aa2f64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BOS026R_counter",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1150,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "efabef4.489251",
        "type": "inject",
        "z": "f2cf66f1.8deb18",
        "name": "TS-30sec",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "29",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 130,
        "y": 1020,
        "wires": [
            [
                "ac2ce396.d095c"
            ]
        ]
    },
    {
        "id": "ac2ce396.d095c",
        "type": "switch",
        "z": "f2cf66f1.8deb18",
        "name": "check if Sensors are set?",
        "property": "SensorsAreSet",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 1020,
        "wires": [
            [
                "1eedcd91.3a8b02"
            ],
            [
                "d2e25188.c86ab"
            ]
        ]
    },
    {
        "id": "c1159410.cf14e8",
        "type": "function",
        "z": "f2cf66f1.8deb18",
        "name": "Set Payload to Buffer",
        "func": "if (msg.hex.includes(undefined) === false){\n    var string = msg.hex.replace(/\\s/g,'');\n    msg.ip = global.get('host');\n    msg.port = '1999';\n    msg.payload = Buffer.from(string,\"hex\");\n} else {\n    msg.payload = \"not Present\"\n}\n\nreturn msg;\n\n//msg.payload = Buffer.from(msg.payload, \"hex\");\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1280,
        "y": 940,
        "wires": [
            [
                "b32811c2.3050b"
            ]
        ]
    },
    {
        "id": "b32811c2.3050b",
        "type": "switch",
        "z": "f2cf66f1.8deb18",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "not Present",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1470,
        "y": 940,
        "wires": [
            [
                "965423c9.542d2",
                "8ecde671.bc4b08"
            ],
            [
                "59eb44bb.51613c"
            ]
        ]
    },
    {
        "id": "ea42a779.05e838",
        "type": "change",
        "z": "67804b5a.aa2f64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BOS026R_gain",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "553949f4.165028",
        "type": "change",
        "z": "67804b5a.aa2f64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BOS026R_operating_hours",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1390,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "1bf5655a.ff98eb",
        "type": "change",
        "z": "67804b5a.aa2f64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BOS026R_last_maintenance",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1400,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "1153dc95.535a53",
        "type": "change",
        "z": "67804b5a.aa2f64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BOS026R_LED_life_time",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1390,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "c78423a7.05645",
        "type": "change",
        "z": "67804b5a.aa2f64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BOS026R_stress_level",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1370,
        "y": 2060,
        "wires": [
            []
        ]
    },
    {
        "id": "f32eba7d.317578",
        "type": "change",
        "z": "ab36cfc2.069bd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BAE00TP_current",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1370,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "2dc577ff.2430a8",
        "type": "change",
        "z": "ab36cfc2.069bd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BAE00TP_stress_level",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "44ea9a3a.1f04c4",
        "type": "change",
        "z": "ab36cfc2.069bd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BAE00TP_lifetime",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "3dad3e65.0e4242",
        "type": "change",
        "z": "ab36cfc2.069bd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BAE00TP_operating_hours",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "91fae4c5.0c7a78",
        "type": "change",
        "z": "ab36cfc2.069bd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BAE00TP_primary_temp",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "a2d54d24.68aae",
        "type": "change",
        "z": "ab36cfc2.069bd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BAE00TP_secondary_temp",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "7c9f1c9a.2e7b94",
        "type": "change",
        "z": "ab36cfc2.069bd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BAE00TP_voltage",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1370,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "ce58ac0d.23643",
        "type": "change",
        "z": "780da233.7168fc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BTS_temperature",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "a4e6a40a.4656a8",
        "type": "change",
        "z": "780da233.7168fc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BTS_operating_hours",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "575e31a.21d22d",
        "type": "change",
        "z": "6381dee2.b8bb4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BAW004M_distance",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "1df92881.2b0de7",
        "type": "change",
        "z": "6381dee2.b8bb4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BAW004M_temperature_actual",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1570,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "e0ddb76e.a22848",
        "type": "change",
        "z": "6381dee2.b8bb4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BAW004M_temperature_max_startup",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1590,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "4d05c2f1.5ead5c",
        "type": "change",
        "z": "6381dee2.b8bb4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BAW004M_temperature_min_startup",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1590,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "2cb33988.9205a6",
        "type": "change",
        "z": "6381dee2.b8bb4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BAW004M_temperature_max_lifetime",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1590,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "d948abbd.6d5cf8",
        "type": "change",
        "z": "6381dee2.b8bb4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BAW004M_temperature_min_lifetime",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1590,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "879db338.e0f95",
        "type": "change",
        "z": "ac4471cd.2e0b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BUS_distance",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "b2b6f74.e1a4e08",
        "type": "change",
        "z": "dabafc8a.62b67",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BTL6PFIOL001_position",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "a045a1c5.9e759",
        "type": "change",
        "z": "f2cf66f1.8deb18",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BNI00E0_detection",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "31ac0953.ede6d6",
        "type": "change",
        "z": "f2cf66f1.8deb18",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BNI00E0_gain",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "eb070291.c8876",
        "type": "change",
        "z": "f2cf66f1.8deb18",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BNI00E0_temperature_actual",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1720,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "fb3e3687.51c1e8",
        "type": "change",
        "z": "f2cf66f1.8deb18",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BNI00E0_temperature_max_startup",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1740,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "ce70c575.e75da8",
        "type": "change",
        "z": "f2cf66f1.8deb18",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BNI00E0_temperature_min_startup",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1740,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "c200db1f.0cbe58",
        "type": "change",
        "z": "f2cf66f1.8deb18",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BNI00E0_temperature_max_lifetime",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1750,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "ec0a7b12.455e68",
        "type": "change",
        "z": "f2cf66f1.8deb18",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BNI00E0_temperature_min_lifetime",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1740,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "326033eb.a00d8c",
        "type": "change",
        "z": "3e53e732.db32a8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BOD0026_distance",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "d0073106.b4895",
        "type": "change",
        "z": "d85e9c9b.15b92",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BOD0020_distance",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "2def2524.60cfca",
        "type": "change",
        "z": "2375ac28.7bf134",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BOD0023_distance",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "e0f8e50e.6a8918",
        "type": "change",
        "z": "f82b1c74.5c04a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "DS235_distance",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "de29ff2c.51715",
        "type": "change",
        "z": "1e08cca7.730233",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BCS012N_distance",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "9d22e84b.336868",
        "type": "change",
        "z": "6484b8ec.c50888",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BES04FK_detection",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "18d90ecd.c14331",
        "type": "change",
        "z": "6484b8ec.c50888",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BES04FK_gain",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "1ba64fe3.a4d04",
        "type": "link out",
        "z": "67804b5a.aa2f64",
        "name": "BOS21 counter",
        "links": [
            "37daf758.071ee8",
            "ea7a4955.1050d8"
        ],
        "x": 1035,
        "y": 520,
        "wires": []
    },
    {
        "id": "68301c9d.43dfb4",
        "type": "exec",
        "z": "b17cee1d.29a2a",
        "command": "sudo du -sh /var/lib/influxdb/data/democase",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 550,
        "y": 420,
        "wires": [
            [
                "bc17cb5c.2353c8"
            ],
            [],
            []
        ]
    },
    {
        "id": "bc17cb5c.2353c8",
        "type": "function",
        "z": "b17cee1d.29a2a",
        "name": "InfluxDB size [MB]",
        "func": "str = msg.payload.substring(0, 3);\nstr = str.replace(\"M\",\"\");\nstr = str.replace(\" \",\"\");\nmsg.payload = str;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 400,
        "wires": [
            [
                "83d7f0a7.6e63a"
            ]
        ]
    },
    {
        "id": "83d7f0a7.6e63a",
        "type": "ui_chart",
        "z": "b17cee1d.29a2a",
        "name": "",
        "group": "57f90ca1.1cfe44",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "InfluxDB size [MB]",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 2,
        "x": 1090,
        "y": 400,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "fb4b90cc.74e8d",
        "type": "debug",
        "z": "67804b5a.aa2f64",
        "name": "Check if flow has succedded",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 980,
        "y": 2180,
        "wires": []
    },
    {
        "id": "23d587e3.88c508",
        "type": "delay",
        "z": "6539041e.99e41c",
        "name": "",
        "pauseType": "delay",
        "timeout": "19",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 930,
        "y": 340,
        "wires": [
            [
                "1168bccb.912aa3"
            ]
        ]
    },
    {
        "id": "78da286e.166028",
        "type": "inject",
        "z": "b17cee1d.29a2a",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "600",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 230,
        "y": 420,
        "wires": [
            [
                "68301c9d.43dfb4"
            ]
        ]
    },
    {
        "id": "b2b2e2f2.2064",
        "type": "comment",
        "z": "d85e9c9b.15b92",
        "name": "Write Service data",
        "info": "",
        "x": 190,
        "y": 1240,
        "wires": []
    },
    {
        "id": "37680d09.bf8d92",
        "type": "comment",
        "z": "d85e9c9b.15b92",
        "name": "Write Process Data ",
        "info": "",
        "x": 190,
        "y": 1300,
        "wires": []
    },
    {
        "id": "6de58423.05708c",
        "type": "comment",
        "z": "d85e9c9b.15b92",
        "name": "Service Data 10s Cycle",
        "info": "",
        "x": 220,
        "y": 360,
        "wires": []
    },
    {
        "id": "280ad8e5.e6ee48",
        "type": "function",
        "z": "d85e9c9b.15b92",
        "name": "BOD0020 Temp array",
        "func": "if (msg.BNIPort === parseInt(global.get('BOD0020'),16) && msg.command === 9 && msg.LowIndex === '52' && msg.SubIndex === \"00\") {\n    msg.payload = msg.response.substr(18,15);\n} else {return;\n    \n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 840,
        "wires": [
            [
                "40623c0b.da2224",
                "3c10833d.638efc"
            ]
        ]
    },
    {
        "id": "40623c0b.da2224",
        "type": "function",
        "z": "d85e9c9b.15b92",
        "name": "Transform",
        "func": "msg.internal_temp_actual = parseInt(msg.payload.substr(0,2),16);\nmsg.internal_temp_max_startup = parseInt(msg.payload.substr(3,2),16);\nmsg.internal_temp_min_startup = parseInt(msg.payload.substr(6,2),16);\nmsg.internal_temp_max_lifetime = parseInt(msg.payload.substr(9,2),16);\nmsg.internal_temp_min_lifetime = parseInt(msg.payload.substr(12,2),16)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 840,
        "wires": [
            [
                "3a2dea49.425b86",
                "887a6380.bfcee",
                "116f7c62.3c0474",
                "b8e1fa44.307058",
                "7e7d0fb0.693db"
            ]
        ]
    },
    {
        "id": "d0849b72.0812d8",
        "type": "link in",
        "z": "d85e9c9b.15b92",
        "name": "10s service data return",
        "links": [
            "29fdf072.54f6"
        ],
        "x": 155,
        "y": 840,
        "wires": [
            [
                "280ad8e5.e6ee48",
                "537ea258.39001c",
                "c7fddebe.3071"
            ]
        ]
    },
    {
        "id": "ce973abd.1513c8",
        "type": "ui_chart",
        "z": "d85e9c9b.15b92",
        "name": "",
        "group": "bbbfa188.bb1d9",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "internal Temperatures",
        "chartType": "line",
        "legend": "false",
        "xformat": "mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-25",
        "ymax": "125",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 2,
        "x": 1100,
        "y": 800,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "3a2dea49.425b86",
        "type": "function",
        "z": "d85e9c9b.15b92",
        "name": "internal_temp_actual",
        "func": "msg.payload = msg.internal_temp_actual;\nmsg.topic = \"internal_temp_actual\";\n//msg.label = \"internal_temp_actual\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 800,
        "y": 840,
        "wires": [
            [
                "ce973abd.1513c8",
                "749daf00.d96d9"
            ]
        ]
    },
    {
        "id": "749daf00.d96d9",
        "type": "change",
        "z": "d85e9c9b.15b92",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BOD0020_temperature_actual",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1360,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "90a615bc.9c4948",
        "type": "function",
        "z": "d85e9c9b.15b92",
        "name": "AL_ReadReq BOD0020 temp Array",
        "func": "msg.Start = '08 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '02'; // Kommando\nmsg.IOLPort = global.get('BOD0020'); //Port Nummer\nmsg.LowIndex = '52'; //IO-Link Index \nmsg.HighIndex = '00'; //IO-Link Index (meiﬂtens 00)\nmsg.SubIndex = '00'; //IO-Link SubIndex \n\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 400,
        "wires": [
            [
                "3b5e41ed.5d0b1e"
            ]
        ]
    },
    {
        "id": "43c95950.a15a38",
        "type": "switch",
        "z": "d85e9c9b.15b92",
        "name": "",
        "property": "SensorsAreSet",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 420,
        "wires": [
            [
                "90a615bc.9c4948",
                "2644da87.cde576"
            ],
            [
                "713a7cef.f27d34"
            ]
        ]
    },
    {
        "id": "4542fd2d.166df4",
        "type": "inject",
        "z": "d85e9c9b.15b92",
        "name": "TS-2s",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 200,
        "y": 420,
        "wires": [
            [
                "43c95950.a15a38"
            ]
        ]
    },
    {
        "id": "713a7cef.f27d34",
        "type": "change",
        "z": "d85e9c9b.15b92",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Sensors Not Set",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 480,
        "wires": [
            [
                "bc286f10.e5c17"
            ]
        ]
    },
    {
        "id": "bc286f10.e5c17",
        "type": "debug",
        "z": "d85e9c9b.15b92",
        "name": "Sensors not set",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 780,
        "y": 480,
        "wires": []
    },
    {
        "id": "3b5e41ed.5d0b1e",
        "type": "function",
        "z": "d85e9c9b.15b92",
        "name": "Set Payload to Buffer",
        "func": "if (msg.hex.includes(undefined) === false){\n    var string = msg.hex.replace(/\\s/g,'');\n    msg.ip = global.get('host');\n    msg.port = '1999';\n    msg.payload = Buffer.from(string,\"hex\");\n} else {\n    msg.payload = \"not Present\"\n}\n\nreturn msg;\n\n//msg.payload = Buffer.from(msg.payload, \"hex\");\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1000,
        "y": 400,
        "wires": [
            [
                "b92cebd7.fd1eb8"
            ]
        ]
    },
    {
        "id": "253d3745.7176d8",
        "type": "switch",
        "z": "d85e9c9b.15b92",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "not Present",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1350,
        "y": 400,
        "wires": [
            [
                "e1edd5ff.3b6af8"
            ],
            [
                "a9b3b6db.1cb8a8"
            ]
        ]
    },
    {
        "id": "e1edd5ff.3b6af8",
        "type": "link out",
        "z": "d85e9c9b.15b92",
        "name": "10s Service Data send",
        "links": [
            "d3db8e06.f0851"
        ],
        "x": 1495,
        "y": 380,
        "wires": []
    },
    {
        "id": "a9b3b6db.1cb8a8",
        "type": "debug",
        "z": "d85e9c9b.15b92",
        "name": "BOD0020 not Present",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1580,
        "y": 420,
        "wires": []
    },
    {
        "id": "887a6380.bfcee",
        "type": "function",
        "z": "d85e9c9b.15b92",
        "name": "internal_temp_max_startup",
        "func": "msg.payload = msg.internal_temp_max_startup;\nmsg.topic = \"internal_temp_max_startup\";\n//msg.label = \"internal_temp_max_startup\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 820,
        "y": 880,
        "wires": [
            [
                "fdd76c76.9a1e2",
                "ce973abd.1513c8"
            ]
        ]
    },
    {
        "id": "116f7c62.3c0474",
        "type": "function",
        "z": "d85e9c9b.15b92",
        "name": "internal_temp_min_startup",
        "func": "msg.payload = msg.internal_temp_min_startup;\nmsg.topic = \"internal_temp_min_startup\";\n//msg.label = \"internal_temp_min_startup\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 820,
        "y": 920,
        "wires": [
            [
                "e87764d7.d21658",
                "ce973abd.1513c8"
            ]
        ]
    },
    {
        "id": "b8e1fa44.307058",
        "type": "function",
        "z": "d85e9c9b.15b92",
        "name": "internal_temp_max_lifetime",
        "func": "msg.payload = msg.internal_temp_max_lifetime;\nmsg.topic = \"internal_temp_max_lifetime\";\n//msg.label = \"internal_temp_max_lifetime\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 820,
        "y": 960,
        "wires": [
            [
                "c824033.3802b",
                "ce973abd.1513c8"
            ]
        ]
    },
    {
        "id": "7e7d0fb0.693db",
        "type": "function",
        "z": "d85e9c9b.15b92",
        "name": "internal_temp_min_lifetime",
        "func": "msg.payload = msg.internal_temp_min_lifetime;\nmsg.topic = \"internal_temp_min_lifetime\";\n//msg.label = \"internal_temp_min_lifetime\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 820,
        "y": 1000,
        "wires": [
            [
                "69bcbd1b.2a1a44",
                "ce973abd.1513c8"
            ]
        ]
    },
    {
        "id": "fdd76c76.9a1e2",
        "type": "change",
        "z": "d85e9c9b.15b92",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BOD0020_temperature_max_startup",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "e87764d7.d21658",
        "type": "change",
        "z": "d85e9c9b.15b92",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BOD0020_temperature_min_startup",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "c824033.3802b",
        "type": "change",
        "z": "d85e9c9b.15b92",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BOD0020_temperature_max_lifetime",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "69bcbd1b.2a1a44",
        "type": "change",
        "z": "d85e9c9b.15b92",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BOD0020_temperature_min_lifetime",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "2644da87.cde576",
        "type": "function",
        "z": "d85e9c9b.15b92",
        "name": "AL_ReadReq BOD0020 Gain",
        "func": "msg.Start = '08 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '02'; // Kommando\nmsg.IOLPort = global.get('BOD0020'); //Port Nummer\nmsg.LowIndex = 'CF'; //IO-Link Index \nmsg.HighIndex = '00'; //IO-Link Index (meiﬂtens 00)\nmsg.SubIndex = '00'; //IO-Link SubIndex \n\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 440,
        "wires": [
            [
                "189452b.135ddad"
            ]
        ]
    },
    {
        "id": "bf457fe1.bb399",
        "type": "function",
        "z": "d85e9c9b.15b92",
        "name": "AL_ReadReq BOD0020 Operating Hours",
        "func": "msg.Start = '08 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '02'; // Kommando\nmsg.IOLPort = global.get('BOD0020'); //Port Nummer\nmsg.LowIndex = '58'; //IO-Link Index \nmsg.HighIndex = '00'; //IO-Link Index (meiﬂtens 00)\nmsg.SubIndex = '01'; //IO-Link SubIndex \n\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 660,
        "y": 540,
        "wires": [
            [
                "c4d38acc.7bc468"
            ]
        ]
    },
    {
        "id": "c7fddebe.3071",
        "type": "function",
        "z": "d85e9c9b.15b92",
        "name": "BOD0020 Operating Hours",
        "func": "if (msg.BNIPort === parseInt(global.get('BOD0020'),16) && msg.command === 9 && msg.LowIndex === '58' && msg.SubIndex === \"01\") {\n    msg.payload = msg.response.substr(18,11);\n} else {return;\n    \n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 400,
        "y": 1100,
        "wires": [
            [
                "846eaa5a.9f8e88"
            ]
        ]
    },
    {
        "id": "537ea258.39001c",
        "type": "function",
        "z": "d85e9c9b.15b92",
        "name": "BOD0020 Quality",
        "func": "if (msg.BNIPort === parseInt(global.get('BOD0020'),16) && msg.command === 9 && msg.LowIndex === 'CF' && msg.SubIndex === \"00\") {\n    msg.payload = msg.response.substr(18,2);\n} else {return;\n    \n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 1060,
        "wires": [
            [
                "2775328f.64ee0e"
            ]
        ]
    },
    {
        "id": "189452b.135ddad",
        "type": "function",
        "z": "d85e9c9b.15b92",
        "name": "Set Payload to Buffer",
        "func": "if (msg.hex.includes(undefined) === false){\n    var string = msg.hex.replace(/\\s/g,'');\n    msg.ip = global.get('host');\n    msg.port = '1999';\n    msg.payload = Buffer.from(string,\"hex\");\n} else {\n    msg.payload = \"not Present\"\n}\n\nreturn msg;\n\n//msg.payload = Buffer.from(msg.payload, \"hex\");\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1000,
        "y": 440,
        "wires": [
            [
                "b92cebd7.fd1eb8"
            ]
        ]
    },
    {
        "id": "b92cebd7.fd1eb8",
        "type": "simple-queue",
        "z": "d85e9c9b.15b92",
        "name": "queue1",
        "firstMessageBypass": true,
        "bypassInterval": "900",
        "x": 1200,
        "y": 380,
        "wires": [
            [
                "253d3745.7176d8"
            ]
        ]
    },
    {
        "id": "450bd9fc.174b18",
        "type": "inject",
        "z": "d85e9c9b.15b92",
        "name": "TS-5min",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "x": 200,
        "y": 540,
        "wires": [
            [
                "e0b9f239.5cc23"
            ]
        ]
    },
    {
        "id": "e0b9f239.5cc23",
        "type": "switch",
        "z": "d85e9c9b.15b92",
        "name": "",
        "property": "SensorsAreSet",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 540,
        "wires": [
            [
                "bf457fe1.bb399"
            ],
            [
                "cf5f1ad6.0b68c8"
            ]
        ]
    },
    {
        "id": "cf5f1ad6.0b68c8",
        "type": "change",
        "z": "d85e9c9b.15b92",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Sensors Not Set",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 580,
        "wires": [
            [
                "6dac8a85.273ec4"
            ]
        ]
    },
    {
        "id": "6dac8a85.273ec4",
        "type": "debug",
        "z": "d85e9c9b.15b92",
        "name": "Sensors not set",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 780,
        "y": 580,
        "wires": []
    },
    {
        "id": "c4d38acc.7bc468",
        "type": "function",
        "z": "d85e9c9b.15b92",
        "name": "Set Payload to Buffer",
        "func": "if (msg.hex.includes(undefined) === false){\n    var string = msg.hex.replace(/\\s/g,'');\n    msg.ip = global.get('host');\n    msg.port = '1999';\n    msg.payload = Buffer.from(string,\"hex\");\n} else {\n    msg.payload = \"not Present\"\n}\n\nreturn msg;\n\n//msg.payload = Buffer.from(msg.payload, \"hex\");\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1000,
        "y": 540,
        "wires": [
            [
                "253d3745.7176d8"
            ]
        ]
    },
    {
        "id": "846eaa5a.9f8e88",
        "type": "function",
        "z": "d85e9c9b.15b92",
        "name": "Calc Hours",
        "func": "msg.payload = parseInt((msg.payload.substr(0, 2))+(msg.payload.substr(3, 2))+(msg.payload.substr(6, 2))+(msg.payload.substr(9, 2)),16);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 1100,
        "wires": [
            [
                "1f03dac0.5eb0c5",
                "7fee77c9.86a6b8"
            ]
        ]
    },
    {
        "id": "1f03dac0.5eb0c5",
        "type": "ui_text",
        "z": "d85e9c9b.15b92",
        "group": "7d753463.86cf2c",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Operating Hours:",
        "format": "{{msg.payload}} h",
        "layout": "row-left",
        "x": 1030,
        "y": 1100,
        "wires": []
    },
    {
        "id": "7fee77c9.86a6b8",
        "type": "change",
        "z": "d85e9c9b.15b92",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BOD0020_operating_hours",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1350,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "1fdd44ff.41d67b",
        "type": "ui_text",
        "z": "d85e9c9b.15b92",
        "group": "7d753463.86cf2c",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Signal Quality:",
        "format": "{{msg.payload}} %",
        "layout": "row-left",
        "x": 1020,
        "y": 1060,
        "wires": []
    },
    {
        "id": "2775328f.64ee0e",
        "type": "function",
        "z": "d85e9c9b.15b92",
        "name": "Calc Quality",
        "func": "msg.payload = parseInt(msg.payload,16);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 1060,
        "wires": [
            [
                "1fdd44ff.41d67b",
                "852a2f7b.7f607"
            ]
        ]
    },
    {
        "id": "852a2f7b.7f607",
        "type": "change",
        "z": "d85e9c9b.15b92",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BOD0020_quality",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "3c10833d.638efc",
        "type": "debug",
        "z": "d85e9c9b.15b92",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 800,
        "y": 700,
        "wires": []
    },
    {
        "id": "495065e1.c710dc",
        "type": "ui_button",
        "z": "b17cee1d.29a2a",
        "name": "",
        "group": "f562e9f2.314738",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "connect to iPhone",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "",
        "x": 290,
        "y": 100,
        "wires": [
            [
                "10d8af34.0f4b91"
            ]
        ]
    },
    {
        "id": "10d8af34.0f4b91",
        "type": "exec",
        "z": "b17cee1d.29a2a",
        "command": "sudo ifconfig wlan0 down && sudo ifconfig wlan0 up",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "oldrc": false,
        "name": "turn off Pi",
        "x": 560,
        "y": 80,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "2db60133.3f5f2e",
        "type": "comment",
        "z": "ecfdebb0.d86438",
        "name": "BOS026R",
        "info": "",
        "x": 360,
        "y": 40,
        "wires": []
    },
    {
        "id": "1a9841d4.cc06be",
        "type": "comment",
        "z": "ecfdebb0.d86438",
        "name": "BAE00TP",
        "info": "",
        "x": 360,
        "y": 200,
        "wires": []
    },
    {
        "id": "db51b772.93afc8",
        "type": "comment",
        "z": "ecfdebb0.d86438",
        "name": "BAW004M",
        "info": "",
        "x": 360,
        "y": 380,
        "wires": []
    },
    {
        "id": "8e40a4d0.57f128",
        "type": "comment",
        "z": "ecfdebb0.d86438",
        "name": "BNI00E0",
        "info": "",
        "x": 360,
        "y": 540,
        "wires": []
    },
    {
        "id": "4941ca8e.192514",
        "type": "change",
        "z": "ecfdebb0.d86438",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "BOD0026_distance",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 2200,
        "wires": [
            [
                "f6725a85.328d28"
            ]
        ]
    },
    {
        "id": "92c5e935.f8d358",
        "type": "change",
        "z": "ecfdebb0.d86438",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "BOD0023_distance",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 2120,
        "wires": [
            [
                "50a961d1.98ef8"
            ]
        ]
    },
    {
        "id": "62bf4b63.138224",
        "type": "change",
        "z": "ecfdebb0.d86438",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "DS235_distance",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 2280,
        "wires": [
            [
                "c0fa71bb.b400d"
            ]
        ]
    },
    {
        "id": "344d4389.3ae6ac",
        "type": "change",
        "z": "ecfdebb0.d86438",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "BCS012N_distance",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 2040,
        "wires": [
            [
                "5c92ef02.06fe"
            ]
        ]
    },
    {
        "id": "cf08806c.0546c",
        "type": "comment",
        "z": "ecfdebb0.d86438",
        "name": "BOD0020",
        "info": "",
        "x": 360,
        "y": 700,
        "wires": []
    },
    {
        "id": "29a597bc.151f28",
        "type": "comment",
        "z": "ecfdebb0.d86438",
        "name": "BOD0023",
        "info": "",
        "x": 370,
        "y": 2080,
        "wires": []
    },
    {
        "id": "bf1d30b3.a18b4",
        "type": "comment",
        "z": "ecfdebb0.d86438",
        "name": "BOD0026",
        "info": "",
        "x": 370,
        "y": 2160,
        "wires": []
    },
    {
        "id": "f3b4a2ca.24e8c",
        "type": "comment",
        "z": "ecfdebb0.d86438",
        "name": "DS235",
        "info": "",
        "x": 360,
        "y": 2240,
        "wires": []
    },
    {
        "id": "61e7e96.6976818",
        "type": "comment",
        "z": "ecfdebb0.d86438",
        "name": "BCS012N",
        "info": "",
        "x": 370,
        "y": 2000,
        "wires": []
    },
    {
        "id": "37bc4f84.f615c",
        "type": "comment",
        "z": "ecfdebb0.d86438",
        "name": "BES04FK",
        "info": "",
        "x": 360,
        "y": 860,
        "wires": []
    },
    {
        "id": "1e32849a.2247ab",
        "type": "function",
        "z": "ecfdebb0.d86438",
        "name": "distance",
        "func": "msg.measurement = \"DS235\";\nmsg.payload = [\n    {\n        distance: msg.payload,\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 990,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "27614b0d.94dc24",
        "type": "function",
        "z": "ecfdebb0.d86438",
        "name": "distance",
        "func": "msg.measurement = \"BCS012N\";\nmsg.payload = [\n    {\n        distance: msg.payload,\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 990,
        "y": 2040,
        "wires": [
            []
        ]
    },
    {
        "id": "7ed12045.dfd2b",
        "type": "function",
        "z": "ecfdebb0.d86438",
        "name": "distance",
        "func": "msg.measurement = \"BOD0023\";\nmsg.payload = [\n    {\n        distance: msg.payload,\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 990,
        "y": 2120,
        "wires": [
            []
        ]
    },
    {
        "id": "1ec8ca36.ef2f46",
        "type": "function",
        "z": "ecfdebb0.d86438",
        "name": "distance",
        "func": "msg.measurement = \"BOD0026\";\nmsg.payload = [\n    {\n        distance: msg.payload,\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 990,
        "y": 2200,
        "wires": [
            []
        ]
    },
    {
        "id": "c0fa71bb.b400d",
        "type": "switch",
        "z": "ecfdebb0.d86438",
        "name": "not null",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 810,
        "y": 2280,
        "wires": [
            [
                "1e32849a.2247ab"
            ]
        ]
    },
    {
        "id": "5c92ef02.06fe",
        "type": "switch",
        "z": "ecfdebb0.d86438",
        "name": "not null",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 810,
        "y": 2040,
        "wires": [
            [
                "27614b0d.94dc24"
            ]
        ]
    },
    {
        "id": "50a961d1.98ef8",
        "type": "switch",
        "z": "ecfdebb0.d86438",
        "name": "not null",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 810,
        "y": 2120,
        "wires": [
            [
                "7ed12045.dfd2b"
            ]
        ]
    },
    {
        "id": "f6725a85.328d28",
        "type": "switch",
        "z": "ecfdebb0.d86438",
        "name": "not null",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 810,
        "y": 2200,
        "wires": [
            [
                "1ec8ca36.ef2f46"
            ]
        ]
    },
    {
        "id": "6b18119c.1bdb2",
        "type": "influxdb out",
        "z": "ecfdebb0.d86438",
        "influxdb": "c6421bfe.84a3a8",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "x": 1870,
        "y": 1080,
        "wires": []
    },
    {
        "id": "5f51ad85.17feb4",
        "type": "comment",
        "z": "ecfdebb0.d86438",
        "name": "BML06HE",
        "info": "",
        "x": 360,
        "y": 1180,
        "wires": []
    },
    {
        "id": "b117090b.0c4738",
        "type": "comment",
        "z": "ecfdebb0.d86438",
        "name": "BIP001M",
        "info": "",
        "x": 360,
        "y": 1020,
        "wires": []
    },
    {
        "id": "b7495cb.5917fa",
        "type": "comment",
        "z": "ecfdebb0.d86438",
        "name": "BTS0002",
        "info": "",
        "x": 370,
        "y": 1880,
        "wires": []
    },
    {
        "id": "d552c6de.8cbb88",
        "type": "change",
        "z": "ecfdebb0.d86438",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "BTS_temperature",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 1920,
        "wires": [
            [
                "102a2e3c.072592"
            ]
        ]
    },
    {
        "id": "5061291d.3dc928",
        "type": "change",
        "z": "ecfdebb0.d86438",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "BTS_operating_hours",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 1960,
        "wires": [
            [
                "51158834.ccf4e8"
            ]
        ]
    },
    {
        "id": "569109a7.eeb8c8",
        "type": "function",
        "z": "ecfdebb0.d86438",
        "name": "temperature",
        "func": "msg.measurement = \"BTS0002\";\nmsg.payload = [\n    {\n        temperature: msg.payload,\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1000,
        "y": 1920,
        "wires": [
            []
        ]
    },
    {
        "id": "5b3086bc.261a48",
        "type": "function",
        "z": "ecfdebb0.d86438",
        "name": "operating_hours",
        "func": "msg.measurement = \"BTS0002\";\nmsg.payload = [\n    {\n        operating_hours: msg.payload,\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1010,
        "y": 1960,
        "wires": [
            []
        ]
    },
    {
        "id": "102a2e3c.072592",
        "type": "switch",
        "z": "ecfdebb0.d86438",
        "name": "not null",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 810,
        "y": 1920,
        "wires": [
            [
                "569109a7.eeb8c8"
            ]
        ]
    },
    {
        "id": "51158834.ccf4e8",
        "type": "switch",
        "z": "ecfdebb0.d86438",
        "name": "not null",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 810,
        "y": 1960,
        "wires": [
            [
                "5b3086bc.261a48"
            ]
        ]
    },
    {
        "id": "7fdab47e.4a8b3c",
        "type": "change",
        "z": "ecfdebb0.d86438",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "BUS_distance",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 2380,
        "wires": [
            [
                "636135b5.e2486c"
            ]
        ]
    },
    {
        "id": "2563c618.34767a",
        "type": "comment",
        "z": "ecfdebb0.d86438",
        "name": "BUS004P",
        "info": "",
        "x": 370,
        "y": 2340,
        "wires": []
    },
    {
        "id": "1c5530c2.ccf74f",
        "type": "change",
        "z": "ecfdebb0.d86438",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "BTL_position",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 2500,
        "wires": [
            [
                "97739867.171508"
            ]
        ]
    },
    {
        "id": "7ca9c7c2.49e5a8",
        "type": "comment",
        "z": "ecfdebb0.d86438",
        "name": "BTLXXXX",
        "info": "",
        "x": 370,
        "y": 2460,
        "wires": []
    },
    {
        "id": "7e86063d.76fca8",
        "type": "function",
        "z": "ecfdebb0.d86438",
        "name": "distance",
        "func": "msg.measurement = \"BUS004P\";\nmsg.payload = [\n    {\n        distance: msg.payload,\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 990,
        "y": 2380,
        "wires": [
            []
        ]
    },
    {
        "id": "c745bb8b.0db138",
        "type": "function",
        "z": "ecfdebb0.d86438",
        "name": "position",
        "func": "msg.measurement = \"BTLXXXX\";\nmsg.payload = [\n    {\n        position: msg.payload,\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 990,
        "y": 2500,
        "wires": [
            []
        ]
    },
    {
        "id": "636135b5.e2486c",
        "type": "switch",
        "z": "ecfdebb0.d86438",
        "name": "not null",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 810,
        "y": 2380,
        "wires": [
            [
                "7e86063d.76fca8"
            ]
        ]
    },
    {
        "id": "97739867.171508",
        "type": "switch",
        "z": "ecfdebb0.d86438",
        "name": "not null",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 810,
        "y": 2500,
        "wires": [
            [
                "c745bb8b.0db138"
            ]
        ]
    },
    {
        "id": "ab70e807.cd6908",
        "type": "inject",
        "z": "ecfdebb0.d86438",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 1520,
        "y": 20,
        "wires": [
            [
                "da3b747d.22a538"
            ]
        ]
    },
    {
        "id": "da3b747d.22a538",
        "type": "function",
        "z": "ecfdebb0.d86438",
        "name": "Flush Visus",
        "func": "msg.payload = [];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1670,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "85f99766.9de878",
        "type": "function",
        "z": "ecfdebb0.d86438",
        "name": "Create Database Object",
        "func": "msg.measurement = \"BOS026R\";\nmsg.payload = [{\n    counter:                            global.get('BOS026R_counter'),\n    gain:                               global.get('BOS026R_gain'),\n    operatingHours:                     global.get('BOS026R_operating_hours'),\n    operatingHoursSinceMaintenance:     global.get('BOS026R_last_maintenance'),\n    ledLifeime:                         global.get('BOS026R_LED_life_time'),\n    stressLevel:                        global.get('BOS026R_stress_level'),\n    operatingType:                      global.get('BOS026R_type')\n},\n{\n    tag1:   \"port \"+ global.get('BOS026R'),\n    tag2:   \"quality Monitoring\"\n}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 100,
        "wires": [
            [
                "255b2895.72a0e8",
                "6b18119c.1bdb2"
            ]
        ]
    },
    {
        "id": "eae9764a.41a378",
        "type": "inject",
        "z": "ecfdebb0.d86438",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 210,
        "y": 80,
        "wires": [
            [
                "e8c1ce0.006ab3"
            ]
        ]
    },
    {
        "id": "255b2895.72a0e8",
        "type": "debug",
        "z": "ecfdebb0.d86438",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1530,
        "y": 60,
        "wires": []
    },
    {
        "id": "24b227d6.db8b88",
        "type": "function",
        "z": "ecfdebb0.d86438",
        "name": "Create Database Object",
        "func": "msg.measurement = \"BAE00TP\";\nmsg.payload = [{\n    voltage:                global.get('BAE00TP_voltage'),\n    current:                global.get('BAE00TP_current'),\n    stressLevel:            global.get('BAE00TP_stress_level'),\n    lifetime:               global.get('BAE00TP_lifetime'),\n    operatingHours:         global.get('BAE00TP_operating_hours'),\n    primaryCapacitorTemp:   global.get('BAE00TP_primary_temp'),\n    secondaryCapacitorTemp: global.get('BAE00TP_secondary_temp')\n},\n{\n    tag1:   \"port \"+ global.get('BAE00TP'),\n    tag2:   \"condition Monitoring\"\n}];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 260,
        "wires": [
            [
                "2dd9c459.33bdfc",
                "6b18119c.1bdb2"
            ]
        ]
    },
    {
        "id": "2dd9c459.33bdfc",
        "type": "debug",
        "z": "ecfdebb0.d86438",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1530,
        "y": 220,
        "wires": []
    },
    {
        "id": "57c186bd.fd0188",
        "type": "function",
        "z": "ecfdebb0.d86438",
        "name": "Create Database Object",
        "func": "msg.measurement = \"BAW004M\";\nmsg.payload = [{\n    distance:               global.get('BAW004M_distance'),\n    temperatureActual:      global.get('BAW004M_temperature_actual'),\n    temperatureMaxStartup:  global.get('BAW004M_temperature_max_startup'),\n    temperatureMinStartup:  global.get('BAW004M_temperature_min_startup'),\n    temperatureMaxLifetime: global.get('BAW004M_temperature_max_lifetime'),\n    temperatureMinLifetime: global.get('BAW004M_temperature_min_lifetime')\n},\n{\n    tag1:   \"port \"+ global.get('BAW004M'),\n    tag2:   \"condition Monitoring\"\n}];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 440,
        "wires": [
            [
                "459fda7f.c9ab24",
                "6b18119c.1bdb2"
            ]
        ]
    },
    {
        "id": "459fda7f.c9ab24",
        "type": "debug",
        "z": "ecfdebb0.d86438",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1530,
        "y": 400,
        "wires": []
    },
    {
        "id": "ce5755b8.43a928",
        "type": "function",
        "z": "ecfdebb0.d86438",
        "name": "Create Database Object",
        "func": "msg.measurement = \"BNI00E0\";\nmsg.payload = [{\n    detection:              global.get('BNI00E0_detection'),\n    gain:                   global.get('BNI00E0_gain'),\n    temperatureActual:      global.get('BNI00E0_temperature_actual'),\n    temperatureMaxStartup:  global.get('BNI00E0_temperature_max_startup'),\n    temperatureMinStartup:  global.get('BNI00E0_temperature_min_startup'),\n    temperatureMaxLifetime: global.get('BNI00E0_temperature_max_lifetime'),\n    temperatureMinLifetime: global.get('BNI00E0_temperature_min_lifetime')\n},\n{\n    tag1:   \"port \"+ global.get('BNI00E0'),\n    tag2:   \"condition Monitoring\"\n}];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 600,
        "wires": [
            [
                "2675415c.54a14e",
                "6b18119c.1bdb2"
            ]
        ]
    },
    {
        "id": "2675415c.54a14e",
        "type": "debug",
        "z": "ecfdebb0.d86438",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1530,
        "y": 560,
        "wires": []
    },
    {
        "id": "7f39bd2e.b881e4",
        "type": "function",
        "z": "ecfdebb0.d86438",
        "name": "Create Database Object",
        "func": "msg.measurement = \"BOD0020\";\nmsg.payload = [{\n    distance:               global.get('BOD0020_distance'),\n    quality:                global.get('BOD0020_quality'),\n    temperatureActual:      global.get('BOD0020_temperature_actual'),\n    temperatureMaxStartup:  global.get('BOD0020_temperature_max_startup'),\n    temperatureMinStartup:  global.get('BOD0020_temperature_min_startup'),\n    temperatureMaxLifetime: global.get('BOD0020_temperature_max_lifetime'),\n    temperatureMinLifetime: global.get('BOD0020_temperature_min_lifetime'),\n    operatingHours:         global.get('BOD0020_operating_hours')\n},\n{\n    tag1:   \"port \"+ global.get('BOD0020'),\n    tag2:   \"condition Monitoring\"\n}];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 760,
        "wires": [
            [
                "3fbcc2ce.a0673e",
                "6b18119c.1bdb2"
            ]
        ]
    },
    {
        "id": "3fbcc2ce.a0673e",
        "type": "debug",
        "z": "ecfdebb0.d86438",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1550,
        "y": 720,
        "wires": []
    },
    {
        "id": "83836386.88f4f",
        "type": "function",
        "z": "ecfdebb0.d86438",
        "name": "Create Database Object",
        "func": "msg.measurement = \"BES04FK\";\nmsg.payload = [{\n    detection:              global.get('BES04FK_detection'),\n    gain:                   global.get('BES04FK_gain')\n    \n},\n{\n    tag1:   \"port \"+ global.get('BES04FK'),\n    tag2:   \"condition Monitoring\"\n}];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 920,
        "wires": [
            [
                "b489a011.b8352",
                "6b18119c.1bdb2"
            ]
        ]
    },
    {
        "id": "b489a011.b8352",
        "type": "debug",
        "z": "ecfdebb0.d86438",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1550,
        "y": 880,
        "wires": []
    },
    {
        "id": "6adf00bc.40d2",
        "type": "function",
        "z": "ecfdebb0.d86438",
        "name": "Create Database Object",
        "func": "msg.measurement = \"BIP001M\";\nmsg.payload = [{\n    distance:               global.get('BIP001M_distance'),\n    temperatureActual:      global.get('BIP001M_temperature_actual')\n},\n{\n    tag1:   \"port \"+ global.get('BIP001M'),\n    tag2:\"condition Monitoring\"\n}];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 1080,
        "wires": [
            [
                "8a0acea9.2df79",
                "6b18119c.1bdb2"
            ]
        ]
    },
    {
        "id": "8a0acea9.2df79",
        "type": "debug",
        "z": "ecfdebb0.d86438",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1550,
        "y": 1040,
        "wires": []
    },
    {
        "id": "95a9a8eb.6283b8",
        "type": "function",
        "z": "ecfdebb0.d86438",
        "name": "Create Database Object",
        "func": "msg.measurement = \"BML06HE\";\nmsg.payload = [{\n    distance:               global.get('BML06HE_distance'),\n    temperatureActual:      global.get('BML06HE_temperature_actual')\n},\n{\n    tag1:   \"port \"+ global.get('BML06HE'),\n    tag2:   \"condition Monitoring\"\n}];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 1240,
        "wires": [
            [
                "589ce68f.268188",
                "6b18119c.1bdb2"
            ]
        ]
    },
    {
        "id": "589ce68f.268188",
        "type": "debug",
        "z": "ecfdebb0.d86438",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1550,
        "y": 1200,
        "wires": []
    },
    {
        "id": "13ecd7be.a011c8",
        "type": "delay",
        "z": "ecfdebb0.d86438",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 670,
        "y": 240,
        "wires": [
            [
                "8b17a2b4.97719"
            ]
        ]
    },
    {
        "id": "a6349dda.e2de",
        "type": "delay",
        "z": "ecfdebb0.d86438",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 670,
        "y": 420,
        "wires": [
            [
                "d786af3d.e6eef"
            ]
        ]
    },
    {
        "id": "6ec59db6.cc5484",
        "type": "change",
        "z": "ecfdebb0.d86438",
        "name": "Delete payload an measurement",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "measurement",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "notOnline",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 420,
        "wires": [
            [
                "a6349dda.e2de"
            ]
        ]
    },
    {
        "id": "c2ff5014.5968e",
        "type": "change",
        "z": "ecfdebb0.d86438",
        "name": "Delete payload an measurement",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "measurement",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "notOnline",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 240,
        "wires": [
            [
                "13ecd7be.a011c8"
            ]
        ]
    },
    {
        "id": "f8cc761e.7b1c88",
        "type": "function",
        "z": "ecfdebb0.d86438",
        "name": "check if Sensor is online?",
        "func": "if( (msg.IOLPort = global.get('BOS026R')) === undefined){\n    msg.notOnline = true;\n}else{\n    msg.notOnline = false;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 80,
        "wires": [
            [
                "c4529d6c.bd1a3",
                "62b59941.6cb628"
            ]
        ]
    },
    {
        "id": "c4529d6c.bd1a3",
        "type": "debug",
        "z": "ecfdebb0.d86438",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1110,
        "y": 40,
        "wires": []
    },
    {
        "id": "62b59941.6cb628",
        "type": "switch",
        "z": "ecfdebb0.d86438",
        "name": "",
        "property": "notOnline",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1110,
        "y": 80,
        "wires": [
            [
                "c2ff5014.5968e"
            ],
            [
                "85f99766.9de878",
                "c2ff5014.5968e"
            ]
        ]
    },
    {
        "id": "8b17a2b4.97719",
        "type": "function",
        "z": "ecfdebb0.d86438",
        "name": "check if Sensor is online?",
        "func": "if( (msg.IOLPort = global.get('BAE00TP')) === undefined){\n    msg.notOnline = true;\n}else{\n    msg.notOnline = false;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 240,
        "wires": [
            [
                "ff311bc2.6c0fc8",
                "95131621.7cc228"
            ]
        ]
    },
    {
        "id": "95131621.7cc228",
        "type": "switch",
        "z": "ecfdebb0.d86438",
        "name": "",
        "property": "notOnline",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1110,
        "y": 240,
        "wires": [
            [
                "6ec59db6.cc5484"
            ],
            [
                "24b227d6.db8b88",
                "6ec59db6.cc5484"
            ]
        ]
    },
    {
        "id": "ff311bc2.6c0fc8",
        "type": "debug",
        "z": "ecfdebb0.d86438",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1110,
        "y": 200,
        "wires": []
    },
    {
        "id": "d786af3d.e6eef",
        "type": "function",
        "z": "ecfdebb0.d86438",
        "name": "check if Sensor is online?",
        "func": "if( (msg.IOLPort = global.get('BAW004M')) === undefined){\n    msg.notOnline = true;\n}else{\n    msg.notOnline = false;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 420,
        "wires": [
            [
                "1a569127.89201f",
                "5e81c1d6.674b8"
            ]
        ]
    },
    {
        "id": "5e81c1d6.674b8",
        "type": "switch",
        "z": "ecfdebb0.d86438",
        "name": "",
        "property": "notOnline",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1110,
        "y": 420,
        "wires": [
            [
                "1a3e4d63.808cc3"
            ],
            [
                "57c186bd.fd0188",
                "1a3e4d63.808cc3"
            ]
        ]
    },
    {
        "id": "1a569127.89201f",
        "type": "debug",
        "z": "ecfdebb0.d86438",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1110,
        "y": 380,
        "wires": []
    },
    {
        "id": "d59d90b.730967",
        "type": "switch",
        "z": "ecfdebb0.d86438",
        "name": "",
        "property": "notOnline",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1110,
        "y": 580,
        "wires": [
            [
                "b9bf28ea.c2b418"
            ],
            [
                "ce5755b8.43a928",
                "b9bf28ea.c2b418"
            ]
        ]
    },
    {
        "id": "8cc63e9b.e0e0b",
        "type": "debug",
        "z": "ecfdebb0.d86438",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1110,
        "y": 540,
        "wires": []
    },
    {
        "id": "18821d33.22f273",
        "type": "function",
        "z": "ecfdebb0.d86438",
        "name": "check if Sensor is online?",
        "func": "if( (msg.IOLPort = global.get('BNI00E0')) === undefined){\n    msg.notOnline = true;\n}else{\n    msg.notOnline = false;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 580,
        "wires": [
            [
                "8cc63e9b.e0e0b",
                "d59d90b.730967"
            ]
        ]
    },
    {
        "id": "b3f1604f.b6222",
        "type": "delay",
        "z": "ecfdebb0.d86438",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 670,
        "y": 580,
        "wires": [
            [
                "18821d33.22f273"
            ]
        ]
    },
    {
        "id": "1a3e4d63.808cc3",
        "type": "change",
        "z": "ecfdebb0.d86438",
        "name": "Delete payload an measurement",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "measurement",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "notOnline",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 580,
        "wires": [
            [
                "b3f1604f.b6222"
            ]
        ]
    },
    {
        "id": "25b72f19.caf67",
        "type": "switch",
        "z": "ecfdebb0.d86438",
        "name": "",
        "property": "notOnline",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1110,
        "y": 740,
        "wires": [
            [
                "1c5dfecd.5114e1"
            ],
            [
                "7f39bd2e.b881e4",
                "1c5dfecd.5114e1"
            ]
        ]
    },
    {
        "id": "4dbc46e5.1cba58",
        "type": "debug",
        "z": "ecfdebb0.d86438",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1110,
        "y": 700,
        "wires": []
    },
    {
        "id": "7bf78228.7dc80c",
        "type": "function",
        "z": "ecfdebb0.d86438",
        "name": "check if Sensor is online?",
        "func": "if( (msg.IOLPort = global.get('BOD0020')) === undefined){\n    msg.notOnline = true;\n}else{\n    msg.notOnline = false;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 740,
        "wires": [
            [
                "4dbc46e5.1cba58",
                "25b72f19.caf67"
            ]
        ]
    },
    {
        "id": "b776f502.c2def8",
        "type": "delay",
        "z": "ecfdebb0.d86438",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 670,
        "y": 740,
        "wires": [
            [
                "7bf78228.7dc80c"
            ]
        ]
    },
    {
        "id": "b9bf28ea.c2b418",
        "type": "change",
        "z": "ecfdebb0.d86438",
        "name": "Delete payload an measurement",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "measurement",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "notOnline",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 740,
        "wires": [
            [
                "b776f502.c2def8"
            ]
        ]
    },
    {
        "id": "1c5dfecd.5114e1",
        "type": "change",
        "z": "ecfdebb0.d86438",
        "name": "Delete payload an measurement",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "measurement",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "notOnline",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 900,
        "wires": [
            [
                "c276567d.45f128"
            ]
        ]
    },
    {
        "id": "c276567d.45f128",
        "type": "delay",
        "z": "ecfdebb0.d86438",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 670,
        "y": 900,
        "wires": [
            [
                "aae062e9.ec6a9"
            ]
        ]
    },
    {
        "id": "aae062e9.ec6a9",
        "type": "function",
        "z": "ecfdebb0.d86438",
        "name": "check if Sensor is online?",
        "func": "if( (msg.IOLPort = global.get('BES04FK')) === undefined){\n    msg.notOnline = true;\n}else{\n    msg.notOnline = false;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 900,
        "wires": [
            [
                "fd29e724.6d0068",
                "c5fca75b.0f52a8"
            ]
        ]
    },
    {
        "id": "c5fca75b.0f52a8",
        "type": "switch",
        "z": "ecfdebb0.d86438",
        "name": "",
        "property": "notOnline",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1110,
        "y": 900,
        "wires": [
            [
                "77b1589f.505808"
            ],
            [
                "83836386.88f4f",
                "77b1589f.505808"
            ]
        ]
    },
    {
        "id": "fd29e724.6d0068",
        "type": "debug",
        "z": "ecfdebb0.d86438",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1110,
        "y": 860,
        "wires": []
    },
    {
        "id": "77b1589f.505808",
        "type": "change",
        "z": "ecfdebb0.d86438",
        "name": "Delete payload an measurement",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "measurement",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "notOnline",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1060,
        "wires": [
            [
                "de537aa9.b8ad08"
            ]
        ]
    },
    {
        "id": "de537aa9.b8ad08",
        "type": "delay",
        "z": "ecfdebb0.d86438",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 670,
        "y": 1060,
        "wires": [
            [
                "3e0d2130.a0a28e"
            ]
        ]
    },
    {
        "id": "3e0d2130.a0a28e",
        "type": "function",
        "z": "ecfdebb0.d86438",
        "name": "check if Sensor is online?",
        "func": "if( (msg.IOLPort = global.get('BIP001M')) === undefined){\n    msg.notOnline = true;\n}else{\n    msg.notOnline = false;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 1060,
        "wires": [
            [
                "5cccc8ad.ff6d58",
                "346ff1a9.2f441e"
            ]
        ]
    },
    {
        "id": "346ff1a9.2f441e",
        "type": "switch",
        "z": "ecfdebb0.d86438",
        "name": "",
        "property": "notOnline",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1110,
        "y": 1060,
        "wires": [
            [
                "bee603ac.cb37d"
            ],
            [
                "6adf00bc.40d2",
                "bee603ac.cb37d"
            ]
        ]
    },
    {
        "id": "5cccc8ad.ff6d58",
        "type": "debug",
        "z": "ecfdebb0.d86438",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1110,
        "y": 1020,
        "wires": []
    },
    {
        "id": "bee603ac.cb37d",
        "type": "change",
        "z": "ecfdebb0.d86438",
        "name": "Delete payload an measurement",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "measurement",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "notOnline",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1220,
        "wires": [
            [
                "5fe4277c.3d5658"
            ]
        ]
    },
    {
        "id": "5fe4277c.3d5658",
        "type": "delay",
        "z": "ecfdebb0.d86438",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 670,
        "y": 1220,
        "wires": [
            [
                "590f9370.c27ecc"
            ]
        ]
    },
    {
        "id": "590f9370.c27ecc",
        "type": "function",
        "z": "ecfdebb0.d86438",
        "name": "check if Sensor is online?",
        "func": "if( (msg.IOLPort = global.get('BML06HE')) === undefined){\n    msg.notOnline = true;\n}else{\n    msg.notOnline = false;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 1220,
        "wires": [
            [
                "df8a9270.29e4a",
                "be81c571.166268"
            ]
        ]
    },
    {
        "id": "be81c571.166268",
        "type": "switch",
        "z": "ecfdebb0.d86438",
        "name": "",
        "property": "notOnline",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1110,
        "y": 1220,
        "wires": [
            [
                "9ea5ad56.4a283"
            ],
            [
                "95a9a8eb.6283b8",
                "9ea5ad56.4a283"
            ]
        ]
    },
    {
        "id": "df8a9270.29e4a",
        "type": "debug",
        "z": "ecfdebb0.d86438",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1110,
        "y": 1180,
        "wires": []
    },
    {
        "id": "e8c1ce0.006ab3",
        "type": "change",
        "z": "ecfdebb0.d86438",
        "name": "Delete payload an measurement",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "measurement",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "notOnline",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 80,
        "wires": [
            [
                "2186ad70.4043b2"
            ]
        ]
    },
    {
        "id": "2186ad70.4043b2",
        "type": "delay",
        "z": "ecfdebb0.d86438",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 670,
        "y": 80,
        "wires": [
            [
                "f8cc761e.7b1c88"
            ]
        ]
    },
    {
        "id": "75b08faa.60031",
        "type": "change",
        "z": "67804b5a.aa2f64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BOS026R_type",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "1e2e6508.ca17eb",
        "type": "comment",
        "z": "ecfdebb0.d86438",
        "name": "BNI0088",
        "info": "",
        "x": 360,
        "y": 320,
        "wires": []
    },
    {
        "id": "b79ab7db.b33228",
        "type": "function",
        "z": "236d48bf.526a08",
        "name": "ProcessInputs: BIP001M",
        "func": "if (msg.BNIPort === (parseInt(global.get('BIP001M'),16)) && msg.command === 10) {\n    msg.payload = msg.response.substr(15,5);\n} else {\n    return;\n    \n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 300,
        "wires": [
            [
                "b35c42e9.64985"
            ]
        ]
    },
    {
        "id": "b35c42e9.64985",
        "type": "function",
        "z": "236d48bf.526a08",
        "name": "BUS Convert to Decimal",
        "func": "msg.hexValue = msg.payload.substr(0,4);\n\nmsg.payload = parseInt(msg.hexValue.split(' ').join(''),16)/100;\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 300,
        "wires": [
            [
                "3113bc6c.798264",
                "a562e749.762fe8",
                "ca47a3cd.77747"
            ]
        ]
    },
    {
        "id": "3113bc6c.798264",
        "type": "ui_chart",
        "z": "236d48bf.526a08",
        "name": "BOD0026 Chart",
        "group": "2a62901c.c0225",
        "order": 3,
        "width": "20",
        "height": "16",
        "label": "BIP001M",
        "chartType": "line",
        "legend": "false",
        "xformat": "ss",
        "interpolate": "linear",
        "nodata": "No Data Yet :-)",
        "dot": false,
        "ymin": "10",
        "ymax": "45",
        "removeOlder": "30",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#0000ff",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 960,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "1b661333.37f31d",
        "type": "comment",
        "z": "236d48bf.526a08",
        "name": "Process Data",
        "info": "",
        "x": 330,
        "y": 220,
        "wires": []
    },
    {
        "id": "528606f2.94f318",
        "type": "link in",
        "z": "236d48bf.526a08",
        "name": "Process Data Handler",
        "links": [
            "5a645a35.b473d4"
        ],
        "x": 275,
        "y": 300,
        "wires": [
            [
                "b79ab7db.b33228"
            ]
        ]
    },
    {
        "id": "53692835.bec8f8",
        "type": "comment",
        "z": "236d48bf.526a08",
        "name": "Service Data 10s Cycle",
        "info": "",
        "x": 320,
        "y": 500,
        "wires": []
    },
    {
        "id": "a562e749.762fe8",
        "type": "change",
        "z": "236d48bf.526a08",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BIP001M_distance",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "85e7ece8.52c97",
        "type": "comment",
        "z": "236d48bf.526a08",
        "name": "Write Service data",
        "info": "",
        "x": 370,
        "y": 920,
        "wires": []
    },
    {
        "id": "427cc4c6.b1414c",
        "type": "comment",
        "z": "236d48bf.526a08",
        "name": "Write Process Data ",
        "info": "",
        "x": 370,
        "y": 960,
        "wires": []
    },
    {
        "id": "49bf2b1c.ff0294",
        "type": "function",
        "z": "236d48bf.526a08",
        "name": "BML01HE Temp array",
        "func": "if (msg.BNIPort === parseInt(global.get('BIP001M'),16) && msg.command === 9 && msg.LowIndex === '52' && msg.SubIndex === \"00\") {\n    msg.payload = msg.response.substr(18,2);\n} else {return;\n    \n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 720,
        "wires": [
            [
                "1eed7a2b.3e3286"
            ]
        ]
    },
    {
        "id": "1eed7a2b.3e3286",
        "type": "function",
        "z": "236d48bf.526a08",
        "name": "Transform",
        "func": "msg.internal_temp_actual = parseInt(msg.payload.substr(0,2),16);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 720,
        "wires": [
            [
                "5378d46b.9fb87c"
            ]
        ]
    },
    {
        "id": "da52c31a.27204",
        "type": "link in",
        "z": "236d48bf.526a08",
        "name": "10s service data return",
        "links": [
            "5a645a35.b473d4"
        ],
        "x": 255,
        "y": 720,
        "wires": [
            [
                "49bf2b1c.ff0294"
            ]
        ]
    },
    {
        "id": "bc53bcf2.1c7b9",
        "type": "ui_chart",
        "z": "236d48bf.526a08",
        "name": "",
        "group": "2a62901c.c0225",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "internal Temperatures",
        "chartType": "line",
        "legend": "false",
        "xformat": "mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-25",
        "ymax": "125",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 2,
        "x": 1180,
        "y": 720,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "5378d46b.9fb87c",
        "type": "function",
        "z": "236d48bf.526a08",
        "name": "internal_temp_actual",
        "func": "msg.payload = msg.internal_temp_actual;\nmsg.topic = \"internal_temp_actual\";\n//msg.label = \"internal_temp_actual\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 900,
        "y": 720,
        "wires": [
            [
                "bc53bcf2.1c7b9",
                "e8c33c0f.e782e"
            ]
        ]
    },
    {
        "id": "e8c33c0f.e782e",
        "type": "change",
        "z": "236d48bf.526a08",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BIP001M_temperature_actual",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "3e94090b.20e506",
        "type": "function",
        "z": "236d48bf.526a08",
        "name": "AL_ReadReq BAW temp Array",
        "func": "msg.Start = '08 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '02'; // Kommando\nmsg.IOLPort = global.get('BIP001M'); //Port Nummer\nmsg.LowIndex = '52'; //IO-Link Index \nmsg.HighIndex = '00'; //IO-Link Index (meiﬂtens 00)\nmsg.SubIndex = '00'; //IO-Link SubIndex \n\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 540,
        "wires": [
            [
                "6cc8bd8e.3dd494"
            ]
        ]
    },
    {
        "id": "a80b88fd.11a228",
        "type": "switch",
        "z": "236d48bf.526a08",
        "name": "",
        "property": "SensorsAreSet",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 560,
        "wires": [
            [
                "3e94090b.20e506"
            ],
            [
                "bbbf66.3b7b6098"
            ]
        ]
    },
    {
        "id": "1a2e751a.49509b",
        "type": "inject",
        "z": "236d48bf.526a08",
        "name": "TS-2s",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 300,
        "y": 560,
        "wires": [
            [
                "a80b88fd.11a228"
            ]
        ]
    },
    {
        "id": "bbbf66.3b7b6098",
        "type": "change",
        "z": "236d48bf.526a08",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Sensors Not Set",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 600,
        "wires": [
            [
                "aaa61960.bd1688"
            ]
        ]
    },
    {
        "id": "aaa61960.bd1688",
        "type": "debug",
        "z": "236d48bf.526a08",
        "name": "Sensors not set",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 880,
        "y": 600,
        "wires": []
    },
    {
        "id": "6cc8bd8e.3dd494",
        "type": "function",
        "z": "236d48bf.526a08",
        "name": "Set Payload to Buffer",
        "func": "if (msg.hex.includes(undefined) === false){\n    var string = msg.hex.replace(/\\s/g,'');\n    msg.ip = global.get('host');\n    msg.port = '1999';\n    msg.payload = Buffer.from(string,\"hex\");\n} else {\n    msg.payload = \"not Present\"\n}\n\nreturn msg;\n\n//msg.payload = Buffer.from(msg.payload, \"hex\");\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1160,
        "y": 540,
        "wires": [
            [
                "b0cdb0ed.9620a"
            ]
        ]
    },
    {
        "id": "b0cdb0ed.9620a",
        "type": "switch",
        "z": "236d48bf.526a08",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "not Present",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1350,
        "y": 540,
        "wires": [
            [
                "780cff48.9b2b"
            ],
            [
                "f11051aa.19dca"
            ]
        ]
    },
    {
        "id": "780cff48.9b2b",
        "type": "link out",
        "z": "236d48bf.526a08",
        "name": "10s Service Data send",
        "links": [
            "d74bc43d.cdfc58"
        ],
        "x": 1495,
        "y": 520,
        "wires": []
    },
    {
        "id": "f11051aa.19dca",
        "type": "debug",
        "z": "236d48bf.526a08",
        "name": "BML06HE not Present",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1580,
        "y": 560,
        "wires": []
    },
    {
        "id": "ca47a3cd.77747",
        "type": "debug",
        "z": "236d48bf.526a08",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 950,
        "y": 220,
        "wires": []
    },
    {
        "id": "7e062f9c.a9402",
        "type": "function",
        "z": "596e638c.9f6c9c",
        "name": "ProcessInputs: BML06HE",
        "func": "if (msg.BNIPort === (parseInt(global.get('BMLL1IOL1011'),16)) && msg.command === 10) {\n    msg.payload = msg.response.substr(15,11);\n} else {\n    return;\n    \n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 240,
        "wires": [
            [
                "471e0a7f.94e364",
                "7220b7d3.266428"
            ]
        ]
    },
    {
        "id": "471e0a7f.94e364",
        "type": "function",
        "z": "596e638c.9f6c9c",
        "name": "BML06HE Convert to Decimal",
        "func": "msg.hexValue = msg.payload;\n\nmsg.payload = (((parseInt(msg.hexValue.split(' ').join(''),16)/1000))-6024);\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 240,
        "wires": [
            [
                "ce9446c.d610db8",
                "3c6ef1ae.2d042e",
                "f7125172.c14df"
            ]
        ]
    },
    {
        "id": "ce9446c.d610db8",
        "type": "ui_chart",
        "z": "596e638c.9f6c9c",
        "name": "",
        "group": "b663cdc1.4e506",
        "order": 3,
        "width": "20",
        "height": "16",
        "label": "BML06HE",
        "chartType": "line",
        "legend": "false",
        "xformat": "ss",
        "interpolate": "linear",
        "nodata": "No Data Yet :-)",
        "dot": false,
        "ymin": "0",
        "ymax": "130",
        "removeOlder": "30",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#0000ff",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 950,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "9afe85a2.78de08",
        "type": "comment",
        "z": "596e638c.9f6c9c",
        "name": "Process Data",
        "info": "",
        "x": 270,
        "y": 160,
        "wires": []
    },
    {
        "id": "82bdf029.d237a",
        "type": "link in",
        "z": "596e638c.9f6c9c",
        "name": "Process Data Handler",
        "links": [
            "5a645a35.b473d4"
        ],
        "x": 215,
        "y": 240,
        "wires": [
            [
                "7e062f9c.a9402"
            ]
        ]
    },
    {
        "id": "d450b198.533f7",
        "type": "comment",
        "z": "596e638c.9f6c9c",
        "name": "Service Data 10s Cycle",
        "info": "",
        "x": 280,
        "y": 380,
        "wires": []
    },
    {
        "id": "39632ab.f31a7d6",
        "type": "comment",
        "z": "596e638c.9f6c9c",
        "name": "Write Service data",
        "info": "",
        "x": 250,
        "y": 860,
        "wires": []
    },
    {
        "id": "98fa8a9e.dfca08",
        "type": "comment",
        "z": "596e638c.9f6c9c",
        "name": "Write Process Data ",
        "info": "",
        "x": 250,
        "y": 900,
        "wires": []
    },
    {
        "id": "7220b7d3.266428",
        "type": "debug",
        "z": "596e638c.9f6c9c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 580,
        "y": 300,
        "wires": []
    },
    {
        "id": "3c6ef1ae.2d042e",
        "type": "debug",
        "z": "596e638c.9f6c9c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 870,
        "y": 300,
        "wires": []
    },
    {
        "id": "f7125172.c14df",
        "type": "change",
        "z": "596e638c.9f6c9c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BML06HE_distance",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "262a11db.877eee",
        "type": "comment",
        "z": "596e638c.9f6c9c",
        "name": "TO Do Internal Device Temps",
        "info": "",
        "x": 680,
        "y": 380,
        "wires": []
    },
    {
        "id": "32e101c8.7f72ee",
        "type": "function",
        "z": "596e638c.9f6c9c",
        "name": "BML01HE Temp array",
        "func": "if (msg.BNIPort === parseInt(global.get('BMLL1IOL1011'),16) && msg.command === 9 && msg.LowIndex === '52' && msg.SubIndex === \"00\") {\n    msg.payload = msg.response.substr(18,5);\n} else {return;\n    \n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 700,
        "wires": [
            [
                "9849a3b.957bf6"
            ]
        ]
    },
    {
        "id": "9849a3b.957bf6",
        "type": "function",
        "z": "596e638c.9f6c9c",
        "name": "Transform",
        "func": "msg.internal_temp_actual = parseInt(msg.payload.split(' ').join(''),16);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 700,
        "wires": [
            [
                "bc3e1c72.b9de2"
            ]
        ]
    },
    {
        "id": "d5a7efdd.af2b3",
        "type": "link in",
        "z": "596e638c.9f6c9c",
        "name": "10s service data return",
        "links": [
            "5a645a35.b473d4"
        ],
        "x": 135,
        "y": 700,
        "wires": [
            [
                "32e101c8.7f72ee"
            ]
        ]
    },
    {
        "id": "50a2bf19.b2a6f",
        "type": "ui_chart",
        "z": "596e638c.9f6c9c",
        "name": "",
        "group": "b663cdc1.4e506",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "internal Temperatures",
        "chartType": "line",
        "legend": "false",
        "xformat": "mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-25",
        "ymax": "125",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 2,
        "x": 1060,
        "y": 700,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "bc3e1c72.b9de2",
        "type": "function",
        "z": "596e638c.9f6c9c",
        "name": "internal_temp_actual",
        "func": "msg.payload = msg.internal_temp_actual;\nmsg.topic = \"internal_temp_actual\";\n//msg.label = \"internal_temp_actual\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 780,
        "y": 700,
        "wires": [
            [
                "50a2bf19.b2a6f",
                "91ef3efb.55e8a",
                "186687d0.c78aa8"
            ]
        ]
    },
    {
        "id": "91ef3efb.55e8a",
        "type": "change",
        "z": "596e638c.9f6c9c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BML06HE_temperature_actual",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "86106757.fc95b8",
        "type": "function",
        "z": "596e638c.9f6c9c",
        "name": "AL_ReadReq BAW temp Array",
        "func": "msg.Start = '08 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '02'; // Kommando\nmsg.IOLPort = global.get('BMLL1IOL1011'); //Port Nummer\nmsg.LowIndex = '52'; //IO-Link Index \nmsg.HighIndex = '00'; //IO-Link Index (meiﬂtens 00)\nmsg.SubIndex = '00'; //IO-Link SubIndex \n\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 520,
        "wires": [
            [
                "28c2b65b.7af9ba"
            ]
        ]
    },
    {
        "id": "43abfaa9.65a5b4",
        "type": "switch",
        "z": "596e638c.9f6c9c",
        "name": "",
        "property": "SensorsAreSet",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 540,
        "wires": [
            [
                "86106757.fc95b8"
            ],
            [
                "10bf340e.b1a63c"
            ]
        ]
    },
    {
        "id": "55f5f721.461a28",
        "type": "inject",
        "z": "596e638c.9f6c9c",
        "name": "TS-2s",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 180,
        "y": 540,
        "wires": [
            [
                "43abfaa9.65a5b4"
            ]
        ]
    },
    {
        "id": "10bf340e.b1a63c",
        "type": "change",
        "z": "596e638c.9f6c9c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Sensors Not Set",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 580,
        "wires": [
            [
                "152c5ea1.b851f1"
            ]
        ]
    },
    {
        "id": "152c5ea1.b851f1",
        "type": "debug",
        "z": "596e638c.9f6c9c",
        "name": "Sensors not set",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 760,
        "y": 580,
        "wires": []
    },
    {
        "id": "28c2b65b.7af9ba",
        "type": "function",
        "z": "596e638c.9f6c9c",
        "name": "Set Payload to Buffer",
        "func": "if (msg.hex.includes(undefined) === false){\n    var string = msg.hex.replace(/\\s/g,'');\n    msg.ip = global.get('host');\n    msg.port = '1999';\n    msg.payload = Buffer.from(string,\"hex\");\n} else {\n    msg.payload = \"not Present\"\n}\n\nreturn msg;\n\n//msg.payload = Buffer.from(msg.payload, \"hex\");\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1040,
        "y": 520,
        "wires": [
            [
                "34b40013.81382",
                "6c7ca32b.132d8c"
            ]
        ]
    },
    {
        "id": "34b40013.81382",
        "type": "switch",
        "z": "596e638c.9f6c9c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "BML06HE not Present",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1230,
        "y": 520,
        "wires": [
            [
                "f9e20fcb.2f8d5"
            ],
            [
                "ddf73a21.64af98"
            ]
        ]
    },
    {
        "id": "f9e20fcb.2f8d5",
        "type": "link out",
        "z": "596e638c.9f6c9c",
        "name": "10s Service Data send",
        "links": [
            "d74bc43d.cdfc58"
        ],
        "x": 1375,
        "y": 500,
        "wires": []
    },
    {
        "id": "ddf73a21.64af98",
        "type": "debug",
        "z": "596e638c.9f6c9c",
        "name": "BML06HE not Present",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1480,
        "y": 540,
        "wires": []
    },
    {
        "id": "186687d0.c78aa8",
        "type": "debug",
        "z": "596e638c.9f6c9c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1010,
        "y": 640,
        "wires": []
    },
    {
        "id": "6c7ca32b.132d8c",
        "type": "debug",
        "z": "596e638c.9f6c9c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1250,
        "y": 580,
        "wires": []
    },
    {
        "id": "8b429bff.25c778",
        "type": "comment",
        "z": "596e638c.9f6c9c",
        "name": "0...65635",
        "info": "",
        "x": 1000,
        "y": 380,
        "wires": []
    },
    {
        "id": "f9a9883b.c628e8",
        "type": "comment",
        "z": "ecfdebb0.d86438",
        "name": "BTL6PFIOL001",
        "info": "",
        "x": 380,
        "y": 1340,
        "wires": []
    },
    {
        "id": "cdf85986.506288",
        "type": "function",
        "z": "ecfdebb0.d86438",
        "name": "Create Database Object",
        "func": "msg.measurement = \"BTL6PFIOL001\";\nmsg.payload = [{\n    distance:               global.get('BTL6PFIOL001_position')\n},\n{\n    tag1:   \"port \"+ global.get('BTL6PFIOL001'),\n    tag2:   \"condition Monitoring\"\n}];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 1400,
        "wires": [
            [
                "6b18119c.1bdb2",
                "456a61d0.5730a"
            ]
        ]
    },
    {
        "id": "9ea5ad56.4a283",
        "type": "change",
        "z": "ecfdebb0.d86438",
        "name": "Delete payload an measurement",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "measurement",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "notOnline",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1380,
        "wires": [
            [
                "bc5775de.58f988"
            ]
        ]
    },
    {
        "id": "bc5775de.58f988",
        "type": "delay",
        "z": "ecfdebb0.d86438",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 670,
        "y": 1380,
        "wires": [
            [
                "1bfb5e72.f733f2"
            ]
        ]
    },
    {
        "id": "1bfb5e72.f733f2",
        "type": "function",
        "z": "ecfdebb0.d86438",
        "name": "check if Sensor is online?",
        "func": "if( (msg.IOLPort = global.get('BTL6PFIOL001')) === undefined){\n    msg.notOnline = true;\n}else{\n    msg.notOnline = false;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 1380,
        "wires": [
            [
                "f176b132.ea5b4",
                "73e033a9.24b76c"
            ]
        ]
    },
    {
        "id": "73e033a9.24b76c",
        "type": "switch",
        "z": "ecfdebb0.d86438",
        "name": "",
        "property": "notOnline",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1110,
        "y": 1380,
        "wires": [
            [
                "98499d1.a80b56"
            ],
            [
                "cdf85986.506288",
                "98499d1.a80b56"
            ]
        ]
    },
    {
        "id": "f176b132.ea5b4",
        "type": "debug",
        "z": "ecfdebb0.d86438",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1110,
        "y": 1340,
        "wires": []
    },
    {
        "id": "62249169.81592",
        "type": "comment",
        "z": "ecfdebb0.d86438",
        "name": "BMP000N",
        "info": "",
        "x": 360,
        "y": 1480,
        "wires": []
    },
    {
        "id": "83f8bf89.ae516",
        "type": "function",
        "z": "ecfdebb0.d86438",
        "name": "Create Database Object",
        "func": "msg.measurement = \"BMP000N\";\nmsg.payload = [{\n    position:                               global.get('BMP000N_position'),\n    temperatureActual:                      global.get('BMP000N_temperature_actual'),\n    temperatureMaxStartup:                  global.get('BMP000N_temperature_max_startup'),\n    temperatureMinStartup:                  global.get('BMP000N_temperature_min_startup'),\n    temperatureMaxLifetime:                 global.get('BMP000N_temperature_max_lifetime'),\n    temperatureMinLifetime:                 global.get('BMP000N_temperature_min_lifetime'),\n    operatingHoursLifetime:                 global.get('BMP000N_operating_hours_lifetime'),\n    operatingHoursSinceMaintenance:         global.get('BMP000N_operating_hours_sinceMaintenance'),\n    operatingHoursSinceStartup:             global.get('BMP000N_operating_hours_sinceStartup'),\n    bootCycleCounter:                       global.get('BMP000N_boot_cylce_cunter')\n},\n{\n    tag1:   \"port \"+ global.get('BMP000N'),\n    tag2:   \"condition Monitoring\"\n}];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 1540,
        "wires": [
            [
                "6b18119c.1bdb2",
                "73a837dd.581ea8"
            ]
        ]
    },
    {
        "id": "98499d1.a80b56",
        "type": "change",
        "z": "ecfdebb0.d86438",
        "name": "Delete payload an measurement",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "measurement",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "notOnline",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1520,
        "wires": [
            [
                "696f0bc6.bd6234"
            ]
        ]
    },
    {
        "id": "696f0bc6.bd6234",
        "type": "delay",
        "z": "ecfdebb0.d86438",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 670,
        "y": 1520,
        "wires": [
            [
                "6d91321b.878f8c"
            ]
        ]
    },
    {
        "id": "6d91321b.878f8c",
        "type": "function",
        "z": "ecfdebb0.d86438",
        "name": "check if Sensor is online?",
        "func": "if( (msg.IOLPort = global.get('BMP000N')) === undefined){\n    msg.notOnline = true;\n}else{\n    msg.notOnline = false;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 1520,
        "wires": [
            [
                "be4380bf.69cf7",
                "8c46cb11.e59a88"
            ]
        ]
    },
    {
        "id": "8c46cb11.e59a88",
        "type": "switch",
        "z": "ecfdebb0.d86438",
        "name": "",
        "property": "notOnline",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1110,
        "y": 1520,
        "wires": [
            [
                "cfbe7ab.5a75588"
            ],
            [
                "83f8bf89.ae516",
                "cfbe7ab.5a75588"
            ]
        ]
    },
    {
        "id": "be4380bf.69cf7",
        "type": "debug",
        "z": "ecfdebb0.d86438",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1110,
        "y": 1480,
        "wires": []
    },
    {
        "id": "d8231c96.1c179",
        "type": "function",
        "z": "4f526bfe.7e34d4",
        "name": "ProcessInputs: BUS BMP000N",
        "func": "if (msg.BNIPort === (parseInt(global.get('BMP000N'),16)) && msg.command === 10) {\n    msg.payload = msg.response.substr(15,17);\n} else {\n    return;\n    \n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 180,
        "wires": [
            [
                "5eb540f8.badea",
                "7c0d09b6.3fe378"
            ]
        ]
    },
    {
        "id": "5eb540f8.badea",
        "type": "function",
        "z": "4f526bfe.7e34d4",
        "name": "BMP000N Convert to Decimal",
        "func": "msg.position = Math.pow((parseInt(msg.payload.substr(0,11).split(' ').join(''),16)),(-6));\n\nmsg.payload = msg.position\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 180,
        "wires": [
            [
                "6fc4afd3.359d1",
                "eb932d0c.f3006",
                "b16ce84e.33a118"
            ]
        ]
    },
    {
        "id": "6fc4afd3.359d1",
        "type": "ui_chart",
        "z": "4f526bfe.7e34d4",
        "name": "BMP000N Position",
        "group": "3af13bb4.dc9ea4",
        "order": 1,
        "width": "0",
        "height": "0",
        "label": "BMP000N Position",
        "chartType": "line",
        "legend": "false",
        "xformat": "ss",
        "interpolate": "linear",
        "nodata": "No Data Yet :-)",
        "dot": false,
        "ymin": "0",
        "ymax": "655",
        "removeOlder": "30",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#0000ff",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1090,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "b721f90c.e8fb08",
        "type": "comment",
        "z": "4f526bfe.7e34d4",
        "name": "Process Data",
        "info": "",
        "x": 330,
        "y": 100,
        "wires": []
    },
    {
        "id": "11f15b93.16d0c4",
        "type": "link in",
        "z": "4f526bfe.7e34d4",
        "name": "Process Data Handler",
        "links": [
            "29fdf072.54f6"
        ],
        "x": 275,
        "y": 180,
        "wires": [
            [
                "d8231c96.1c179"
            ]
        ]
    },
    {
        "id": "7c0d09b6.3fe378",
        "type": "debug",
        "z": "4f526bfe.7e34d4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 640,
        "y": 240,
        "wires": []
    },
    {
        "id": "eb932d0c.f3006",
        "type": "debug",
        "z": "4f526bfe.7e34d4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1050,
        "y": 240,
        "wires": []
    },
    {
        "id": "b16ce84e.33a118",
        "type": "change",
        "z": "4f526bfe.7e34d4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BMP000N_position",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1130,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "e069ff75.4bc4c",
        "type": "comment",
        "z": "4f526bfe.7e34d4",
        "name": "Write Service data",
        "info": "",
        "x": 310,
        "y": 1280,
        "wires": []
    },
    {
        "id": "1d97b09a.07867f",
        "type": "comment",
        "z": "4f526bfe.7e34d4",
        "name": "Write Process Data ",
        "info": "",
        "x": 310,
        "y": 1320,
        "wires": []
    },
    {
        "id": "ceb41a66.c5a2c8",
        "type": "comment",
        "z": "4f526bfe.7e34d4",
        "name": "Service Data 10s Cycle",
        "info": "",
        "x": 340,
        "y": 320,
        "wires": []
    },
    {
        "id": "50ccb308.8e13fc",
        "type": "function",
        "z": "4f526bfe.7e34d4",
        "name": "BMP000N Temp array",
        "func": "if (msg.BNIPort === parseInt(global.get('BMP000N'),16) && msg.command === 9 && msg.LowIndex === '52' && msg.SubIndex === \"00\") {\n    msg.payload = msg.response.substr(18,30);\n} else {return;\n    \n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 800,
        "wires": [
            [
                "3fb63944.5e07d6",
                "9174a300.954b6"
            ]
        ]
    },
    {
        "id": "3fb63944.5e07d6",
        "type": "function",
        "z": "4f526bfe.7e34d4",
        "name": "Transform",
        "func": "msg.internal_temp_actual =          parseInt(msg.payload.substr(0,5).split(' ').join(''),16);\nmsg.internal_temp_max_startup =     parseInt(msg.payload.substr(6,5).split(' ').join(''),16);\nmsg.internal_temp_min_startup =     parseInt(msg.payload.substr(12,5).split(' ').join(''),16);\nmsg.internal_temp_max_lifetime =    parseInt(msg.payload.substr(18,5).split(' ').join(''),16);\nmsg.internal_temp_min_lifetime =    parseInt(msg.payload.substr(24,5).split(' ').join(''),16);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 800,
        "wires": [
            [
                "f4486492.2149f8",
                "980808df.ed8b18",
                "33165e15.5f3582",
                "c65d36da.c00de8",
                "c7af3266.00914",
                "cbefbe59.1f319"
            ]
        ]
    },
    {
        "id": "76642832.c6c758",
        "type": "link in",
        "z": "4f526bfe.7e34d4",
        "name": "10s service data return",
        "links": [
            "29fdf072.54f6"
        ],
        "x": 275,
        "y": 800,
        "wires": [
            [
                "50ccb308.8e13fc",
                "ee4bb47e.f583c8",
                "67175081.cf7e1"
            ]
        ]
    },
    {
        "id": "cb26db06.1eb628",
        "type": "ui_chart",
        "z": "4f526bfe.7e34d4",
        "name": "",
        "group": "3af13bb4.dc9ea4",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "internal Temperatures",
        "chartType": "line",
        "legend": "false",
        "xformat": "mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-25",
        "ymax": "125",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1220,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "f4486492.2149f8",
        "type": "function",
        "z": "4f526bfe.7e34d4",
        "name": "internal_temp_actual",
        "func": "msg.payload = msg.internal_temp_actual;\nmsg.topic = \"internal_temp_actual\";\n//msg.label = \"internal_temp_actual\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 800,
        "wires": [
            [
                "cb26db06.1eb628",
                "14118c57.ea4704"
            ]
        ]
    },
    {
        "id": "14118c57.ea4704",
        "type": "change",
        "z": "4f526bfe.7e34d4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BMP000N_temperature_actual",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1470,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "49537752.cc8bf8",
        "type": "function",
        "z": "4f526bfe.7e34d4",
        "name": "AL_ReadReq BMP000N temp Array index52",
        "func": "msg.Start = '08 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '02'; // Kommando\nmsg.IOLPort = global.get('BMP000N'); //Port Nummer\nmsg.LowIndex = '52'; //IO-Link Index \nmsg.HighIndex = '00'; //IO-Link Index (meiﬂtens 00)\nmsg.SubIndex = '00'; //IO-Link SubIndex \n\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 790,
        "y": 360,
        "wires": [
            [
                "e03a4366.e25a6"
            ]
        ]
    },
    {
        "id": "f302555c.8dff78",
        "type": "switch",
        "z": "4f526bfe.7e34d4",
        "name": "",
        "property": "SensorsAreSet",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 380,
        "wires": [
            [
                "49537752.cc8bf8",
                "92a7d286.f3fc"
            ],
            [
                "f91ba73f.809ee8"
            ]
        ]
    },
    {
        "id": "95a51c60.53216",
        "type": "inject",
        "z": "4f526bfe.7e34d4",
        "name": "TS-10s",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 280,
        "y": 380,
        "wires": [
            [
                "f302555c.8dff78"
            ]
        ]
    },
    {
        "id": "f91ba73f.809ee8",
        "type": "change",
        "z": "4f526bfe.7e34d4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Sensors Not Set",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 480,
        "wires": [
            [
                "aa40878e.51d488"
            ]
        ]
    },
    {
        "id": "aa40878e.51d488",
        "type": "debug",
        "z": "4f526bfe.7e34d4",
        "name": "Sensors not set",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 910,
        "y": 480,
        "wires": []
    },
    {
        "id": "e03a4366.e25a6",
        "type": "function",
        "z": "4f526bfe.7e34d4",
        "name": "Set Payload to Buffer",
        "func": "if (msg.hex.includes(undefined) === false){\n    var string = msg.hex.replace(/\\s/g,'');\n    msg.ip = global.get('host');\n    msg.port = '1999';\n    msg.payload = Buffer.from(string,\"hex\");\n} else {\n    msg.payload = \"not Present\"\n}\n\nreturn msg;\n\n//msg.payload = Buffer.from(msg.payload, \"hex\");\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1120,
        "y": 360,
        "wires": [
            [
                "fb7f0bf7.8f6d88"
            ]
        ]
    },
    {
        "id": "2cb512ce.73312e",
        "type": "switch",
        "z": "4f526bfe.7e34d4",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "not Present",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1510,
        "y": 360,
        "wires": [
            [
                "569dd534.cf27cc"
            ],
            [
                "a1576fb7.5dd32"
            ]
        ]
    },
    {
        "id": "569dd534.cf27cc",
        "type": "link out",
        "z": "4f526bfe.7e34d4",
        "name": "10s Service Data send",
        "links": [
            "d3db8e06.f0851"
        ],
        "x": 1615,
        "y": 340,
        "wires": []
    },
    {
        "id": "a1576fb7.5dd32",
        "type": "debug",
        "z": "4f526bfe.7e34d4",
        "name": "BMP000N not Present",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1700,
        "y": 380,
        "wires": []
    },
    {
        "id": "980808df.ed8b18",
        "type": "function",
        "z": "4f526bfe.7e34d4",
        "name": "internal_temp_max_startup",
        "func": "msg.payload = msg.internal_temp_max_startup;\nmsg.topic = \"internal_temp_max_startup\";\n//msg.label = \"internal_temp_max_startup\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 840,
        "wires": [
            [
                "3e4d2a80.400ee6",
                "cb26db06.1eb628"
            ]
        ]
    },
    {
        "id": "33165e15.5f3582",
        "type": "function",
        "z": "4f526bfe.7e34d4",
        "name": "internal_temp_min_startup",
        "func": "msg.payload = msg.internal_temp_min_startup;\nmsg.topic = \"internal_temp_min_startup\";\n//msg.label = \"internal_temp_min_startup\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 880,
        "wires": [
            [
                "b5777699.74ad78",
                "cb26db06.1eb628"
            ]
        ]
    },
    {
        "id": "c65d36da.c00de8",
        "type": "function",
        "z": "4f526bfe.7e34d4",
        "name": "internal_temp_max_lifetime",
        "func": "msg.payload = msg.internal_temp_max_lifetime;\nmsg.topic = \"internal_temp_max_lifetime\";\n//msg.label = \"internal_temp_max_lifetime\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 920,
        "wires": [
            [
                "b3f99e71.d314a",
                "cb26db06.1eb628"
            ]
        ]
    },
    {
        "id": "c7af3266.00914",
        "type": "function",
        "z": "4f526bfe.7e34d4",
        "name": "internal_temp_min_lifetime",
        "func": "msg.payload = msg.internal_temp_min_lifetime;\nmsg.topic = \"internal_temp_min_lifetime\";\n//msg.label = \"internal_temp_min_lifetime\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 960,
        "wires": [
            [
                "e98bedde.2080c",
                "cb26db06.1eb628"
            ]
        ]
    },
    {
        "id": "3e4d2a80.400ee6",
        "type": "change",
        "z": "4f526bfe.7e34d4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BMP000N_temperature_max_startup",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1490,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "b5777699.74ad78",
        "type": "change",
        "z": "4f526bfe.7e34d4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BMP000N_temperature_min_startup",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1490,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "b3f99e71.d314a",
        "type": "change",
        "z": "4f526bfe.7e34d4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BMP000N_temperature_max_lifetime",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1490,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "e98bedde.2080c",
        "type": "change",
        "z": "4f526bfe.7e34d4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BMP000N_temperature_min_lifetime",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1490,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "ee4bb47e.f583c8",
        "type": "function",
        "z": "4f526bfe.7e34d4",
        "name": "BMP000NOperating Hours",
        "func": "if (msg.BNIPort === parseInt(global.get('BMP000N'),16) && msg.command === 9 && msg.LowIndex === '57' && msg.SubIndex === \"00\") {\n    msg.payload = msg.response.substr(18,36);\n} else {return;\n    \n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 1200,
        "wires": [
            [
                "a103a92.ce01a58",
                "fd15b21c.09423"
            ]
        ]
    },
    {
        "id": "5bc1a50b.b201ac",
        "type": "function",
        "z": "4f526bfe.7e34d4",
        "name": "Set Payload to Buffer",
        "func": "if (msg.hex.includes(undefined) === false){\n    var string = msg.hex.replace(/\\s/g,'');\n    msg.ip = global.get('host');\n    msg.port = '1999';\n    msg.payload = Buffer.from(string,\"hex\");\n} else {\n    msg.payload = \"not Present\"\n}\n\nreturn msg;\n\n//msg.payload = Buffer.from(msg.payload, \"hex\");\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1120,
        "y": 640,
        "wires": [
            [
                "fb7f0bf7.8f6d88"
            ]
        ]
    },
    {
        "id": "7887cb8a.95a2f4",
        "type": "inject",
        "z": "4f526bfe.7e34d4",
        "name": "TS-5min",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "x": 330,
        "y": 660,
        "wires": [
            [
                "e6b49cf0.fdc59"
            ]
        ]
    },
    {
        "id": "e6b49cf0.fdc59",
        "type": "switch",
        "z": "4f526bfe.7e34d4",
        "name": "",
        "property": "SensorsAreSet",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 500,
        "y": 660,
        "wires": [
            [
                "912f5305.9fe21"
            ],
            [
                "1a80750a.4c5a2b"
            ]
        ]
    },
    {
        "id": "1a80750a.4c5a2b",
        "type": "change",
        "z": "4f526bfe.7e34d4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Sensors Not Set",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 700,
        "wires": [
            [
                "d4a8f051.64267"
            ]
        ]
    },
    {
        "id": "d4a8f051.64267",
        "type": "debug",
        "z": "4f526bfe.7e34d4",
        "name": "Sensors not set",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 910,
        "y": 700,
        "wires": []
    },
    {
        "id": "6a183527.7c2ddc",
        "type": "ui_text",
        "z": "4f526bfe.7e34d4",
        "group": "b6782b24.1bb138",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Operating Hours:",
        "format": "{{msg.payload}} h",
        "layout": "row-left",
        "x": 1130,
        "y": 1180,
        "wires": []
    },
    {
        "id": "40c440ef.64144",
        "type": "change",
        "z": "4f526bfe.7e34d4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BMP000N_operating_hours_lifetime",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1490,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "9174a300.954b6",
        "type": "debug",
        "z": "4f526bfe.7e34d4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 690,
        "y": 760,
        "wires": []
    },
    {
        "id": "dbfed402.62f828",
        "type": "comment",
        "z": "4f526bfe.7e34d4",
        "name": "Service Data 5m Cycle",
        "info": "",
        "x": 340,
        "y": 600,
        "wires": []
    },
    {
        "id": "912f5305.9fe21",
        "type": "function",
        "z": "4f526bfe.7e34d4",
        "name": "AL_ReadReq BMP000N Operating Hours",
        "func": "msg.Start = '08 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '02'; // Kommando\nmsg.IOLPort = global.get('BMP000N'); //Port Nummer\nmsg.LowIndex = '57'; //IO-Link Index \nmsg.HighIndex = '00'; //IO-Link Index (meiﬂtens 00)\nmsg.SubIndex = '00'; //IO-Link SubIndex \n\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 780,
        "y": 640,
        "wires": [
            [
                "5bc1a50b.b201ac"
            ]
        ]
    },
    {
        "id": "92a7d286.f3fc",
        "type": "function",
        "z": "4f526bfe.7e34d4",
        "name": "AL_ReadReq BMP000N Boot Cycle Counter",
        "func": "msg.Start = '08 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '02'; // Kommando\nmsg.IOLPort = global.get('BMP000N'); //Port Nummer\nmsg.LowIndex = '58'; //IO-Link Index \nmsg.HighIndex = '00'; //IO-Link Index (meiﬂtens 00)\nmsg.SubIndex = '00'; //IO-Link SubIndex \n\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 790,
        "y": 400,
        "wires": [
            [
                "5f49bb01.49ab34"
            ]
        ]
    },
    {
        "id": "5f49bb01.49ab34",
        "type": "function",
        "z": "4f526bfe.7e34d4",
        "name": "Set Payload to Buffer",
        "func": "if (msg.hex.includes(undefined) === false){\n    var string = msg.hex.replace(/\\s/g,'');\n    msg.ip = global.get('host');\n    msg.port = '1999';\n    msg.payload = Buffer.from(string,\"hex\");\n} else {\n    msg.payload = \"not Present\"\n}\n\nreturn msg;\n\n//msg.payload = Buffer.from(msg.payload, \"hex\");\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1120,
        "y": 400,
        "wires": [
            [
                "fb7f0bf7.8f6d88"
            ]
        ]
    },
    {
        "id": "fb7f0bf7.8f6d88",
        "type": "simple-queue",
        "z": "4f526bfe.7e34d4",
        "name": "queue1",
        "firstMessageBypass": true,
        "bypassInterval": "100",
        "x": 1360,
        "y": 360,
        "wires": [
            [
                "2cb512ce.73312e"
            ]
        ]
    },
    {
        "id": "a103a92.ce01a58",
        "type": "debug",
        "z": "4f526bfe.7e34d4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 700,
        "y": 1260,
        "wires": []
    },
    {
        "id": "cbefbe59.1f319",
        "type": "debug",
        "z": "4f526bfe.7e34d4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 870,
        "y": 760,
        "wires": []
    },
    {
        "id": "fd15b21c.09423",
        "type": "function",
        "z": "4f526bfe.7e34d4",
        "name": "Transform",
        "func": "msg.hours_lifetime =            parseInt(msg.payload.substr(0,11).split(' ').join(''),16);\nmsg.hours_sinceMaintenance =    parseInt(msg.payload.substr(12,11).split(' ').join(''),16);\nmsg.hours_sinceStartup =        parseInt(msg.payload.substr(24,11).split(' ').join(''),16);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 1200,
        "wires": [
            [
                "7d989cd6.b93134",
                "1f017f8d.dc691",
                "b0a26ed2.51239",
                "91bd32c6.4d439"
            ]
        ]
    },
    {
        "id": "aa980e6e.55c6d",
        "type": "change",
        "z": "4f526bfe.7e34d4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BMP000N_operating_hours_sinceMaintenance",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1520,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "7d989cd6.b93134",
        "type": "function",
        "z": "4f526bfe.7e34d4",
        "name": "hours_lifetime",
        "func": "msg.payload = msg.hours_lifetime;\nmsg.topic = \"hours_lifetime\";\n//msg.label = \"internal_temp_actual\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 900,
        "y": 1200,
        "wires": [
            [
                "40c440ef.64144",
                "6a183527.7c2ddc"
            ]
        ]
    },
    {
        "id": "1f017f8d.dc691",
        "type": "function",
        "z": "4f526bfe.7e34d4",
        "name": "hours_sinceMaintenance",
        "func": "msg.payload = msg.hours_sinceMaintenance;\nmsg.topic = \"hours_sinceMaintenance\";\n//msg.label = \"internal_temp_actual\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 930,
        "y": 1240,
        "wires": [
            [
                "aa980e6e.55c6d"
            ]
        ]
    },
    {
        "id": "b0a26ed2.51239",
        "type": "function",
        "z": "4f526bfe.7e34d4",
        "name": "hours_sinceStartup",
        "func": "msg.payload = msg.hours_sinceStartup;\nmsg.topic = \"hours_sinceStartup\";\n//msg.label = \"internal_temp_actual\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 910,
        "y": 1280,
        "wires": [
            [
                "5943b5ee.68a2dc"
            ]
        ]
    },
    {
        "id": "5943b5ee.68a2dc",
        "type": "change",
        "z": "4f526bfe.7e34d4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BMP000N_operating_hours_sinceStartup",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1500,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "67175081.cf7e1",
        "type": "function",
        "z": "4f526bfe.7e34d4",
        "name": "BMP000N Boot Cycle Counter",
        "func": "if (msg.BNIPort === parseInt(global.get('BMP000N'),16) && msg.command === 9 && msg.LowIndex === '58' && msg.SubIndex === \"00\") {\n    msg.payload = msg.response.substr(18,12);\n} else {return;\n    \n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 1040,
        "wires": [
            [
                "226b8503.d845fa",
                "846174f4.3128d8"
            ]
        ]
    },
    {
        "id": "226b8503.d845fa",
        "type": "function",
        "z": "4f526bfe.7e34d4",
        "name": "Calc cycle Counter",
        "func": "msg.boot_cylce_cunter = parseInt(msg.payload.split(' ').join(''),16);\n\nmsg.payload = msg.boot_cylce_cunter;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 1040,
        "wires": [
            [
                "80981f8b.0bd69",
                "a361a598.2c7738",
                "eda7c7b7.f526d8"
            ]
        ]
    },
    {
        "id": "80981f8b.0bd69",
        "type": "change",
        "z": "4f526bfe.7e34d4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "BMP000N_boot_cylce_cunter",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1470,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "a361a598.2c7738",
        "type": "ui_text",
        "z": "4f526bfe.7e34d4",
        "group": "b6782b24.1bb138",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "boot_cylce_cunter",
        "label": "boot_cylce_cunter",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1130,
        "y": 1020,
        "wires": []
    },
    {
        "id": "846174f4.3128d8",
        "type": "debug",
        "z": "4f526bfe.7e34d4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 710,
        "y": 1100,
        "wires": []
    },
    {
        "id": "91bd32c6.4d439",
        "type": "debug",
        "z": "4f526bfe.7e34d4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 870,
        "y": 1160,
        "wires": []
    },
    {
        "id": "eda7c7b7.f526d8",
        "type": "debug",
        "z": "4f526bfe.7e34d4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 930,
        "y": 1100,
        "wires": []
    },
    {
        "id": "456a61d0.5730a",
        "type": "debug",
        "z": "ecfdebb0.d86438",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1550,
        "y": 1360,
        "wires": []
    },
    {
        "id": "73a837dd.581ea8",
        "type": "debug",
        "z": "ecfdebb0.d86438",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1550,
        "y": 1500,
        "wires": []
    },
    {
        "id": "615a8bb3.5ee394",
        "type": "debug",
        "z": "f2cf66f1.8deb18",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 770,
        "y": 1120,
        "wires": []
    },
    {
        "id": "8ecde671.bc4b08",
        "type": "debug",
        "z": "f2cf66f1.8deb18",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1650,
        "y": 900,
        "wires": []
    },
    {
        "id": "e55077dc.fd27a",
        "type": "function",
        "z": "e393e3b.e73752",
        "name": "construct Devices object and set Global values",
        "func": "//construct Devices object: \nmsg.devices = { \n    \"Port 0\":msg.payload.ports[0].productId,\n    \"Port 1\":msg.payload.ports[1].productId,\n    \"Port 2\":msg.payload.ports[2].productId,\n    \"Port 3\":msg.payload.ports[3].productId,\n    \"Port 4\":msg.payload.ports[4].productId,\n    \"Port 5\":msg.payload.ports[5].productId,\n    \"Port 6\":msg.payload.ports[6].productId,\n    \"Port 7\":msg.payload.ports[7].productId\n};\nglobal.set('BOS026R',msg.portnumberBOS026R);\nglobal.set('BAE00TP',msg.portnumberBAE00TP);\nglobal.set('BNI00E0',msg.portnumberBNI00E0);\nglobal.set('BUS004P',msg.portnumberBUS004P);\nglobal.set('BNI0088',msg.portnumberBNI0088);\nglobal.set('BNI0008',msg.portnumberBNI0008);\nglobal.set('BAW004M',msg.portnumberBAW004M);\nglobal.set('BTL6PFIOL001',msg.portnumberBTL6PFIOL001);\nglobal.set('BTS0002',msg.portnumberBTS0002);\nglobal.set('BOD0026',msg.portnumberBOD0026);\nglobal.set('BOD0020',msg.portnumberBOD0020);\nglobal.set('DS235',msg.portnumberDS235);\nglobal.set('BCS012N',msg.portnumberBCS012N);\nglobal.set('BES04FK',msg.portnumberBES04FK);\nglobal.set('BOD0023',msg.portnumberBOD0023);\nglobal.set('BMP000N',msg.portnumberBMP000N);\nglobal.set('BIP001M',msg.portnumberBIP001M);\nglobal.set('BMLL1IOL1011',msg.portnumberBMLL1IOL1011);\nmsg.knownSensors = {\n    1:\"BOS026R\",\n    2:\"BAE00TP\",\n    3:\"BNI00E0\",\n    4:\"BUS004P\",\n    5:\"BNI0088\",\n    6:\"BNI0008\"\n}\n\nfor (i = 0;i<(msg.devices.length);i++){\n    \n}\n/*\nswitch (msg.devices[\"Port 0\"]) {\n    case :\n        //code\n        break;\n    case :\n        //code\n        break;\n    default:\n        //code\n}\n*/\n\n/*\nif       (msg.devices[\"Port 0\"] === \"BMP000N\"){\n    msg.portnumberBMP000N = \"00\";\n}else if (msg.devices[\"Port 1\"] === \"BMP000N\"){\n    msg.portnumberBMP000N = \"08\";\n}else if (msg.devices[\"Port 2\"] === \"BMP000N\"){\n    msg.portnumberBMP000N = \"02\";\n}else if (msg.devices[\"Port 3\"] === \"BMP000N\"){\n    msg.portnumberBMP000N = \"0A\";\n}else if (msg.devices[\"Port 4\"] === \"BMP000N\"){\n    msg.portnumberBMP000N = \"04\";\n}else if (msg.devices[\"Port 5\"] === \"BMP000N\"){\n    msg.portnumberBMP000N = \"0C\";\n}else if (msg.devices[\"Port 6\"] === \"BMP000N\"){\n    msg.portnumberBMP000N = \"06\";\n}else if (msg.devices[\"Port 7\"] === \"BMP000N\"){\n    msg.portnumberBMP000N = \"0E\";\n}else {\n    msg.portnumberBOD0023 = undefined;\n}\nglobal.set('BMP000N',msg.portnumberBMP000N);\n*/\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1140,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "2fdaf93c.04a99e",
        "type": "function",
        "z": "f2d56325.6c459",
        "name": "ProcessInputs: BCM0002_AIO_TBD",
        "func": "if (msg.BNIPort === (parseInt(global.get('BCM0002_AIO_TBD'),16)) && msg.command === 10) {\n    msg.payload = msg.response.substr(15,59);\n} else {\n    return;\n    \n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 330,
        "y": 320,
        "wires": [
            [
                "ee0b74e6.453218"
            ]
        ]
    },
    {
        "id": "592821b7.c85ed",
        "type": "comment",
        "z": "f2d56325.6c459",
        "name": "Process Data",
        "info": "",
        "x": 190,
        "y": 240,
        "wires": []
    },
    {
        "id": "dfd32cf4.50dd58",
        "type": "link in",
        "z": "f2d56325.6c459",
        "name": "Process Data Handler",
        "links": [
            "29fdf072.54f6"
        ],
        "x": 135,
        "y": 320,
        "wires": [
            [
                "2fdaf93c.04a99e"
            ]
        ]
    },
    {
        "id": "a32bbb78.e93038",
        "type": "comment",
        "z": "f2d56325.6c459",
        "name": "Service Data 10s Cycle",
        "info": "",
        "x": 200,
        "y": 460,
        "wires": []
    },
    {
        "id": "1e70c7ee.dd03e",
        "type": "comment",
        "z": "f2d56325.6c459",
        "name": "Write Service data",
        "info": "",
        "x": 170,
        "y": 1160,
        "wires": []
    },
    {
        "id": "1d34b463.9d7c24",
        "type": "comment",
        "z": "f2d56325.6c459",
        "name": "Write Process Data ",
        "info": "",
        "x": 170,
        "y": 1220,
        "wires": []
    },
    {
        "id": "71d1024e.b4786c",
        "type": "inject",
        "z": "e393e3b.e73752",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 220,
        "y": 820,
        "wires": [
            [
                "a7ad9f00.0142"
            ]
        ]
    },
    {
        "id": "a7ad9f00.0142",
        "type": "link out",
        "z": "e393e3b.e73752",
        "name": "Init all",
        "links": [
            "f97fdd91.00e",
            "66cc06df.5eec28",
            "2d1e7156.efa60e",
            "853b92dc.756dc",
            "66a7da4d.22af84",
            "6b98c052.87f84",
            "6f698c0c.9ecf24",
            "febdc4b2.55bf78",
            "55f536b8.987c18",
            "fc6a3a49.1f2b88",
            "a8dc1727.2997b8",
            "1708f0a9.9b112f",
            "22aa4dbd.3b6662",
            "dba9871.22c4d78",
            "ddb2d088.bb33d",
            "936b42c8.8c34d8"
        ],
        "x": 435,
        "y": 820,
        "wires": []
    },
    {
        "id": "f97fdd91.00e",
        "type": "link in",
        "z": "67804b5a.aa2f64",
        "name": "",
        "links": [
            "a7ad9f00.0142"
        ],
        "x": 160,
        "y": 620,
        "wires": [
            [
                "12a63eaa.6bd931"
            ]
        ]
    },
    {
        "id": "66cc06df.5eec28",
        "type": "link in",
        "z": "67804b5a.aa2f64",
        "name": "",
        "links": [
            "a7ad9f00.0142"
        ],
        "x": 195,
        "y": 1160,
        "wires": [
            [
                "b6a93eb9.f0e0a"
            ]
        ]
    },
    {
        "id": "2d1e7156.efa60e",
        "type": "link in",
        "z": "ab36cfc2.069bd",
        "name": "",
        "links": [
            "a7ad9f00.0142"
        ],
        "x": 415,
        "y": 480,
        "wires": [
            [
                "82f6f77f.a909a8"
            ]
        ]
    },
    {
        "id": "853b92dc.756dc",
        "type": "link in",
        "z": "ab36cfc2.069bd",
        "name": "",
        "links": [
            "a7ad9f00.0142"
        ],
        "x": 415,
        "y": 1040,
        "wires": [
            [
                "26371ec8.86e922"
            ]
        ]
    },
    {
        "id": "66a7da4d.22af84",
        "type": "link in",
        "z": "6381dee2.b8bb4",
        "name": "",
        "links": [
            "a7ad9f00.0142"
        ],
        "x": 375,
        "y": 420,
        "wires": [
            [
                "aeff76e2.664528"
            ]
        ]
    },
    {
        "id": "6b98c052.87f84",
        "type": "link in",
        "z": "f2cf66f1.8deb18",
        "name": "",
        "links": [
            "a7ad9f00.0142"
        ],
        "x": 155,
        "y": 900,
        "wires": [
            [
                "11ae219f.c84d8e"
            ]
        ]
    },
    {
        "id": "6f698c0c.9ecf24",
        "type": "link in",
        "z": "f2cf66f1.8deb18",
        "name": "",
        "links": [
            "a7ad9f00.0142"
        ],
        "x": 155,
        "y": 980,
        "wires": [
            [
                "ac2ce396.d095c"
            ]
        ]
    },
    {
        "id": "febdc4b2.55bf78",
        "type": "link in",
        "z": "d85e9c9b.15b92",
        "name": "",
        "links": [
            "a7ad9f00.0142"
        ],
        "x": 235,
        "y": 480,
        "wires": [
            [
                "43c95950.a15a38"
            ]
        ]
    },
    {
        "id": "55f536b8.987c18",
        "type": "link in",
        "z": "d85e9c9b.15b92",
        "name": "",
        "links": [
            "a7ad9f00.0142"
        ],
        "x": 235,
        "y": 600,
        "wires": [
            [
                "e0b9f239.5cc23"
            ]
        ]
    },
    {
        "id": "fc6a3a49.1f2b88",
        "type": "link in",
        "z": "6484b8ec.c50888",
        "name": "",
        "links": [
            "a7ad9f00.0142"
        ],
        "x": 375,
        "y": 580,
        "wires": [
            [
                "b3d15e28.8ebe6"
            ]
        ]
    },
    {
        "id": "a8dc1727.2997b8",
        "type": "link in",
        "z": "236d48bf.526a08",
        "name": "",
        "links": [
            "a7ad9f00.0142"
        ],
        "x": 355,
        "y": 600,
        "wires": [
            [
                "a80b88fd.11a228"
            ]
        ]
    },
    {
        "id": "1708f0a9.9b112f",
        "type": "link in",
        "z": "596e638c.9f6c9c",
        "name": "",
        "links": [
            "a7ad9f00.0142"
        ],
        "x": 215,
        "y": 500,
        "wires": [
            [
                "43abfaa9.65a5b4"
            ]
        ]
    },
    {
        "id": "22aa4dbd.3b6662",
        "type": "link in",
        "z": "4f526bfe.7e34d4",
        "name": "",
        "links": [
            "a7ad9f00.0142"
        ],
        "x": 315,
        "y": 440,
        "wires": [
            [
                "f302555c.8dff78"
            ]
        ]
    },
    {
        "id": "dba9871.22c4d78",
        "type": "link in",
        "z": "4f526bfe.7e34d4",
        "name": "",
        "links": [
            "a7ad9f00.0142"
        ],
        "x": 375,
        "y": 720,
        "wires": [
            [
                "e6b49cf0.fdc59"
            ]
        ]
    },
    {
        "id": "ddb2d088.bb33d",
        "type": "link in",
        "z": "780da233.7168fc",
        "name": "",
        "links": [
            "a7ad9f00.0142"
        ],
        "x": 315,
        "y": 700,
        "wires": [
            [
                "72b4db2c.fcd4c4"
            ]
        ]
    },
    {
        "id": "364d85ce.3f583a",
        "type": "debug",
        "z": "f2d56325.6c459",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "PD1",
        "targetType": "msg",
        "x": 780,
        "y": 180,
        "wires": []
    },
    {
        "id": "ee0b74e6.453218",
        "type": "function",
        "z": "f2d56325.6c459",
        "name": "split PD, calc PD1, PD2, PD3, PD4",
        "func": "msg.PD1 = \"0x\"+msg.payload.substr(0,11).split(' ').join('');\nmsg.PD1cal = Int2Float32(Number(msg.PD1));\nglobal.set('BCM0002_AIO_TBD_RMSx',msg.PD1cal);\nmsg.PD2 = \"0x\"+msg.payload.substr(12,11).split(' ').join('');\nmsg.PD2cal = Int2Float32(Number(msg.PD2));\nglobal.set('BCM0002_AIO_TBD_RMSy',msg.PD2cal);\nmsg.PD3 = \"0x\"+msg.payload.substr(24,11).split(' ').join('');\nmsg.PD3cal = Int2Float32(Number(msg.PD3));\nglobal.set('BCM0002_AIO_TBD_RMSz',msg.PD3cal);\nmsg.PD4 = \"0x\"+msg.payload.substr(36,11).split(' ').join('');\nmsg.PD4cal = Int2Float32(Number(msg.PD4));\nglobal.set('BCM0002_AIO_TBD_contactTemp',msg.PD4cal);\n\n\n\nreturn msg;\n\nfunction Int2Float32(bytes) {\n    var sign = (bytes & 0x80000000) ? -1 : 1;\n    var exponent = ((bytes >> 23) & 0xFF) - 127;\n    var significand = (bytes & ~(-1 << 23));\n\n    if (exponent == 128) \n        return sign * ((significand) ? Number.NaN : Number.POSITIVE_INFINITY);\n\n    if (exponent == -127) {\n        if (significand === 0) return sign * 0.0;\n        exponent = -126;\n        significand /= (1 << 22);\n    } else significand = (significand | (1 << 23)) / (1 << 23);\n\n    return sign * significand * Math.pow(2, exponent);\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 280,
        "wires": [
            [
                "364d85ce.3f583a",
                "5f6608e5.609418"
            ]
        ]
    },
    {
        "id": "5f6608e5.609418",
        "type": "debug",
        "z": "f2d56325.6c459",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 770,
        "y": 140,
        "wires": []
    },
    {
        "id": "7a2db1c6.2eff9",
        "type": "comment",
        "z": "ecfdebb0.d86438",
        "name": "BCM",
        "info": "",
        "x": 350,
        "y": 1600,
        "wires": []
    },
    {
        "id": "dd8dcc88.9dd78",
        "type": "function",
        "z": "ecfdebb0.d86438",
        "name": "Create Database Object",
        "func": "msg.measurement = \"BCM0001\";\nmsg.payload = [{\n    RMSx:                                   global.get('BCM0002_AIO_TBD_RMSx')||0,\n    RMSy:                                   global.get('BCM0002_AIO_TBD_RMSy')||0,\n    RMSz:                                   global.get('BCM0002_AIO_TBD_RMSz')||0,\n    contactTemperature:                     global.get('BCM0002_AIO_TBD_contactTemp')||0,\n    ambientPressure:                        global.get('BCM0002_AIO_TBD_ambientPressure')||0,\n    ambeinthumidity:                        global.get('BCM0002_AIO_TBD_ambientHumidity')||0,\n    temeratureActual:                       global.get('BCM0002_AIO_TBD_temperature_actual')||0,\n    operatingHours:                         global.get('BCM0002_AIO_TBD_operating_hours')||0,\n    bootCycleCounter:                       global.get('BCM0002_AIO_TBD_boot_cylce_cunter')||0\n},\n{\n    tag1:   \"port \"+ global.get('BCM0002_AIO_TBD'),\n    tag2:   \"condition Monitoring\"\n}];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 1660,
        "wires": [
            [
                "fe49da28.e8c438",
                "6b18119c.1bdb2"
            ]
        ]
    },
    {
        "id": "cfbe7ab.5a75588",
        "type": "change",
        "z": "ecfdebb0.d86438",
        "name": "Delete payload an measurement",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "measurement",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "notOnline",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1640,
        "wires": [
            [
                "59f02ded.9880ac"
            ]
        ]
    },
    {
        "id": "59f02ded.9880ac",
        "type": "delay",
        "z": "ecfdebb0.d86438",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 670,
        "y": 1640,
        "wires": [
            [
                "f3bcd867.a3161"
            ]
        ]
    },
    {
        "id": "f3bcd867.a3161",
        "type": "function",
        "z": "ecfdebb0.d86438",
        "name": "check if Sensor is online?",
        "func": "if( (msg.IOLPort = global.get('BCM0002_AIO_TBD')) === undefined){\n    msg.notOnline = true;\n}else{\n    msg.notOnline = false;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 1640,
        "wires": [
            [
                "d1de82c9.29ce28",
                "511e7e57.bfb04"
            ]
        ]
    },
    {
        "id": "511e7e57.bfb04",
        "type": "switch",
        "z": "ecfdebb0.d86438",
        "name": "",
        "property": "notOnline",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1110,
        "y": 1640,
        "wires": [
            [],
            [
                "dd8dcc88.9dd78"
            ]
        ]
    },
    {
        "id": "d1de82c9.29ce28",
        "type": "debug",
        "z": "ecfdebb0.d86438",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1110,
        "y": 1600,
        "wires": []
    },
    {
        "id": "fe49da28.e8c438",
        "type": "debug",
        "z": "ecfdebb0.d86438",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1550,
        "y": 1620,
        "wires": []
    },
    {
        "id": "b42ec3ec.f9eb28",
        "type": "comment",
        "z": "e393e3b.e73752",
        "name": "Initialize all ",
        "info": "",
        "x": 230,
        "y": 760,
        "wires": []
    },
    {
        "id": "936b42c8.8c34d8",
        "type": "link in",
        "z": "f2d56325.6c459",
        "name": "",
        "links": [
            "a7ad9f00.0142"
        ],
        "x": 195,
        "y": 500,
        "wires": [
            [
                "62942959.278448"
            ]
        ]
    },
    {
        "id": "6c3661d0.b45d1",
        "type": "inject",
        "z": "f2d56325.6c459",
        "name": "TS-10s",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "x": 160,
        "y": 580,
        "wires": [
            [
                "62942959.278448"
            ]
        ]
    },
    {
        "id": "62942959.278448",
        "type": "switch",
        "z": "f2d56325.6c459",
        "name": "",
        "property": "SensorsAreSet",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 330,
        "y": 580,
        "wires": [
            [
                "f49d8ff.550e5f",
                "a9f20a3d.387a98",
                "ee5abae1.1228c",
                "313de984.82962e",
                "2b1e4742.fe634"
            ],
            []
        ]
    },
    {
        "id": "f49d8ff.550e5f",
        "type": "function",
        "z": "f2d56325.6c459",
        "name": "AL_ReadReq BCM Ambient Pressure",
        "func": "msg.Start = '08 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '02'; // Kommando\nmsg.IOLPort = global.get('BCM0002_AIO_TBD'); //Port Nummer\nmsg.LowIndex = '49'; //IO-Link Index \nmsg.HighIndex = '20'; //IO-Link Index (meiﬂtens 00)\nmsg.SubIndex = '01'; //IO-Link SubIndex \n//msg.Index = 'XX';\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 560,
        "wires": [
            [
                "14f5067.ae4b8fa"
            ]
        ]
    },
    {
        "id": "14f5067.ae4b8fa",
        "type": "simple-queue",
        "z": "f2d56325.6c459",
        "name": "queue1",
        "firstMessageBypass": true,
        "bypassInterval": "1000",
        "x": 860,
        "y": 560,
        "wires": [
            [
                "70b0d83d.143ed"
            ]
        ]
    },
    {
        "id": "70b0d83d.143ed",
        "type": "function",
        "z": "f2d56325.6c459",
        "name": "Set Payload to Buffer",
        "func": "if (msg.hex.includes(undefined) === false){\n    var string = msg.hex.replace(/\\s/g,'');\n    msg.ip = global.get('host');\n    msg.port = '1999';\n    msg.payload = Buffer.from(string,\"hex\");\n} else {\n    msg.payload = \"not Present\"\n}\n\nreturn msg;\n\n//msg.payload = Buffer.from(msg.payload, \"hex\");\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1040,
        "y": 560,
        "wires": [
            [
                "2325d165.a240ce"
            ]
        ]
    },
    {
        "id": "2325d165.a240ce",
        "type": "switch",
        "z": "f2d56325.6c459",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "not Present",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1250,
        "y": 560,
        "wires": [
            [
                "3d833e80.b30832"
            ],
            [
                "44cc7093.eb25d8"
            ]
        ]
    },
    {
        "id": "3d833e80.b30832",
        "type": "link out",
        "z": "f2d56325.6c459",
        "name": "5 min Service Data send",
        "links": [
            "d3db8e06.f0851"
        ],
        "x": 1355,
        "y": 540,
        "wires": []
    },
    {
        "id": "44cc7093.eb25d8",
        "type": "debug",
        "z": "f2d56325.6c459",
        "name": "BAE00TP not Present",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1440,
        "y": 580,
        "wires": []
    },
    {
        "id": "fdcdc8f0.be1e78",
        "type": "link in",
        "z": "f2d56325.6c459",
        "name": "5 minservice data return",
        "links": [
            "29fdf072.54f6"
        ],
        "x": 140,
        "y": 1000,
        "wires": [
            [
                "6fafc64c.fd803",
                "584c1614.91ef9",
                "54165345.dfc6a4",
                "bc3eaedf.767828",
                "998eb84d.560e38"
            ]
        ]
    },
    {
        "id": "6fafc64c.fd803",
        "type": "function",
        "z": "f2d56325.6c459",
        "name": "BCm Ambient pressure",
        "func": "if (msg.BNIPort === parseInt(global.get('BCM0002_AIO_TBD'),16) && msg.command === 9 && msg.LowIndex === '49' && msg.SubIndex === \"01\") {\n    msg.payload = msg.response.substr(18,11);\n} else {return;\n    \n}\nmsg.ambientPressure = \"0x\"+msg.payload.split(' ').join('');\nmsg.ambientPressureCal = (Int2Float32(Number(msg.ambientPressure))/100);\nglobal.set('BCM0002_AIO_TBD_ambientPressure',msg.ambientPressureCal);\n\n\n\nreturn msg;\n//{ payload:msg.payload.substr(15,8) };\n\nfunction Int2Float32(bytes) {\n    var sign = (bytes & 0x80000000) ? -1 : 1;\n    var exponent = ((bytes >> 23) & 0xFF) - 127;\n    var significand = (bytes & ~(-1 << 23));\n\n    if (exponent == 128) \n        return sign * ((significand) ? Number.NaN : Number.POSITIVE_INFINITY);\n\n    if (exponent == -127) {\n        if (significand === 0) return sign * 0.0;\n        exponent = -126;\n        significand /= (1 << 22);\n    } else significand = (significand | (1 << 23)) / (1 << 23);\n\n    return sign * significand * Math.pow(2, exponent);\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 1000,
        "wires": [
            [
                "6ddbb638.1f10d"
            ]
        ]
    },
    {
        "id": "3b15c99a.015d16",
        "type": "function",
        "z": "bbff57dc.1117d8",
        "name": "IEEE-754 to float",
        "func": "/* Converts from an number, string, buffer or array representing an IEEE-754 value\n * to a javascript float.\n * The following may be given in msg.payload:\n *      A string representing a number, which may be hex or binary\n *        examples, \"1735\"  \"0x02045789\"  0b01000000010010010000111111011011\n *      An integer value\n *      A four element array or buffer of 8 bit values, most significant byte first.\n*/ \n// first make a number from the given payload if necessary\nlet intValue;\nif (typeof msg.payload === \"number\") {\n    intValue = msg.payload;\n} else if (typeof msg.payload === \"string\") {\n    intValue = Number(msg.payload);\n} else if (msg.payload.length == 4) {\n    // four byte array or buffer\n    intValue = (((((msg.payload[0] << 8) + msg.payload[1]) << 8) + msg.payload[2]) << 8) + msg.payload[3];\n} else {\n    node.warn(\"Unrecognised payload type or length\");\n}\n\nmsg.payload = Int2Float32(intValue);\nreturn msg;\n\nfunction Int2Float32(bytes) {\n    var sign = (bytes & 0x80000000) ? -1 : 1;\n    var exponent = ((bytes >> 23) & 0xFF) - 127;\n    var significand = (bytes & ~(-1 << 23));\n\n    if (exponent == 128) \n        return sign * ((significand) ? Number.NaN : Number.POSITIVE_INFINITY);\n\n    if (exponent == -127) {\n        if (significand === 0) return sign * 0.0;\n        exponent = -126;\n        significand /= (1 << 22);\n    } else significand = (significand | (1 << 23)) / (1 << 23);\n\n    return sign * significand * Math.pow(2, exponent);\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 380,
        "wires": [
            [
                "8c3258e.59493a8"
            ]
        ]
    },
    {
        "id": "8c3258e.59493a8",
        "type": "debug",
        "z": "bbff57dc.1117d8",
        "name": "Value",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 859,
        "y": 380,
        "wires": []
    },
    {
        "id": "7f72dded.a52974",
        "type": "inject",
        "z": "bbff57dc.1117d8",
        "name": "1 string hex",
        "topic": "",
        "payload": "0x3f800000",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 390,
        "y": 270,
        "wires": [
            [
                "3b15c99a.015d16"
            ]
        ]
    },
    {
        "id": "3eb3db69.be2214",
        "type": "inject",
        "z": "bbff57dc.1117d8",
        "name": "-2 string hex",
        "topic": "",
        "payload": "0x3e0318b0",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 389,
        "y": 306,
        "wires": [
            [
                "3b15c99a.015d16",
                "5d63a57d.7dd43c"
            ]
        ]
    },
    {
        "id": "c651fd72.970688",
        "type": "inject",
        "z": "bbff57dc.1117d8",
        "name": "Pi string hex",
        "topic": "",
        "payload": "0x40490fdb",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 389,
        "y": 340,
        "wires": [
            [
                "3b15c99a.015d16"
            ]
        ]
    },
    {
        "id": "c1ba27e9.f788",
        "type": "inject",
        "z": "bbff57dc.1117d8",
        "name": "Pi string dec",
        "topic": "",
        "payload": "1078530011",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 386.5,
        "y": 414,
        "wires": [
            [
                "3b15c99a.015d16"
            ]
        ]
    },
    {
        "id": "cb98333.a27f5d",
        "type": "inject",
        "z": "bbff57dc.1117d8",
        "name": "Pi string binary",
        "topic": "",
        "payload": "0b01000000010010010000111111011011",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 397,
        "y": 376,
        "wires": [
            [
                "3b15c99a.015d16"
            ]
        ]
    },
    {
        "id": "558cad5b.0d453c",
        "type": "inject",
        "z": "bbff57dc.1117d8",
        "name": "Pi integer",
        "topic": "",
        "payload": "1078530011",
        "payloadType": "num",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 382,
        "y": 201,
        "wires": [
            [
                "3b15c99a.015d16"
            ]
        ]
    },
    {
        "id": "e794329a.720ca8",
        "type": "inject",
        "z": "bbff57dc.1117d8",
        "name": "Pi Array",
        "topic": "",
        "payload": "[64,73,15,219]",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 368,
        "y": 473,
        "wires": [
            [
                "3b15c99a.015d16"
            ]
        ]
    },
    {
        "id": "20688b28.a9889c",
        "type": "inject",
        "z": "bbff57dc.1117d8",
        "name": "Pi Buffer",
        "topic": "",
        "payload": "[64,73,15,219]",
        "payloadType": "bin",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 377,
        "y": 511,
        "wires": [
            [
                "3b15c99a.015d16"
            ]
        ]
    },
    {
        "id": "5d63a57d.7dd43c",
        "type": "debug",
        "z": "bbff57dc.1117d8",
        "name": "Value",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 830,
        "y": 300,
        "wires": []
    },
    {
        "id": "6ddbb638.1f10d",
        "type": "debug",
        "z": "f2d56325.6c459",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 770,
        "y": 960,
        "wires": []
    },
    {
        "id": "a9f20a3d.387a98",
        "type": "function",
        "z": "f2d56325.6c459",
        "name": "AL_ReadReq BCM Ambient Humidity",
        "func": "msg.Start = '08 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '02'; // Kommando\nmsg.IOLPort = global.get('BCM0002_AIO_TBD'); //Port Nummer\nmsg.LowIndex = '41'; //IO-Link Index \nmsg.HighIndex = '20'; //IO-Link Index (meiﬂtens 00)\nmsg.SubIndex = '01'; //IO-Link SubIndex \n//msg.Index = 'XX';\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 600,
        "wires": [
            [
                "14f5067.ae4b8fa"
            ]
        ]
    },
    {
        "id": "584c1614.91ef9",
        "type": "function",
        "z": "f2d56325.6c459",
        "name": "BCM Ambient Humidity",
        "func": "if (msg.BNIPort === parseInt(global.get('BCM0002_AIO_TBD'),16) && msg.command === 9 && msg.LowIndex === '41' && msg.SubIndex === \"01\") {\n    msg.payload = msg.response.substr(18,11);\n} else {return;\n    \n}\nmsg.ambientHumidity = \"0x\"+msg.payload.split(' ').join('');\nmsg.ambientHumidityCal = Int2Float32(Number(msg.ambientHumidity));\nglobal.set('BCM0002_AIO_TBD_ambientHumidity',msg.ambientHumidityCal);\n\n\n\nreturn msg;\n//{ payload:msg.payload.substr(15,8) };\n\nfunction Int2Float32(bytes) {\n    var sign = (bytes & 0x80000000) ? -1 : 1;\n    var exponent = ((bytes >> 23) & 0xFF) - 127;\n    var significand = (bytes & ~(-1 << 23));\n\n    if (exponent == 128) \n        return sign * ((significand) ? Number.NaN : Number.POSITIVE_INFINITY);\n\n    if (exponent == -127) {\n        if (significand === 0) return sign * 0.0;\n        exponent = -126;\n        significand /= (1 << 22);\n    } else significand = (significand | (1 << 23)) / (1 << 23);\n\n    return sign * significand * Math.pow(2, exponent);\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 1040,
        "wires": [
            [
                "ca99128.dc0e97"
            ]
        ]
    },
    {
        "id": "ca99128.dc0e97",
        "type": "debug",
        "z": "f2d56325.6c459",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 770,
        "y": 1000,
        "wires": []
    },
    {
        "id": "ee5abae1.1228c",
        "type": "function",
        "z": "f2d56325.6c459",
        "name": "AL_ReadReq BCM device temp",
        "func": "msg.Start = '08 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '02'; // Kommando\nmsg.IOLPort = global.get('BCM0002_AIO_TBD'); //Port Nummer\nmsg.LowIndex = '52'; //IO-Link Index \nmsg.HighIndex = '00'; //IO-Link Index (meiﬂtens 00)\nmsg.SubIndex = '01'; //IO-Link SubIndex \n//msg.Index = 'XX';\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 640,
        "wires": [
            [
                "14f5067.ae4b8fa"
            ]
        ]
    },
    {
        "id": "54165345.dfc6a4",
        "type": "function",
        "z": "f2d56325.6c459",
        "name": "BCm Device Temp",
        "func": "if (msg.BNIPort === parseInt(global.get('BCM0002_AIO_TBD'),16) && msg.command === 9 && msg.LowIndex === '52' && msg.SubIndex === \"01\") {\n    msg.payload = msg.response.substr(18,5);\n} else {return;\n    \n}\nmsg.tempActual = parseInt(msg.payload.split(' ').join(''),16);\nglobal.set('BCM0002_AIO_TBD_temperature_actual',msg.tempActual);\n\n\n\nreturn msg;\n//{ payload:msg.payload.substr(15,8) };",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 1080,
        "wires": [
            [
                "ea261116.17d058"
            ]
        ]
    },
    {
        "id": "ea261116.17d058",
        "type": "debug",
        "z": "f2d56325.6c459",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 770,
        "y": 1040,
        "wires": []
    },
    {
        "id": "313de984.82962e",
        "type": "function",
        "z": "f2d56325.6c459",
        "name": "AL_ReadReq BCM operating Hours",
        "func": "msg.Start = '08 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '02'; // Kommando\nmsg.IOLPort = global.get('BCM0002_AIO_TBD'); //Port Nummer\nmsg.LowIndex = '57'; //IO-Link Index \nmsg.HighIndex = '00'; //IO-Link Index (meiﬂtens 00)\nmsg.SubIndex = '01'; //IO-Link SubIndex \n//msg.Index = 'XX';\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 680,
        "wires": [
            [
                "14f5067.ae4b8fa"
            ]
        ]
    },
    {
        "id": "2b1e4742.fe634",
        "type": "function",
        "z": "f2d56325.6c459",
        "name": "AL_ReadReq BCM boot cycles",
        "func": "msg.Start = '08 00'; //Startbyte\nmsg.Revision = '02'; //Protokoll Revision 02\nmsg.Command = '02'; // Kommando\nmsg.IOLPort = global.get('BCM0002_AIO_TBD'); //Port Nummer\nmsg.LowIndex = '58'; //IO-Link Index \nmsg.HighIndex = '00'; //IO-Link Index (meiﬂtens 00)\nmsg.SubIndex = '01'; //IO-Link SubIndex \n//msg.Index = 'XX';\nmsg.PL = msg.payload; //Payload of inject\n\nmsg.hex = msg.Start +\" \"+ msg.Revision +\" \"+ msg.Command +\" \"+ msg.IOLPort +\" \"+ msg.LowIndex +\" \"+ msg.HighIndex +\" \"+ msg.SubIndex;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 720,
        "wires": [
            [
                "14f5067.ae4b8fa"
            ]
        ]
    },
    {
        "id": "bc3eaedf.767828",
        "type": "function",
        "z": "f2d56325.6c459",
        "name": "BCM operating Hours",
        "func": "if (msg.BNIPort === parseInt(global.get('BCM0002_AIO_TBD'),16) && msg.command === 9 && msg.LowIndex === '57' && msg.SubIndex === \"01\") {\n    msg.payload = msg.response.substr(18,11);\n} else {return;\n    \n}\nmsg.operatingHours = parseInt(msg.payload.split(' ').join(''),16);\nglobal.set('BCM0002_AIO_TBD_operating_hours',msg.operatingHours);\n\n\n\nreturn msg;\n//{ payload:msg.payload.substr(15,8) };",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 1120,
        "wires": [
            [
                "920fb51a.6823a"
            ]
        ]
    },
    {
        "id": "998eb84d.560e38",
        "type": "function",
        "z": "f2d56325.6c459",
        "name": "BCM Boot Cycles",
        "func": "if (msg.BNIPort === parseInt(global.get('BCM0002_AIO_TBD'),16) && msg.command === 9 && msg.LowIndex === '58' && msg.SubIndex === \"01\") {\n    msg.payload = msg.response.substr(18,11);\n} else {return;\n    \n}\nmsg.bootCycles = parseInt(msg.payload.split(' ').join(''),16);\nglobal.set('BCM0002_AIO_TBD_boot_cylce_cunter',msg.bootCycles);\n\n\n\nreturn msg;\n//{ payload:msg.payload.substr(15,8) };",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 1160,
        "wires": [
            [
                "ce540b21.71b46"
            ]
        ]
    },
    {
        "id": "920fb51a.6823a",
        "type": "debug",
        "z": "f2d56325.6c459",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 770,
        "y": 1080,
        "wires": []
    },
    {
        "id": "ce540b21.71b46",
        "type": "debug",
        "z": "f2d56325.6c459",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 770,
        "y": 1120,
        "wires": []
    }
]
